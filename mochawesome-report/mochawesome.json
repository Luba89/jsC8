{
  "stats": {
    "suites": 161,
    "tests": 223,
    "passes": 203,
    "pending": 20,
    "failures": 0,
    "start": "2020-03-18T13:00:35.600Z",
    "end": "2020-03-18T13:04:44.614Z",
    "duration": 249014,
    "testsRegistered": 224,
    "passPercent": 99.50980392156863,
    "pendingPercent": 8.928571428571429,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "8f0e3002-7b82-49c2-a9ec-699a463b8396",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "gets subscription list",
          "fullTitle": "gets subscription list",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const response = await stream.getSubscriptionList();\nchai_1.expect(response.error).to.be.false;",
          "err": {},
          "uuid": "193f0fbf-e5dd-48a6-a948-f971aad99f9a",
          "parentUUID": "8f0e3002-7b82-49c2-a9ec-699a463b8396",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "632adeed-f12f-4b22-b93b-58b21fc3d727",
          "title": "Creating a Fabric",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c8d9954a-938e-467f-bf12-8b9b2c51863a",
              "title": "using the factory",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the factory returns a Fabric instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "62fa2cc7-8030-413e-941d-e3800a4b2358",
                  "parentUUID": "c8d9954a-938e-467f-bf12-8b9b2c51863a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the factory passes any configs to the connection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 54321);",
                  "err": {},
                  "uuid": "187a8f04-0da8-48af-a224-333e18555a30",
                  "parentUUID": "c8d9954a-938e-467f-bf12-8b9b2c51863a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62fa2cc7-8030-413e-941d-e3800a4b2358",
                "187a8f04-0da8-48af-a224-333e18555a30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "618150bc-a959-4687-bbf9-add4e6ee68af",
              "title": "using the constructor",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the constructor returns a Fabric instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "6649179c-a871-4ebf-83d1-f7ea3abfa26c",
                  "parentUUID": "618150bc-a959-4687-bbf9-add4e6ee68af",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the constructor passes any configs to the connection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 43210);",
                  "err": {},
                  "uuid": "d557c078-a016-47fd-bd2c-e34cebaa47bd",
                  "parentUUID": "618150bc-a959-4687-bbf9-add4e6ee68af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6649179c-a871-4ebf-83d1-f7ea3abfa26c",
                "d557c078-a016-47fd-bd2c-e34cebaa47bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "81091b1c-218f-48b7-8f53-1b4a72a654a9",
          "title": "Configuring the driver",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "74b50eef-0191-4014-84be-1cff258ac6cb",
              "title": "with a string",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the url",
                  "fullTitle": "Configuring the driver with a string sets the url",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "830b31a8-021f-45fe-a5a6-c8af60ff7c83",
                  "parentUUID": "74b50eef-0191-4014-84be-1cff258ac6cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "830b31a8-021f-45fe-a5a6-c8af60ff7c83"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3ce66eb3-35df-4b97-a563-20386147014f",
              "title": "with headers",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "applies the headers",
                  "fullTitle": "Configuring the driver with headers applies the headers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({\n    headers: {\n        \"x-one\": \"1\",\n        \"x-two\": \"2\"\n    }\n});\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-one\", \"1\");\n        chai_1.expect(headers).to.have.property(\"x-two\", \"2\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "340e51c1-feb0-45ec-a4e8-a3c97cf3e76e",
                  "parentUUID": "3ce66eb3-35df-4b97-a563-20386147014f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "340e51c1-feb0-45ec-a4e8-a3c97cf3e76e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3a3b1167-9dc3-4b12-acbb-5fd1e2354865",
              "title": "with an c8Version",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the x-c8-version header",
                  "fullTitle": "Configuring the driver with an c8Version sets the x-c8-version header",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({ c8Version: 99999 });\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-c8-version\", \"99999\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "72f60523-6036-4752-b9ef-8c381d3a681a",
                  "parentUUID": "3a3b1167-9dc3-4b12-acbb-5fd1e2354865",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72f60523-6036-4752-b9ef-8c381d3a681a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0de62ef5-f4c9-43bc-aecc-8bc823062dbb",
              "title": "with agentOptions",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Agent = (ptcl) => function (opts) {\n    protocol = ptcl;\n    options = opts;\n    return () => null;\n};\nhttp.Agent = Agent(\"http\");\nhttps.Agent = Agent(\"https\");",
                  "err": {},
                  "uuid": "ff071c2a-ef15-4e94-aa19-5de7654d1573",
                  "parentUUID": "0de62ef5-f4c9-43bc-aecc-8bc823062dbb",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "a6a0059f-614d-4e79-91e2-f366dd9afd95",
                  "parentUUID": "0de62ef5-f4c9-43bc-aecc-8bc823062dbb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.Agent = _httpAgent;\nhttps.Agent = _httpsAgent;",
                  "err": {},
                  "uuid": "134ddc0c-3c0c-4562-a35f-373d987b7558",
                  "parentUUID": "0de62ef5-f4c9-43bc-aecc-8bc823062dbb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agentOptions to the agent",
                  "fullTitle": "Configuring the driver with agentOptions passes the agentOptions to the agent",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "new connection_1.Connection({ agentOptions: { hello: \"world\" } }); // eslint-disable-line no-new\nchai_1.expect(options).to.have.property(\"hello\", \"world\");",
                  "err": {},
                  "uuid": "dc57f056-9419-4dfd-9d6d-6a927179e1a9",
                  "parentUUID": "0de62ef5-f4c9-43bc-aecc-8bc823062dbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the built-in agent for the protocol",
                  "fullTitle": "Configuring the driver with agentOptions uses the built-in agent for the protocol",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// default: http\nnew connection_1.Connection(); // eslint-disable-line no-new\n// expect(protocol).to.equal(\"http\");\nnew connection_1.Connection(\"https://test.macrometa.io\"); // eslint-disable-line no-new\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "2772ff46-7525-4757-a067-828c32710ad5",
                  "parentUUID": "0de62ef5-f4c9-43bc-aecc-8bc823062dbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dc57f056-9419-4dfd-9d6d-6a927179e1a9",
                "2772ff46-7525-4757-a067-828c32710ad5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3686d37f-f05c-4723-a599-4281049fa5ef",
              "title": "with agent",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agent \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Request = (ptcl) => (opts) => {\n    protocol = ptcl;\n    options = opts;\n    return {\n        on() {\n            return this;\n        },\n        end() {\n            return this;\n        }\n    };\n};\nhttp.request = Request(\"http\");\nhttps.request = Request(\"https\");",
                  "err": {},
                  "uuid": "ecf36b37-92bf-468a-9c7a-bf7822bdc645",
                  "parentUUID": "3686d37f-f05c-4723-a599-4281049fa5ef",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agent \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "21706607-edad-4276-8839-68a389c0039d",
                  "parentUUID": "3686d37f-f05c-4723-a599-4281049fa5ef",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agent \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.request = _httpRequest;\nhttps.request = _httpsRequest;",
                  "err": {},
                  "uuid": "820ef45f-4220-4732-8a03-c829d878a7cd",
                  "parentUUID": "3686d37f-f05c-4723-a599-4281049fa5ef",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agent to the request function",
                  "fullTitle": "Configuring the driver with agent passes the agent to the request function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: https\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);\nagent = Symbol(\"agent\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);",
                  "err": {},
                  "uuid": "0187c06e-30c6-416e-b35f-21ebd559246e",
                  "parentUUID": "3686d37f-f05c-4723-a599-4281049fa5ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the request function for the protocol",
                  "fullTitle": "Configuring the driver with agent uses the request function for the protocol",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: http\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "6394e0f2-d00a-4353-b271-2417f1559024",
                  "parentUUID": "3686d37f-f05c-4723-a599-4281049fa5ef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "calls Agent#destroy when the connection is closed",
                  "fullTitle": "Configuring the driver with agent calls Agent#destroy when the connection is closed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = {\n    _destroyed: false,\n    destroy() {\n        this._destroyed = true;\n    }\n};\nconst conn = new connection_1.Connection({ agent });\nchai_1.expect(agent._destroyed).to.equal(false);\nconn.close();\nchai_1.expect(agent._destroyed).to.equal(true);",
                  "err": {},
                  "uuid": "6e10c890-e56e-4fb0-8a3c-7286f6c0664f",
                  "parentUUID": "3686d37f-f05c-4723-a599-4281049fa5ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0187c06e-30c6-416e-b35f-21ebd559246e",
                "6394e0f2-d00a-4353-b271-2417f1559024",
                "6e10c890-e56e-4fb0-8a3c-7286f6c0664f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "9e27326f-b0da-4958-88d0-901ba3645b44",
          "title": "Manipulating fabrics",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
          "file": "/lib/async/test/01-manipulating-fabrics.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1576,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "b81d8e03-126c-4f65-8285-57d9531bc6f7",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1534,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fabric2 = new jsC8_1.Fabric({\n    url: testUrl\n});\nawait fabric2.login(\"guest@macrometa.io\", \"guest\");\nfabric2.useTenant(\"guest\");\ncollection = fabric2.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "04efb287-156a-44af-9faa-253746b23eba",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 1529,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "86f381ca-4bf6-4be5-8ca1-b9d4e321fa8a",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\")",
              "err": {},
              "uuid": "04646828-233d-449a-9699-a6f4173d7df3",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "ee302209-70a3-45c1-a5ab-e71fb7b4ffd9",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 287,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.drop();",
              "err": {},
              "uuid": "ff54f5f9-2f23-41cc-b143-90128ea8f4a4",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating fabrics \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "ec8affda-f421-4874-9b92-6d869ffa65fe",
              "parentUUID": "9e27326f-b0da-4958-88d0-901ba3645b44",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "adf99101-3558-4737-b145-700c635e4793",
              "title": "fabric.version",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the version object when no details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when no details are required",
                  "timedOut": false,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version();\nchai_1.expect(response.server).to.equal(\"C8DB\");",
                  "err": {},
                  "uuid": "57c00872-e44a-4396-94f7-f29483bc1425",
                  "parentUUID": "adf99101-3558-4737-b145-700c635e4793",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the version object when details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when details are required",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version(true);\nchai_1.expect(response.server).to.equal(\"C8DB\");\nchai_1.expect(response.details).to.haveOwnProperty(\"architecture\");",
                  "err": {},
                  "uuid": "c9490d9f-2e79-41a1-8e01-ca9e7c5ef413",
                  "parentUUID": "adf99101-3558-4737-b145-700c635e4793",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57c00872-e44a-4396-94f7-f29483bc1425",
                "c9490d9f-2e79-41a1-8e01-ca9e7c5ef413"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 610,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ecb76b83-37bd-4b58-853c-e3d922ccced0",
              "title": "fabric.useFabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the fabric name",
                  "fullTitle": "Manipulating fabrics fabric.useFabric updates the fabric name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = \"example\";\nchai_1.expect(fabric.name).to.equal(\"_system\"); // default\nfabric.useFabric(name);\nchai_1.expect(fabric._connection).to.have.property(\"_fabricName\", name);\nchai_1.expect(fabric.name).to.equal(name);",
                  "err": {},
                  "uuid": "5befdf1b-63e9-4478-b8ea-f0560b7a0bf3",
                  "parentUUID": "ecb76b83-37bd-4b58-853c-e3d922ccced0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns itself",
                  "fullTitle": "Manipulating fabrics fabric.useFabric returns itself",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabric2 = fabric.useFabric(\"nope\");\nchai_1.expect(fabric).to.equal(fabric2);",
                  "err": {},
                  "uuid": "9dd20d34-d2ff-41d2-9009-1dacbb29dec0",
                  "parentUUID": "ecb76b83-37bd-4b58-853c-e3d922ccced0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5befdf1b-63e9-4478-b8ea-f0560b7a0bf3",
                "9dd20d34-d2ff-41d2-9009-1dacbb29dec0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "69a35de7-d810-4e98-bf8c-52781710e07c",
              "title": "fabric.edgeLocations",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gets all the edge locations",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets all the edge locations",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllEdgeLocations();\nchai_1.expect(Array.isArray(response)).to.be.true;\nchai_1.expect(response[0]).to.haveOwnProperty(\"_id\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"name\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"tags\");\nchai_1.expect(response.length).to.be.greaterThan(0);",
                  "err": {},
                  "uuid": "ce22b142-c0e9-45c6-abd7-01c70d97c0b5",
                  "parentUUID": "69a35de7-d810-4e98-bf8c-52781710e07c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets local edge location",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets local edge location",
                  "timedOut": false,
                  "duration": 363,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\nchai_1.expect(Array.isArray(response)).to.be.false;\nchai_1.expect(response).to.haveOwnProperty(\"_id\");\nchai_1.expect(response).to.haveOwnProperty(\"name\");\nchai_1.expect(response).to.haveOwnProperty(\"tags\");",
                  "err": {},
                  "uuid": "26aa6265-a1a2-4cb2-91f1-355948312515",
                  "parentUUID": "69a35de7-d810-4e98-bf8c-52781710e07c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ce22b142-c0e9-45c6-abd7-01c70d97c0b5",
                "26aa6265-a1a2-4cb2-91f1-355948312515"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 672,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "dac4994d-44d8-4946-841d-a2fe2f763e43",
              "title": "fabric.createFabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.createFabric \"after each\" hook",
                  "timedOut": false,
                  "duration": 307,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "78f8dc99-e9f8-4fd3-bccb-6c1649183cea",
                  "parentUUID": "dac4994d-44d8-4946-841d-a2fe2f763e43",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a fabric with the given name",
                  "fullTitle": "Manipulating fabrics fabric.createFabric creates a fabric with the given name",
                  "timedOut": false,
                  "duration": 613,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nconst info = await fabric.get();\nchai_1.expect(info.name).to.equal(name);",
                  "err": {},
                  "uuid": "faf1d4c3-1dc8-4276-8e51-7a5e6fd37df3",
                  "parentUUID": "dac4994d-44d8-4946-841d-a2fe2f763e43",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "adds the given users to the fabric",
                  "fullTitle": "Manipulating fabrics fabric.createFabric adds the given users to the fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "7f51ffc4-b9b1-4718-aec7-ff6bc505d5c1",
                  "parentUUID": "dac4994d-44d8-4946-841d-a2fe2f763e43",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "faf1d4c3-1dc8-4276-8e51-7a5e6fd37df3"
              ],
              "failures": [],
              "pending": [
                "7f51ffc4-b9b1-4718-aec7-ff6bc505d5c1"
              ],
              "skipped": [],
              "duration": 613,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e7b11015-98a5-4292-92f4-32496a5caad1",
              "title": "fabric.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetches the fabric description if the fabric exists",
                  "fullTitle": "Manipulating fabrics fabric.get fetches the fabric description if the fabric exists",
                  "timedOut": false,
                  "duration": 249,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await fabric.get();\nchai_1.expect(info.name).to.equal(fabric.name);\nchai_1.expect(fabric.name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "7024cca2-7e45-40bd-891f-553ff798d013",
                  "parentUUID": "e7b11015-98a5-4292-92f4-32496a5caad1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fails if the fabric does not exist",
                  "fullTitle": "Manipulating fabrics fabric.get fails if the fabric does not exist",
                  "timedOut": false,
                  "duration": 332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"__does_not_exist__\");\ntry {\n    await fabric.get();\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n    return;\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "aaa6767b-fb58-4c60-968d-a6bf676db473",
                  "parentUUID": "e7b11015-98a5-4292-92f4-32496a5caad1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7024cca2-7e45-40bd-891f-553ff798d013",
                "aaa6767b-fb58-4c60-968d-a6bf676db473"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 581,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d4820544-d0a1-42f8-8b61-cc8b1395f9cd",
              "title": "fabric.listFabrics",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of all fabrics",
                  "fullTitle": "Manipulating fabrics fabric.listFabrics returns a list of all fabrics",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics.indexOf(\"_system\")).to.be.greaterThan(-1);",
                  "err": {},
                  "uuid": "aa225929-68dd-40cb-b1bb-a6fca1ce5e52",
                  "parentUUID": "d4820544-d0a1-42f8-8b61-cc8b1395f9cd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa225929-68dd-40cb-b1bb-a6fca1ce5e52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 409,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e705082a-3336-4f03-a7ec-0e9a7df2ea99",
              "title": "fabric.listUserFabrics",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of fabrics accessible to the active user",
                  "fullTitle": "Manipulating fabrics fabric.listUserFabrics returns a list of fabrics accessible to the active user",
                  "timedOut": false,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listUserFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics[0].name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "6d3e4396-7368-43a6-a67e-61c9376241df",
                  "parentUUID": "e705082a-3336-4f03-a7ec-0e9a7df2ea99",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6d3e4396-7368-43a6-a67e-61c9376241df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 302,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "eb16d1f0-4ecc-4a90-bb4f-ab8cfe42335f",
              "title": "fabric.dropFabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric \"before each\" hook",
                  "timedOut": false,
                  "duration": 311,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});",
                  "err": {},
                  "uuid": "1d3a73e9-8cc5-4c1a-8eff-f35918f41cff",
                  "parentUUID": "eb16d1f0-4ecc-4a90-bb4f-ab8cfe42335f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given fabric from the server",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric deletes the given fabric from the server",
                  "timedOut": false,
                  "duration": 919,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.dropFabric(name);\nlet temp = new jsC8_1.Fabric().useFabric(name);\ntry {\n    await temp.get();\n}\ncatch (e) {\n    return;\n}\nfinally {\n    temp.close();\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "eae77800-bb2f-4902-b673-8688e30ed1c6",
                  "parentUUID": "eb16d1f0-4ecc-4a90-bb4f-ab8cfe42335f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eae77800-bb2f-4902-b673-8688e30ed1c6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 919,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f999d587-8d09-4f25-b5ed-33965fe89de3",
              "title": "fabric.truncate",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"before each\" hook",
                  "timedOut": false,
                  "duration": 2814,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create();\n        await collection.save({ _key: \"example\" });\n    }),\n    ...systemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create({ isSystem: true });\n        await collection.save({ _key: \"example\" });\n    })\n]);",
                  "err": {},
                  "uuid": "cbed4d26-2888-4e60-88d9-5b1168c603a6",
                  "parentUUID": "f999d587-8d09-4f25-b5ed-33965fe89de3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"after each\" hook",
                  "timedOut": false,
                  "duration": 281,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "536a9bb4-6c98-46f2-b6d7-1cb4e6803fbb",
                  "parentUUID": "f999d587-8d09-4f25-b5ed-33965fe89de3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "removes all documents from all non-system collections in the fabric",
                  "fullTitle": "Manipulating fabrics fabric.truncate removes all documents from all non-system collections in the fabric",
                  "timedOut": false,
                  "duration": 7683,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.truncate();\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    }),\n    ...systemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    })\n]);",
                  "err": {},
                  "uuid": "a746520a-18b7-4198-a8b6-b041dc4fafb8",
                  "parentUUID": "f999d587-8d09-4f25-b5ed-33965fe89de3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally truncates system collections if explicitly passed false",
                  "fullTitle": "Manipulating fabrics fabric.truncate additionally truncates system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "25202f22-3006-4591-b90d-62a1219221d3",
                  "parentUUID": "f999d587-8d09-4f25-b5ed-33965fe89de3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a746520a-18b7-4198-a8b6-b041dc4fafb8"
              ],
              "failures": [],
              "pending": [
                "25202f22-3006-4591-b90d-62a1219221d3"
              ],
              "skipped": [],
              "duration": 7683,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "af78f5c2-e441-4b8a-aa21-f3be3f4a25fd",
              "title": "fabric.validateQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate correct query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate correct query",
                  "timedOut": false,
                  "duration": 260,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.validateQuery(\"for doc in docs return doc\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "5bd1f42c-936d-4776-a459-fd3f5559df7d",
                  "parentUUID": "af78f5c2-e441-4b8a-aa21-f3be3f4a25fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate incorrect query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate incorrect query",
                  "timedOut": false,
                  "duration": 312,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    const response = await fabric.validateQuery(\"forrrr doc in docs return doc\");\n    chai_1.expect(response.error).to.be.true;\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n}",
                  "err": {},
                  "uuid": "4a0c1c9d-52e7-4d56-9614-f5fb35c203b6",
                  "parentUUID": "af78f5c2-e441-4b8a-aa21-f3be3f4a25fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5bd1f42c-936d-4776-a459-fd3f5559df7d",
                "4a0c1c9d-52e7-4d56-9614-f5fb35c203b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 572,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "bd9857aa-5579-4771-ab1d-100014a966ed",
              "title": "fabric.explainQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should explain query",
                  "fullTitle": "Manipulating fabrics fabric.explainQuery should explain query",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const queryObject = {\n    query: `for doc in ${collectionName} return doc`,\n    bindVars: {}\n};\nconst response = await fabric.explainQuery(queryObject);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "aca64f3e-6339-4496-83a1-9ca1c325920c",
                  "parentUUID": "bd9857aa-5579-4771-ab1d-100014a966ed",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aca64f3e-6339-4496-83a1-9ca1c325920c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "2d5bbfae-bf31-4956-b356-a48084a306a1",
              "title": "fabric.getCurrentQueries",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get currently running queries",
                  "fullTitle": "Manipulating fabrics fabric.getCurrentQueries should get currently running queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "2b58b987-f52d-4e30-9c79-75f36e2102b4",
                  "parentUUID": "2d5bbfae-bf31-4956-b356-a48084a306a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "2b58b987-f52d-4e30-9c79-75f36e2102b4"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "17779b18-dde5-4180-9042-0a3b30eaeab2",
              "title": "fabric.clearSlowQueries",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear slow queries",
                  "fullTitle": "Manipulating fabrics fabric.clearSlowQueries should clear slow queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "62541688-ed11-4e58-b07e-aac6f2cdfc81",
                  "parentUUID": "17779b18-dde5-4180-9042-0a3b30eaeab2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "62541688-ed11-4e58-b07e-aac6f2cdfc81"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "865ce8c9-117b-48a0-bcf3-f1ed0f7fc40a",
              "title": "fabric.terminateRunningQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should terminate running query",
                  "fullTitle": "Manipulating fabrics fabric.terminateRunningQuery should terminate running query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "f78e4bb5-5f6f-430f-8bf5-8a7e2855d8dc",
                  "parentUUID": "865ce8c9-117b-48a0-bcf3-f1ed0f7fc40a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "f78e4bb5-5f6f-430f-8bf5-8a7e2855d8dc"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "d482e64e-2f10-4881-b51d-f31766550970",
          "title": "Accessing collections",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
          "file": "/lib/async/test/02-accessing-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing collections \"before all\" hook",
              "timedOut": false,
              "duration": 2472,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\nconst collections = await fabric.listCollections(false);\nbuiltinSystemCollections = collections.map((c) => c.name);",
              "err": {},
              "uuid": "f0552e53-c8d2-4ab9-af93-af3de531383e",
              "parentUUID": "d482e64e-2f10-4881-b51d-f31766550970",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing collections \"after all\" hook",
              "timedOut": false,
              "duration": 307,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "90e0d023-27c6-4195-87d5-2614d38379f0",
              "parentUUID": "d482e64e-2f10-4881-b51d-f31766550970",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4454a11a-0b08-4ed7-b2d9-1d6a574c4928",
              "title": "fabric.collection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a DocumentCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.collection returns a DocumentCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = fabric.collection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.DocumentCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "2c2b1019-21f5-49f4-9e21-329d0d3e8cb4",
                  "parentUUID": "4454a11a-0b08-4ed7-b2d9-1d6a574c4928",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2c2b1019-21f5-49f4-9e21-329d0d3e8cb4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "742c429f-b1f3-4831-970f-0390fd81b47d",
              "title": "fabric.edgeCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an EdgeCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.edgeCollection returns an EdgeCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"tomato\";\nlet collection = fabric.edgeCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.EdgeCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "c4fd33a5-6726-498d-996a-63b222ab8e79",
                  "parentUUID": "742c429f-b1f3-4831-970f-0390fd81b47d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4fd33a5-6726-498d-996a-63b222ab8e79"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "d0abfa79-d244-4c4f-91b4-8a4bc29c9b2f",
              "title": "fabric.listCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"before all\" hook",
                  "timedOut": false,
                  "duration": 1225,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).create())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).create({ isSystem: true })\n    // )\n]);",
                  "err": {},
                  "uuid": "60c1f2a5-2207-403a-b728-a37f1e1527b1",
                  "parentUUID": "d0abfa79-d244-4c4f-91b4-8a4bc29c9b2f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"after all\" hook",
                  "timedOut": false,
                  "duration": 613,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).drop())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).drop({ isSystem: true })\n    // )\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4302834b-ba8f-4ffb-b90b-ddadcbba12b8",
                  "parentUUID": "d0abfa79-d244-4c4f-91b4-8a4bc29c9b2f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all non-system collections",
                  "fullTitle": "Accessing collections fabric.listCollections fetches information about all non-system collections",
                  "timedOut": false,
                  "duration": 310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections()\n    .then(collections => {\n    chai_1.expect(collections.length).to.equal(nonSystemCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(nonSystemCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "00357646-63e9-4aef-934d-1721b7bf80fe",
                  "parentUUID": "d0abfa79-d244-4c4f-91b4-8a4bc29c9b2f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.listCollections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections(false)\n    .then(collections => {\n    let allCollectionNames = nonSystemCollectionNames\n        // .concat(systemCollectionNames)\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(collections.length).to.be.at.least(allCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(allCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "df39489b-67e0-4142-b0b7-5380bbcadd41",
                  "parentUUID": "d0abfa79-d244-4c4f-91b4-8a4bc29c9b2f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00357646-63e9-4aef-934d-1721b7bf80fe",
                "df39489b-67e0-4142-b0b7-5380bbcadd41"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 615,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "699148ff-cf34-4a53-a755-fa5c39aba04e",
              "title": "fabric.collections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"before all\" hook",
                  "timedOut": false,
                  "duration": 929,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "af0df252-d8a0-489d-b1d6-02a8bf8398c3",
                  "parentUUID": "699148ff-cf34-4a53-a755-fa5c39aba04e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"after all\" hook",
                  "timedOut": false,
                  "duration": 919,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).drop()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).drop())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "519cf249-bbb0-4628-8a34-57c518ff68a7",
                  "parentUUID": "699148ff-cf34-4a53-a755-fa5c39aba04e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates DocumentCollection and EdgeCollection instances",
                  "fullTitle": "Accessing collections fabric.collections creates DocumentCollection and EdgeCollection instances",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections()\n    .then(collections => {\n    let documentCollections = collections\n        .filter((c) => c instanceof collection_1.DocumentCollection)\n        .sort();\n    let edgeCollections = collections\n        .filter((c) => c instanceof collection_1.EdgeCollection)\n        .sort();\n    chai_1.expect(documentCollections.length).to.equal(documentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(documentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.equal(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ac66a1f7-ee2d-442e-89c4-f459b9ad11c6",
                  "parentUUID": "699148ff-cf34-4a53-a755-fa5c39aba04e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.collections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 504,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections(false)\n    .then(collections => {\n    let documentCollections = collections.filter((c) => c instanceof collection_1.DocumentCollection);\n    let edgeCollections = collections.filter((c) => c instanceof collection_1.EdgeCollection);\n    let allDocumentCollectionNames = documentCollectionNames\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(documentCollections.length).to.be.at.least(allDocumentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(allDocumentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.be.at.least(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6a8963b3-4147-4052-a461-4e0d1ab121df",
                  "parentUUID": "699148ff-cf34-4a53-a755-fa5c39aba04e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac66a1f7-ee2d-442e-89c4-f459b9ad11c6",
                "6a8963b3-4147-4052-a461-4e0d1ab121df"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 914,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "bfe60d82-ed41-41f0-9482-ad91f8e26371",
          "title": "Accessing graphs",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
          "file": "/lib/async/test/03-accessing-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing graphs \"before all\" hook",
              "timedOut": false,
              "duration": 1846,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "6bc8786a-6ace-4b2e-a305-0c4cf74c2123",
              "parentUUID": "bfe60d82-ed41-41f0-9482-ad91f8e26371",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing graphs \"after all\" hook",
              "timedOut": false,
              "duration": 306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "b8b360eb-db8c-4a2f-8aa8-00a8d9ec3199",
              "parentUUID": "bfe60d82-ed41-41f0-9482-ad91f8e26371",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "ac20030f-6c0c-49fa-8b1f-4c6530b91065",
              "title": "fabric.graph",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Graph instance",
                  "fullTitle": "Accessing graphs fabric.graph returns a Graph instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet graph = fabric.graph(name);\nchai_1.expect(graph).to.be.an.instanceof(graph_1.Graph);\nchai_1.expect(graph)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "d69a61f0-229c-4bd0-9abc-acb93ff1426e",
                  "parentUUID": "ac20030f-6c0c-49fa-8b1f-4c6530b91065",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d69a61f0-229c-4bd0-9abc-acb93ff1426e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "0f3fa6a8-1fe0-4ace-b8c3-6d0d9ccd5a79",
              "title": "fabric.listGraphs",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 1470,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        })),\n        isSmart: true,\n        options: {\n            numberOfShards: 1,\n            smartGraphAttribute: \"test\"\n        },\n        orphanCollections: []\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "144ecc67-7f2a-4b12-8683-8af82b0cf395",
                  "parentUUID": "0f3fa6a8-1fe0-4ace-b8c3-6d0d9ccd5a79",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 1213,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "6c4f8457-2c31-4bfe-9f2d-4919c02964cd",
                  "parentUUID": "0f3fa6a8-1fe0-4ace-b8c3-6d0d9ccd5a79",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all graphs",
                  "fullTitle": "Accessing graphs fabric.listGraphs fetches information about all graphs",
                  "timedOut": false,
                  "duration": 321,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listGraphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g._key).sort()).to.eql(graphNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "845054ee-671b-4822-8618-6ff954e615ac",
                  "parentUUID": "0f3fa6a8-1fe0-4ace-b8c3-6d0d9ccd5a79",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "845054ee-671b-4822-8618-6ff954e615ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 321,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "f2a8d8eb-eb72-4a73-abfc-6c44e8eaeef1",
              "title": "fabric.graphs",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 1271,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        }))\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b2482e62-795c-45f8-96cf-c09abb29280a",
                  "parentUUID": "f2a8d8eb-eb72-4a73-abfc-6c44e8eaeef1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 1223,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f4c8a426-10ee-4579-b21b-e2a07d397146",
                  "parentUUID": "f2a8d8eb-eb72-4a73-abfc-6c44e8eaeef1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates Graph instances",
                  "fullTitle": "Accessing graphs fabric.graphs creates Graph instances",
                  "timedOut": false,
                  "duration": 327,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .graphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g.name).sort()).to.eql(graphNames);\n    graphs.forEach((graph) => chai_1.expect(graph).to.be.an.instanceof(graph_1.Graph));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ba27aaa0-c462-4aa8-8104-9c11804bd170",
                  "parentUUID": "f2a8d8eb-eb72-4a73-abfc-6c44e8eaeef1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba27aaa0-c462-4aa8-8104-9c11804bd170"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 327,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "89c387b7-adda-4ae1-93d8-04b04ed6cad6",
          "title": "Transactions",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/04-transactions.js",
          "file": "/lib/async/test/04-transactions.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Transactions \"before all\" hook",
              "timedOut": false,
              "duration": 1226,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "2bbba272-31a8-464b-b3b4-804ea9066c78",
              "parentUUID": "89c387b7-adda-4ae1-93d8-04b04ed6cad6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Transactions \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "d1f0ad39-7d97-4216-b83f-65e6f0b9c3f3",
              "parentUUID": "89c387b7-adda-4ae1-93d8-04b04ed6cad6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b8f5731d-9017-4cb4-b19c-7b1ee174a774",
              "title": "fabric.transaction",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/04-transactions.js",
              "file": "/lib/async/test/04-transactions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a transaction and return the result",
                  "fullTitle": "Transactions fabric.transaction should execute a transaction and return the result",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await fabric.transaction([], \"function (params) {return params;}\", \"test\");\nchai_1.expect(result).to.equal(\"test\");",
                  "err": {},
                  "uuid": "ee0a9208-f082-4b0b-80af-405e1e8af536",
                  "parentUUID": "b8f5731d-9017-4cb4-b19c-7b1ee174a774",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee0a9208-f082-4b0b-80af-405e1e8af536"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "27554b70-43b0-4bee-845d-834fb752253a",
          "title": "C8QL queries",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/05-c8ql-queries.js",
          "file": "/lib/async/test/05-c8ql-queries.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL queries \"before all\" hook",
              "timedOut": false,
              "duration": 1841,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "43b8c092-55e8-4b92-bc66-b7cd7d5a4978",
              "parentUUID": "27554b70-43b0-4bee-845d-834fb752253a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL queries \"after all\" hook",
              "timedOut": false,
              "duration": 304,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "c64eeddb-96d7-47f3-815c-c83cef3db827",
              "parentUUID": "27554b70-43b0-4bee-845d-834fb752253a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
              "title": "fabric.query",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\")\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3403a379-3c00-42ad-acac-68caabeb5929",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR i IN no RETURN i\")\n    .then(() => {\n    chai_1.expect.fail();\n    done();\n})\n    .catch(err => {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n    done();\n});",
                  "err": {},
                  "uuid": "4c06694b-240f-41d1-a6c4-d03c61cb4413",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error (async await)",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error (async await)",
                  "timedOut": false,
                  "duration": 294,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.query(\"FOR i IN no RETURN i\");\n    chai_1.expect.fail();\n}\ncatch (err) {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n}",
                  "err": {},
                  "uuid": "1bd1c8ea-8084-46ef-8577-9f0bc9f4021e",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 318,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "7aa41a66-3684-473a-927e-029d4762bcc0",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", undefined, {\n    batchSize: 2,\n    count: true\n})\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "671530f4-a7d6-488c-80df-01b7b7a03376",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports AQB queries",
                  "fullTitle": "C8QL queries fabric.query supports AQB queries",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ toC8QL: () => \"RETURN 42\" })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(42);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "bdfe3ad1-c4ce-4f9f-af50-7d18041832c7",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports query objects",
                  "fullTitle": "C8QL queries fabric.query supports query objects",
                  "timedOut": false,
                  "duration": 314,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN 1337\", bindVars: {} })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(1337);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3230356b-c691-4863-aed6-5d55fd05a311",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries",
                  "fullTitle": "C8QL queries fabric.query supports compact queries",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN @potato\", bindVars: { potato: \"tomato\" } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(\"tomato\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8c8f47dc-943d-42aa-9544-6f0017774d97",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 299,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "bf074872-a2f4-4628-aff5-2381125851af",
                  "parentUUID": "7b7f29db-18d5-48c4-bd2f-cee329360fc5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3403a379-3c00-42ad-acac-68caabeb5929",
                "4c06694b-240f-41d1-a6c4-d03c61cb4413",
                "1bd1c8ea-8084-46ef-8577-9f0bc9f4021e",
                "7aa41a66-3684-473a-927e-029d4762bcc0",
                "671530f4-a7d6-488c-80df-01b7b7a03376",
                "bdfe3ad1-c4ce-4f9f-af50-7d18041832c7",
                "3230356b-c691-4863-aed6-5d55fd05a311",
                "8c8f47dc-943d-42aa-9544-6f0017774d97",
                "bf074872-a2f4-4628-aff5-2381125851af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2753,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d7d78299-a09a-4257-9092-dffd5522884c",
              "title": "c8ql",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "correctly handles simple parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles simple parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let values = [\n    0,\n    42,\n    -1,\n    null,\n    undefined,\n    true,\n    false,\n    \"\",\n    \"string\",\n    [1, 2, 3],\n    { a: \"b\" }\n];\nlet query = jsC8_1.c8ql `\n        A ${values[0]} B ${values[1]} C ${values[2]} D ${values[3]} E ${values[4]} F ${values[5]}\n        G ${values[6]} H ${values[7]} I ${values[8]} J ${values[9]} K ${values[10]} EOF\n      `;\nchai_1.expect(query.query).to.equal(`\n        A @value0 B @value1 C @value2 D @value3 E @value4 F @value5\n        G @value6 H @value7 I @value8 J @value9 K @value10 EOF\n      `);\nlet bindVarNames = Object.keys(query.bindVars).sort((a, b) => (+a.substr(5) > +b.substr(5) ? 1 : -1));\nchai_1.expect(bindVarNames).to.eql([\n    \"value0\",\n    \"value1\",\n    \"value2\",\n    \"value3\",\n    \"value4\",\n    \"value5\",\n    \"value6\",\n    \"value7\",\n    \"value8\",\n    \"value9\",\n    \"value10\"\n]);\nchai_1.expect(bindVarNames.map(k => query.bindVars[k])).to.eql(values);",
                  "err": {},
                  "uuid": "83ab4060-74d4-4d64-9280-9c815e549375",
                  "parentUUID": "d7d78299-a09a-4257-9092-dffd5522884c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles jsC8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles jsC8 collection parameters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(\"potato\");\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"potato\");",
                  "err": {},
                  "uuid": "0c6bcc96-c43a-44c2-b41e-d927b431d805",
                  "parentUUID": "d7d78299-a09a-4257-9092-dffd5522884c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles C8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles C8 collection parameters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "class C8Collection {\n    constructor() {\n        this.isC8Collection = true;\n        this.name = \"tomato\";\n    }\n}\nlet collection = new C8Collection();\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"tomato\");",
                  "err": {},
                  "uuid": "55c1075d-8879-45d6-a755-d85046003bcd",
                  "parentUUID": "d7d78299-a09a-4257-9092-dffd5522884c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83ab4060-74d4-4d64-9280-9c815e549375",
                "0c6bcc96-c43a-44c2-b41e-d927b431d805",
                "55c1075d-8879-45d6-a755-d85046003bcd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "8ac221d4-e299-4427-8049-1dd646a4c9e5",
          "title": "Route API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
          "file": "/lib/async/test/07-routes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Route API \"before all\" hook",
              "timedOut": false,
              "duration": 2111,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\ncollection = fabric.collection(`c${Date.now()}`);\nawait collection.create();",
              "err": {},
              "uuid": "42a6367c-dedc-4cdc-a679-0a2a72821ed4",
              "parentUUID": "8ac221d4-e299-4427-8049-1dd646a4c9e5",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Route API \"before each\" hook",
              "timedOut": false,
              "duration": 303,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.truncate();",
              "err": {},
              "uuid": "c5ee3588-4419-4abd-828d-526c6fe062c3",
              "parentUUID": "8ac221d4-e299-4427-8049-1dd646a4c9e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Route API \"after all\" hook",
              "timedOut": false,
              "duration": 303,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "4eb47096-37ad-4cc4-9fd6-59701066c7fe",
              "parentUUID": "8ac221d4-e299-4427-8049-1dd646a4c9e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0219eafc-a427-4e9f-8185-191582772b76",
              "title": "route.route",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should concat path",
                  "fullTitle": "Route API route.route should concat path",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const route = fabric.route(\"/api\").route(\"/version\");\nchai_1.expect(route).to.have.property(\"_path\", \"/api/version\");",
                  "err": {},
                  "uuid": "558b06cc-2fac-4f06-896e-e3fc0c0f7cf3",
                  "parentUUID": "0219eafc-a427-4e9f-8185-191582772b76",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "558b06cc-2fac-4f06-896e-e3fc0c0f7cf3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a17dbf59-ed29-47a5-a9c2-508b55bfebdf",
              "title": "route.post",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.post should passes body",
                  "timedOut": false,
                  "duration": 254,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${collection.name}`)\n    .post({ foo: \"bar\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c75c607d-ea4f-45e5-a57a-61daa7c4f32f",
                  "parentUUID": "a17dbf59-ed29-47a5-a9c2-508b55bfebdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c75c607d-ea4f-45e5-a57a-61daa7c4f32f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 254,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b3a5ffe2-beca-42ba-b313-352e04cd8365",
              "title": "route.put",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.put \"before each\" hook",
                  "timedOut": false,
                  "duration": 261,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a3fc4935-74d5-4b00-90b0-8f282e1a5a97",
                  "parentUUID": "b3a5ffe2-beca-42ba-b313-352e04cd8365",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.put should passes body",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .put({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "1a185343-ae6f-47b8-b8a2-3214d640fc2c",
                  "parentUUID": "b3a5ffe2-beca-42ba-b313-352e04cd8365",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a185343-ae6f-47b8-b8a2-3214d640fc2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 308,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "77c89d6d-2b61-43e8-aea5-a7c91baab3ff",
              "title": "route.patch",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.patch \"before each\" hook",
                  "timedOut": false,
                  "duration": 268,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "608ca809-c679-420f-a6b4-6d8119296c49",
                  "parentUUID": "77c89d6d-2b61-43e8-aea5-a7c91baab3ff",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.patch should passes body",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .patch({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "72cf0020-0a39-43a0-923c-d82b5b66f49b",
                  "parentUUID": "77c89d6d-2b61-43e8-aea5-a7c91baab3ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "72cf0020-0a39-43a0-923c-d82b5b66f49b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "166389d4-ca8a-4778-828a-71227c796c1b",
              "title": "route.delete",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.delete \"before each\" hook",
                  "timedOut": false,
                  "duration": 306,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c2f288e7-5467-448f-94f8-7bdeed42c0a8",
                  "parentUUID": "166389d4-ca8a-4778-828a-71227c796c1b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.delete should be executed using the route path",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .delete()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "55070ccf-8683-46a8-bc95-816b47e65c26",
                  "parentUUID": "166389d4-ca8a-4778-828a-71227c796c1b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55070ccf-8683-46a8-bc95-816b47e65c26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 309,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3527e01c-b570-4286-9947-c2962a1a9490",
              "title": "route.head",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.head \"before each\" hook",
                  "timedOut": false,
                  "duration": 309,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "94b00bf3-e1d5-4487-a707-8f77c83368ea",
                  "parentUUID": "3527e01c-b570-4286-9947-c2962a1a9490",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.head should be executed using the route path",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .head()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"statusCode\", 200);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e2c57da0-56ed-4b52-a44d-5c934b4d783f",
                  "parentUUID": "3527e01c-b570-4286-9947-c2962a1a9490",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2c57da0-56ed-4b52-a44d-5c934b4d783f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "73b55dc7-e033-411e-a5b6-03bbb75378e9",
          "title": "Cursor API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
          "file": "/lib/async/test/08-cursors.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Cursor API \"before all\" hook",
              "timedOut": false,
              "duration": 1227,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "d82b26bc-f828-4845-a7de-7f8dbd7f3db0",
              "parentUUID": "73b55dc7-e033-411e-a5b6-03bbb75378e9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Cursor API \"before each\" hook",
              "timedOut": false,
              "duration": 304,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cursor = await fabric.query(c8qlQuery);",
              "err": {},
              "uuid": "e3fb4681-4c27-4600-9026-92845d229a36",
              "parentUUID": "73b55dc7-e033-411e-a5b6-03bbb75378e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Cursor API \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "1a4b32e4-e5ea-4fc0-8bf6-79073512aeb5",
              "parentUUID": "73b55dc7-e033-411e-a5b6-03bbb75378e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7c6a050f-9973-40cf-bb43-75613310075e",
              "title": "cursor.all",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an Array of all results",
                  "fullTitle": "Cursor API cursor.all returns an Array of all results",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(vals => {\n    chai_1.expect(vals).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "5b55fbc1-c1fc-4137-b949-18d6c8c51ee8",
                  "parentUUID": "7c6a050f-9973-40cf-bb43-75613310075e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5b55fbc1-c1fc-4137-b949-18d6c8c51ee8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d3265781-fb94-4710-b972-f12020fc8fd3",
              "title": "cursor.next",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the next result of the Cursor",
                  "fullTitle": "Cursor API cursor.next returns the next result of the Cursor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.equal(0);\n    return cursor.next();\n})\n    .then(val => {\n    chai_1.expect(val).to.equal(1);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c0266866-8507-477b-9e37-318e26eb1aad",
                  "parentUUID": "d3265781-fb94-4710-b972-f12020fc8fd3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c0266866-8507-477b-9e37-318e26eb1aad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
              "title": "cursor.hasNext",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the Cursor has more results",
                  "fullTitle": "Cursor API cursor.hasNext returns true if the Cursor has more results",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(cursor.hasNext()).to.equal(true);\ncursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.be.a(\"number\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ff5bd46e-aa96-404a-92ac-a94dbd9e2564",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the Cursor is empty",
                  "fullTitle": "Cursor API cursor.hasNext returns false if the Cursor is empty",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(() => {\n    chai_1.expect(cursor.hasNext()).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "7cdd9c1b-6ed9-46c6-8483-fe00dca27ba6",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true after first batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns true after first batch is consumed",
                  "timedOut": false,
                  "duration": 357,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(c8qlQuery, {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor.next();\n    chai_1.expect(cursor._result.length).to.equal(0);\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "acd0d2f8-6ecb-4c09-a725-420ccb0c8245",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last batch is consumed",
                  "timedOut": false,
                  "duration": 860,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR i In 0..1 RETURN i\", {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8458a25d-d5bf-468a-9785-d9a1e36f0e12",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR i In 0..1 RETURN i\")\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(2);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(1);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f511fbbe-ac71-40f3-82e7-5a136cff43b6",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 404 after timeout",
                  "fullTitle": "Cursor API cursor.hasNext returns 404 after timeout",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "3baa0381-63f8-46d8-8fb6-178d3c1984c4",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed (with large amount of results)",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed (with large amount of results)",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "1f961582-3f18-4507-8219-9fab138be72b",
                  "parentUUID": "45c13652-cd65-4fd6-ac94-23b13d7ed6db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff5bd46e-aa96-404a-92ac-a94dbd9e2564",
                "7cdd9c1b-6ed9-46c6-8483-fe00dca27ba6",
                "acd0d2f8-6ecb-4c09-a725-420ccb0c8245",
                "8458a25d-d5bf-468a-9785-d9a1e36f0e12",
                "f511fbbe-ac71-40f3-82e7-5a136cff43b6"
              ],
              "failures": [],
              "pending": [
                "3baa0381-63f8-46d8-8fb6-178d3c1984c4",
                "1f961582-3f18-4507-8219-9fab138be72b"
              ],
              "skipped": [],
              "duration": 1528,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8af27f89-2bfd-4d8d-989e-e24081c67da7",
              "title": "cursor.each",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes the callback for each value",
                  "fullTitle": "Cursor API cursor.each invokes the callback for each value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each(value => {\n    results.push(value);\n})\n    .then(() => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f3c8f077-80ed-4385-9a7a-020e649a70d1",
                  "parentUUID": "8af27f89-2bfd-4d8d-989e-e24081c67da7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "aborts if the callback returns false",
                  "fullTitle": "Cursor API cursor.each aborts if the callback returns false",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each((value) => {\n    results.push(value);\n    if (value === 5)\n        return false;\n    return;\n})\n    .then(() => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e6deb34c-718d-4b2d-9394-5d7dd5b22302",
                  "parentUUID": "8af27f89-2bfd-4d8d-989e-e24081c67da7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f3c8f077-80ed-4385-9a7a-020e649a70d1",
                "e6deb34c-718d-4b2d-9394-5d7dd5b22302"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7557a8fa-e2a2-4f78-8b08-6bae2e6d4a07",
              "title": "cursor.every",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the callback returns a truthy value for every item",
                  "fullTitle": "Cursor API cursor.every returns true if the callback returns a truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    if (results.indexOf(value) !== -1)\n        return false;\n    results.push(value);\n    return true;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "9063ecea-6805-4fe5-87f9-f6c38343bb88",
                  "parentUUID": "7557a8fa-e2a2-4f78-8b08-6bae2e6d4a07",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the callback returns a non-truthy value for any item",
                  "fullTitle": "Cursor API cursor.every returns false if the callback returns a non-truthy value for any item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    results.push(value);\n    return value < 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "141795e8-59f0-4f5f-9cb1-a937152481c1",
                  "parentUUID": "7557a8fa-e2a2-4f78-8b08-6bae2e6d4a07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9063ecea-6805-4fe5-87f9-f6c38343bb88",
                "141795e8-59f0-4f5f-9cb1-a937152481c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "71d5d6d2-77a8-4bcb-9e23-d528fa4ee097",
              "title": "cursor.some",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns false if the callback returns a non-truthy value for every item",
                  "fullTitle": "Cursor API cursor.some returns false if the callback returns a non-truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    if (results.indexOf(value) !== -1)\n        return true;\n    results.push(value);\n    return false;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "0a130642-374f-476f-943c-c772e34b16a8",
                  "parentUUID": "71d5d6d2-77a8-4bcb-9e23-d528fa4ee097",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if the callback returns a truthy value for any item",
                  "fullTitle": "Cursor API cursor.some returns true if the callback returns a truthy value for any item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    results.push(value);\n    return value >= 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "cee88773-8c51-4364-bdad-9a7e1bced630",
                  "parentUUID": "71d5d6d2-77a8-4bcb-9e23-d528fa4ee097",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a130642-374f-476f-943c-c772e34b16a8",
                "cee88773-8c51-4364-bdad-9a7e1bced630"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8979d805-d9ef-440c-bcc7-d330988ad60a",
              "title": "cursor.map",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "maps all result values over the callback",
                  "fullTitle": "Cursor API cursor.map maps all result values over the callback",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .map(value => value * 2)\n    .then(results => {\n    chai_1.expect(results).to.eql(c8qlResult.map(value => value * 2));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c3378654-cb64-4e15-a165-b14f7e43555c",
                  "parentUUID": "8979d805-d9ef-440c-bcc7-d330988ad60a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3378654-cb64-4e15-a165-b14f7e43555c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7724b008-a705-4634-a6c7-8614423cf372",
              "title": "cursor.reduce",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "reduces the result values with the callback",
                  "fullTitle": "Cursor API cursor.reduce reduces the result values with the callback",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .reduce((a, b) => a + b)\n    .then(result => {\n    chai_1.expect(result).to.eql(c8qlResult.reduce((a, b) => a + b));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "77776f4f-5f0a-41aa-8203-f4ac8eedcb7f",
                  "parentUUID": "7724b008-a705-4634-a6c7-8614423cf372",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "77776f4f-5f0a-41aa-8203-f4ac8eedcb7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "73c2c477-e5dc-4b25-a3dc-16ed88a37b01",
              "title": "cursor.delete",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the cursor",
                  "fullTitle": "Cursor API cursor.delete should delete the cursor",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "1be1d21b-c4d0-4753-bbaa-e4660b81447f",
                  "parentUUID": "73c2c477-e5dc-4b25-a3dc-16ed88a37b01",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "1be1d21b-c4d0-4753-bbaa-e4660b81447f"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "0c543227-1fa3-4fb6-ac31-5713e5e85dc4",
          "title": "Collection metadata",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
          "file": "/lib/async/test/09-collection-metadata.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Collection metadata \"before all\" hook",
              "timedOut": false,
              "duration": 2146,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "94eb7b31-74bf-47d4-b9cb-83aaa72dfafb",
              "parentUUID": "0c543227-1fa3-4fb6-ac31-5713e5e85dc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Collection metadata \"after all\" hook",
              "timedOut": false,
              "duration": 340,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(dbName);",
              "err": {},
              "uuid": "a4fee219-ee22-4f4a-a896-1cf1c428f58a",
              "parentUUID": "0c543227-1fa3-4fb6-ac31-5713e5e85dc4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b8ef58c0-9bc8-4be7-bc5e-b4d3e48bcb61",
              "title": "collection.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.get should return information about a collection",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await collection.get();\nchai_1.expect(info).to.have.property(\"name\", collectionName);\nchai_1.expect(info).to.have.property(\"isSystem\", false);\nchai_1.expect(info).to.have.property(\"status\", 3); // loaded\nchai_1.expect(info).to.have.property(\"type\", 2); // document collection",
                  "err": {},
                  "uuid": "4a73536b-8123-4576-bcd4-f3c1de19e616",
                  "parentUUID": "b8ef58c0-9bc8-4be7-bc5e-b4d3e48bcb61",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw if collection does not exist",
                  "fullTitle": "Collection metadata collection.get should throw if collection does not exist",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.collection(\"no\").get();\n}\ncatch (e) {\n    chai_1.expect(e).to.have.property(\"errorNum\", collection_1.COLLECTION_NOT_FOUND);\n    return;\n}\nchai_1.expect.fail(\"should throw\");",
                  "err": {},
                  "uuid": "6b4cdebc-8a21-4e70-8d1d-d763c3feb0cb",
                  "parentUUID": "b8ef58c0-9bc8-4be7-bc5e-b4d3e48bcb61",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a73536b-8123-4576-bcd4-f3c1de19e616",
                "6b4cdebc-8a21-4e70-8d1d-d763c3feb0cb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 614,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6dac8ae2-8393-4af3-b09d-9d9d4024b688",
              "title": "collection.exists",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if collection exists",
                  "fullTitle": "Collection metadata collection.exists should return true if collection exists",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.exists();\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "eeb605e6-7f0f-4b7e-9e1b-8b79a6362a1c",
                  "parentUUID": "6dac8ae2-8393-4af3-b09d-9d9d4024b688",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if collection does not exist",
                  "fullTitle": "Collection metadata collection.exists should return false if collection does not exist",
                  "timedOut": false,
                  "duration": 252,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric.collection(\"no\").exists();\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "2a35bed8-d272-4cf8-946b-bf352694d6da",
                  "parentUUID": "6dac8ae2-8393-4af3-b09d-9d9d4024b688",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eeb605e6-7f0f-4b7e-9e1b-8b79a6362a1c",
                "2a35bed8-d272-4cf8-946b-bf352694d6da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 555,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "9a8578fc-5a1e-474d-8e06-043247fe8f52",
              "title": "collection.properties",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return properties of a collection",
                  "fullTitle": "Collection metadata collection.properties should return properties of a collection",
                  "timedOut": false,
                  "duration": 249,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .properties()\n    .then(properties => {\n    chai_1.expect(properties).to.have.property(\"name\", collectionName);\n    chai_1.expect(properties).to.have.property(\"waitForSync\", false);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "868cb1b7-823c-4118-8c04-9889af79cec2",
                  "parentUUID": "9a8578fc-5a1e-474d-8e06-043247fe8f52",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "868cb1b7-823c-4118-8c04-9889af79cec2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 249,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "77ed1e72-e02f-4804-8620-4ad0112d3bb4",
              "title": "collection.count",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.count should return information about a collection",
                  "timedOut": false,
                  "duration": 257,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .count()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", collectionName);\n    chai_1.expect(info).to.have.property(\"count\", 0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a193895b-b0dd-4802-b15e-df7434495376",
                  "parentUUID": "77ed1e72-e02f-4804-8620-4ad0112d3bb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a193895b-b0dd-4802-b15e-df7434495376"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 257,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "71be690c-615c-4940-9885-c532b73f8977",
          "title": "Manipulating collections",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
          "file": "/lib/async/test/10-manipulating-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating collections \"before all\" hook",
              "timedOut": false,
              "duration": 1969,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "a1ab66f7-cfc4-46a2-8e5f-a1866b3a0148",
              "parentUUID": "71be690c-615c-4940-9885-c532b73f8977",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating collections \"before each\" hook",
              "timedOut": false,
              "duration": 304,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`collection${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "fbdf6638-6622-4a94-b43d-9b52e6825d34",
              "parentUUID": "71be690c-615c-4940-9885-c532b73f8977",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating collections \"after all\" hook",
              "timedOut": false,
              "duration": 294,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "72bec8e9-d8e9-483b-8817-63628cdacadd",
              "parentUUID": "71be690c-615c-4940-9885-c532b73f8977",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating collections \"after each\" hook",
              "timedOut": false,
              "duration": 614,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .get()\n    .then(() => {\n    collection\n        .drop()\n        .then(() => void done())\n        .catch(done);\n})\n    .catch(() => void done());",
              "err": {},
              "uuid": "b8647b7e-3cc0-426f-8208-7fcf5a2045a9",
              "parentUUID": "71be690c-615c-4940-9885-c532b73f8977",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f49107a8-08ab-4f29-8f62-60ce1fdcf2ad",
              "title": "collection.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new document collection",
                  "timedOut": false,
                  "duration": 608,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "28cf9117-d5ca-4538-9b99-2500526cd209",
                  "parentUUID": "f49107a8-08ab-4f29-8f62-60ce1fdcf2ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local document collection",
                  "timedOut": false,
                  "duration": 603,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "442aafaa-e40f-40cd-b41e-81790197b3e2",
                  "parentUUID": "f49107a8-08ab-4f29-8f62-60ce1fdcf2ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new edge collection",
                  "timedOut": false,
                  "duration": 605,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "21bf2f82-2b99-4a88-a93e-8f6fa982bcfb",
                  "parentUUID": "f49107a8-08ab-4f29-8f62-60ce1fdcf2ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local edge collection",
                  "timedOut": false,
                  "duration": 614,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d257008b-fb29-43f1-b1ea-574ad5320fe1",
                  "parentUUID": "f49107a8-08ab-4f29-8f62-60ce1fdcf2ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "28cf9117-d5ca-4538-9b99-2500526cd209",
                "442aafaa-e40f-40cd-b41e-81790197b3e2",
                "21bf2f82-2b99-4a88-a93e-8f6fa982bcfb",
                "d257008b-fb29-43f1-b1ea-574ad5320fe1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2430,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "83ced703-a41d-400e-a505-ee76b0950634",
              "title": "collection.rename",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should rename a collection",
                  "fullTitle": "Manipulating collections collection.rename should rename a collection",
                  "timedOut": false,
                  "duration": 616,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(\"/_admin/server/role\")\n    .get()\n    .then(res => {\n    if (res.body.role !== \"SINGLE\")\n        return;\n    const name = `renamecollection${Date.now()}`;\n    return collection.rename(name).then(info => {\n        chai_1.expect(info).to.have.property(\"name\", name);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f5b87756-c2c5-4f37-97b2-e416af541e5e",
                  "parentUUID": "83ced703-a41d-400e-a505-ee76b0950634",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5b87756-c2c5-4f37-97b2-e416af541e5e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 616,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "62f861aa-f0e8-4981-8494-06e7a9d94377",
              "title": "collection.truncate",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should truncate a non-empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should truncate a non-empty collection",
                  "timedOut": false,
                  "duration": 699,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.save({}).then(() => {\n    return collection\n        .truncate()\n        .then(() => {\n        collection.count().then(info => {\n            chai_1.expect(info).to.have.property(\"name\", collection.name);\n            chai_1.expect(info).to.have.property(\"count\", 0);\n        });\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "f8de3407-92cb-4f9e-a9f5-90d42b51d851",
                  "parentUUID": "62f861aa-f0e8-4981-8494-06e7a9d94377",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow truncating a empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should allow truncating a empty collection",
                  "timedOut": false,
                  "duration": 612,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.truncate().then(() => {\n    return collection\n        .count()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"count\", 0);\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "31495112-f890-4d50-9838-e2b8d5a6324e",
                  "parentUUID": "62f861aa-f0e8-4981-8494-06e7a9d94377",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8de3407-92cb-4f9e-a9f5-90d42b51d851",
                "31495112-f890-4d50-9838-e2b8d5a6324e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1311,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4af8f78b-ce01-43a6-b9d3-588e0c12c37f",
              "title": "collection.drop",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop a collection",
                  "fullTitle": "Manipulating collections collection.drop should drop a collection",
                  "timedOut": false,
                  "duration": 619,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.drop().then(() => {\n    return collection\n        .get()\n        .then(done)\n        .catch(err => {\n        chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n        void done();\n    });\n});",
                  "err": {},
                  "uuid": "6150e063-170c-45a6-aa11-e1674fa267fe",
                  "parentUUID": "4af8f78b-ce01-43a6-b9d3-588e0c12c37f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6150e063-170c-45a6-aa11-e1674fa267fe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 619,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7ee537bd-6896-4357-9809-66f256c08c94",
              "title": "collection.onChange",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the message on collection change",
                  "fullTitle": "Manipulating collections collection.onChange should get the message on collection change",
                  "timedOut": false,
                  "duration": 1852,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const callbackObj = {\n    onopen: () => {\n        collection.save({ name: \"Anthony\", lastname: \"Gonsalvis\" });\n    },\n    onmessage: (msg) => {\n        console.log(\"msg=>\", msg);\n        done();\n    },\n    onerror: (err) => {\n        console.log(\"Connection Error->\", err);\n        chai_1.expect.fail(\"Websocket connection error\");\n    },\n    onclose: () => console.log(\"Websoket connection closed\")\n};\ncollection.onChange(callbackObj, testUrl.substring(8));",
                  "err": {},
                  "uuid": "0489ee39-1fcb-4b0e-bef3-f848f0f500f8",
                  "parentUUID": "7ee537bd-6896-4357-9809-66f256c08c94",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0489ee39-1fcb-4b0e-bef3-f848f0f500f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1852,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "8c519224-ef07-4d2a-9d31-4ddd69275b1b",
          "title": "Managing indexes",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
          "file": "/lib/async/test/11-managing-indexes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Managing indexes \"before all\" hook",
              "timedOut": false,
              "duration": 2108,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "c16a77af-57e3-4493-9d81-5f5038dd4467",
              "parentUUID": "8c519224-ef07-4d2a-9d31-4ddd69275b1b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Managing indexes \"after all\" hook",
              "timedOut": false,
              "duration": 302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "cf1201c6-437a-48a5-ba6c-b135839ce45a",
              "parentUUID": "8c519224-ef07-4d2a-9d31-4ddd69275b1b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "82e6ce43-1290-465b-b5cc-acac57693aa0",
              "title": "collection.createIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a index of given type",
                  "fullTitle": "Managing indexes collection.createIndex should create a index of given type",
                  "timedOut": false,
                  "duration": 349,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createIndex({\n    type: \"hash\",\n    fields: [\"value0\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value0\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "331690a7-ee29-4e57-8fa7-ff99af25b7a8",
                  "parentUUID": "82e6ce43-1290-465b-b5cc-acac57693aa0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "331690a7-ee29-4e57-8fa7-ff99af25b7a8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 349,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "33472324-a867-4aec-8808-f21e54de270c",
              "title": "collection.createHashIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a hash index",
                  "fullTitle": "Managing indexes collection.createHashIndex should create a hash index",
                  "timedOut": false,
                  "duration": 254,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "1ab3b950-2e1f-4be1-8e9c-bc9df24c62ab",
                  "parentUUID": "33472324-a867-4aec-8808-f21e54de270c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ab3b950-2e1f-4be1-8e9c-bc9df24c62ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 254,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b3a2e713-4c42-49e2-a75a-b734d1b5d669",
              "title": "collection.createSkipList",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a skiplist index",
                  "fullTitle": "Managing indexes collection.createSkipList should create a skiplist index",
                  "timedOut": false,
                  "duration": 256,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createSkipList([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"skiplist\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "809137f4-69a1-4c9e-929f-023dbf7ce664",
                  "parentUUID": "b3a2e713-4c42-49e2-a75a-b734d1b5d669",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "809137f4-69a1-4c9e-929f-023dbf7ce664"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 256,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "eb5980b0-a6f9-4da7-b837-84c5d6b51f7f",
              "title": "collection.createPersistentIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a persistent index",
                  "fullTitle": "Managing indexes collection.createPersistentIndex should create a persistent index",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createPersistentIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"persistent\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e8cf1a83-25e7-49b6-a73d-ba3a94108039",
                  "parentUUID": "eb5980b0-a6f9-4da7-b837-84c5d6b51f7f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e8cf1a83-25e7-49b6-a73d-ba3a94108039"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 410,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "9f1361d6-ab39-435e-ac4d-5da8f9e1b055",
              "title": "collection.createGeoIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a geo1 index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo1 index for one field",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "96632670-be04-4cab-bd52-0e0c5c743da6",
                  "parentUUID": "9f1361d6-ab39-435e-ac4d-5da8f9e1b055",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo2 index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo2 index for two fields",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "3e1f946f-0df9-4da9-9598-3aecd5638ff4",
                  "parentUUID": "9f1361d6-ab39-435e-ac4d-5da8f9e1b055",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for one field",
                  "timedOut": false,
                  "duration": 303,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c6731d2e-b191-4427-9b7d-a019db408306",
                  "parentUUID": "9f1361d6-ab39-435e-ac4d-5da8f9e1b055",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for two fields",
                  "timedOut": false,
                  "duration": 313,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value1\", \"value2\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value1\", \"value2\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "ca29748c-ac4f-47e0-b663-f7e6f865dd2e",
                  "parentUUID": "9f1361d6-ab39-435e-ac4d-5da8f9e1b055",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6731d2e-b191-4427-9b7d-a019db408306",
                "ca29748c-ac4f-47e0-b663-f7e6f865dd2e"
              ],
              "failures": [],
              "pending": [
                "96632670-be04-4cab-bd52-0e0c5c743da6",
                "3e1f946f-0df9-4da9-9598-3aecd5638ff4"
              ],
              "skipped": [],
              "duration": 616,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "5aed315a-687e-4e14-b013-69a5394c2e47",
              "title": "collection.createFulltextIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a fulltext index",
                  "fullTitle": "Managing indexes collection.createFulltextIndex should create a fulltext index",
                  "timedOut": false,
                  "duration": 301,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createFulltextIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"fulltext\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "cf9df06f-e163-4810-8732-c4dd1b3946a7",
                  "parentUUID": "5aed315a-687e-4e14-b013-69a5394c2e47",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf9df06f-e163-4810-8732-c4dd1b3946a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 301,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "91b4a5ab-d57e-470b-914d-1ef83d8652eb",
              "title": "collection.index",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a index",
                  "fullTitle": "Managing indexes collection.index should return information about a index",
                  "timedOut": false,
                  "duration": 615,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.index(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        chai_1.expect(index).to.have.property(\"type\", info.type);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "efe05f82-220d-466b-a828-0c7cbedd1b16",
                  "parentUUID": "91b4a5ab-d57e-470b-914d-1ef83d8652eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "efe05f82-220d-466b-a828-0c7cbedd1b16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 615,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "12831c9b-ab72-480f-9c87-1fa6fcaa871b",
              "title": "collection.indexes",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a list of indexes",
                  "fullTitle": "Managing indexes collection.indexes should return a list of indexes",
                  "timedOut": false,
                  "duration": 610,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(index => {\n    return collection.indexes().then(indexes => {\n        chai_1.expect(indexes).to.be.instanceof(Array);\n        chai_1.expect(indexes).to.not.be.empty;\n        chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(1);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "bbf42b90-311d-48a3-880a-3015e7ff825b",
                  "parentUUID": "12831c9b-ab72-480f-9c87-1fa6fcaa871b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bbf42b90-311d-48a3-880a-3015e7ff825b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 610,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6a12bc71-6761-45d9-88a2-25bf0881d74b",
              "title": "collection.dropIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop existing index",
                  "fullTitle": "Managing indexes collection.dropIndex should drop existing index",
                  "timedOut": false,
                  "duration": 1654,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.dropIndex(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        return collection.indexes().then(indexes => {\n            chai_1.expect(indexes).to.be.instanceof(Array);\n            chai_1.expect(indexes).to.not.be.empty;\n            chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(0);\n        });\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c83f0f3b-a983-4ae3-b181-45e852b6d39d",
                  "parentUUID": "6a12bc71-6761-45d9-88a2-25bf0881d74b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c83f0f3b-a983-4ae3-b181-45e852b6d39d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1654,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "2dbd016a-019b-4de0-8b93-588eef3018db",
          "title": "DocumentCollection API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
          "file": "/lib/async/test/14-document-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "DocumentCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 1863,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "d35e11d9-35f5-40e4-aba2-06ae0c0042da",
              "parentUUID": "2dbd016a-019b-4de0-8b93-588eef3018db",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "DocumentCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 279,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "1fdbd5df-04d7-426b-90f9-73b35af109ff",
              "parentUUID": "2dbd016a-019b-4de0-8b93-588eef3018db",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "DocumentCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 289,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "318d4107-c985-4953-b8c8-887cae86ec02",
              "parentUUID": "2dbd016a-019b-4de0-8b93-588eef3018db",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "DocumentCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 436,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "1807146f-06ab-44ee-bd02-bc50dfc5078c",
              "parentUUID": "2dbd016a-019b-4de0-8b93-588eef3018db",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c7974230-7382-4ff4-9ef8-853885dabacf",
              "title": "documentCollection.document",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 252,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "9e3a2af7-33d0-48c6-9a66-782b4c3b71b6",
                  "parentUUID": "c7974230-7382-4ff4-9ef8-853885dabacf",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.document returns a document in the collection",
                  "timedOut": false,
                  "duration": 310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "2dd6802b-f236-4cf4-a69f-2d071ebdde22",
                  "parentUUID": "c7974230-7382-4ff4-9ef8-853885dabacf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "DocumentCollection API documentCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 361,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "f83ae189-4b65-439b-8b20-796ff757454c",
                  "parentUUID": "c7974230-7382-4ff4-9ef8-853885dabacf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dd6802b-f236-4cf4-a69f-2d071ebdde22",
                "f83ae189-4b65-439b-8b20-796ff757454c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 671,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "09b8f5d7-7f14-4dd6-9e0a-22ad3e342143",
              "title": "documentCollection.documentExists",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 325,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "7409b556-ba71-4410-b0ac-37357bfdfbec",
                  "parentUUID": "09b8f5d7-7f14-4dd6-9e0a-22ad3e342143",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the document exists",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns true if the document exists",
                  "timedOut": false,
                  "duration": 251,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "ba5afbc9-49c8-458a-bd7c-ea75a7a91bd5",
                  "parentUUID": "09b8f5d7-7f14-4dd6-9e0a-22ad3e342143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the document does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the document does not exist",
                  "timedOut": false,
                  "duration": 317,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"does-not-exist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "32fe4332-97fe-476e-a51c-affefc68ab80",
                  "parentUUID": "09b8f5d7-7f14-4dd6-9e0a-22ad3e342143",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the collection does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the collection does not exist",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric\n    .collection(\"doesnotexist\")\n    .documentExists(\"lol\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "cb99a812-6f50-403c-81b6-91b09bc880eb",
                  "parentUUID": "09b8f5d7-7f14-4dd6-9e0a-22ad3e342143",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ba5afbc9-49c8-458a-bd7c-ea75a7a91bd5",
                "32fe4332-97fe-476e-a51c-affefc68ab80",
                "cb99a812-6f50-403c-81b6-91b09bc880eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 876,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8a3ad05a-1b72-48db-8506-3a6672e2e291",
              "title": "documentCollection.save",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.save creates a document in the collection",
                  "timedOut": false,
                  "duration": 618,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "29aff1c5-a9ca-48c8-abc5-44eefc52dbf1",
                  "parentUUID": "8a3ad05a-1b72-48db-8506-3a6672e2e291",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "DocumentCollection API documentCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 610,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "027b674c-3630-4780-b0f0-f5b86566f6f1",
                  "parentUUID": "8a3ad05a-1b72-48db-8506-3a6672e2e291",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the document if opts.returnNew is set",
                  "fullTitle": "DocumentCollection API documentCollection.save returns the document if opts.returnNew is set",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = { returnNew: true };\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e775684a-af56-41fa-88f4-fc16bc9cd780",
                  "parentUUID": "8a3ad05a-1b72-48db-8506-3a6672e2e291",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "interprets opts as returnNew if it is a boolean",
                  "fullTitle": "DocumentCollection API documentCollection.save interprets opts as returnNew if it is a boolean",
                  "timedOut": false,
                  "duration": 310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = true;\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e34ac989-aab0-42d3-9dd3-dfa4c2263730",
                  "parentUUID": "8a3ad05a-1b72-48db-8506-3a6672e2e291",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29aff1c5-a9ca-48c8-abc5-44eefc52dbf1",
                "027b674c-3630-4780-b0f0-f5b86566f6f1",
                "e775684a-af56-41fa-88f4-fc16bc9cd780",
                "e34ac989-aab0-42d3-9dd3-dfa4c2263730"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1847,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "89296f0a-27d5-42cb-b718-46b045a70a0c",
              "title": "documentCollection.replace",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given document",
                  "fullTitle": "DocumentCollection API documentCollection.replace replaces the given document",
                  "timedOut": false,
                  "duration": 958,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "2d86c2d7-9ba5-4cdc-99e3-f9db8ba211dc",
                  "parentUUID": "89296f0a-27d5-42cb-b718-46b045a70a0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d86c2d7-9ba5-4cdc-99e3-f9db8ba211dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 958,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c8d69da1-aa7b-426e-84aa-7c0f977ac296",
              "title": "documentCollection.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "DocumentCollection API documentCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 922,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "0c5505ca-051b-4a64-881b-9bde0a5fef89",
                  "parentUUID": "c8d69da1-aa7b-426e-84aa-7c0f977ac296",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "DocumentCollection API documentCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 869,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "2199a798-c78a-426d-be99-ed19b15abd84",
                  "parentUUID": "c8d69da1-aa7b-426e-84aa-7c0f977ac296",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c5505ca-051b-4a64-881b-9bde0a5fef89",
                "2199a798-c78a-426d-be99-ed19b15abd84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1791,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6a634f06-3e1d-4e80-b0a2-5e2816fcfbcc",
              "title": "documentCollection.remove",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 425,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b82f2fa4-1349-4b7a-9635-8c45d36b53d1",
                  "parentUUID": "6a634f06-3e1d-4e80-b0a2-5e2816fcfbcc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given document",
                  "fullTitle": "DocumentCollection API documentCollection.remove deletes the given document",
                  "timedOut": false,
                  "duration": 495,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.document(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "22946e8d-4d4a-48a2-8c2a-e06332db919e",
                  "parentUUID": "6a634f06-3e1d-4e80-b0a2-5e2816fcfbcc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22946e8d-4d4a-48a2-8c2a-e06332db919e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 495,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "56002ffb-4117-4d4a-bfca-cb0e207472fc",
          "title": "EdgeCollection API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
          "file": "/lib/async/test/15-edge-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "EdgeCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 1847,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "53fe00a0-208b-4f7b-b458-05e9807af9db",
              "parentUUID": "56002ffb-4117-4d4a-bfca-cb0e207472fc",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "EdgeCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 305,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.edgeCollection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "b4de12e3-f05a-46b3-8b8e-07cbf0873e10",
              "parentUUID": "56002ffb-4117-4d4a-bfca-cb0e207472fc",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "EdgeCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "b4f47216-2a52-4788-8af0-954afb328ce1",
              "parentUUID": "56002ffb-4117-4d4a-bfca-cb0e207472fc",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "EdgeCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 305,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "a0979f90-7ce0-4f18-9951-a296510d86a9",
              "parentUUID": "56002ffb-4117-4d4a-bfca-cb0e207472fc",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "61212503-86bf-4099-916e-2fbe613529b7",
              "title": "edgeCollection.edge",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.edge \"before each\" hook",
                  "timedOut": false,
                  "duration": 306,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "c6a7dfcf-f222-41e6-bc33-fc149110740d",
                  "parentUUID": "61212503-86bf-4099-916e-2fbe613529b7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.edge returns an edge in the collection",
                  "timedOut": false,
                  "duration": 1404,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "557e7694-585f-4a8d-9e6d-c724bc34eff9",
                  "parentUUID": "61212503-86bf-4099-916e-2fbe613529b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.edge does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "ca311746-9e44-45af-ad39-98b88b779ddf",
                  "parentUUID": "61212503-86bf-4099-916e-2fbe613529b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "557e7694-585f-4a8d-9e6d-c724bc34eff9",
                "ca311746-9e44-45af-ad39-98b88b779ddf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1713,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6ef6846f-1990-42f3-b6fc-4b98009be9ea",
              "title": "edgeCollection.document",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 379,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "c697344b-c894-4a1c-a2f9-335145c1f734",
                  "parentUUID": "6ef6846f-1990-42f3-b6fc-4b98009be9ea",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.document returns an edge in the collection",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "70974f9d-cbaf-4562-9048-eac150463ffd",
                  "parentUUID": "6ef6846f-1990-42f3-b6fc-4b98009be9ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "5ca25ee2-e8d0-4825-88b4-74e8a833e4a5",
                  "parentUUID": "6ef6846f-1990-42f3-b6fc-4b98009be9ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "70974f9d-cbaf-4562-9048-eac150463ffd",
                "5ca25ee2-e8d0-4825-88b4-74e8a833e4a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 615,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f73aa412-a0e0-42de-894e-2da747458b91",
              "title": "edgeCollection.documentExists",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 512,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "d92cbbf6-ccd1-45dc-81d9-e60f63828e6c",
                  "parentUUID": "f73aa412-a0e0-42de-894e-2da747458b91",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the edge exists",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns true if the edge exists",
                  "timedOut": false,
                  "duration": 514,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "5a508bbb-3fe2-4446-8613-18078b72bf43",
                  "parentUUID": "f73aa412-a0e0-42de-894e-2da747458b91",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the edge does not exist",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns false if the edge does not exist",
                  "timedOut": false,
                  "duration": 315,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"doesnotexist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "43df795d-4570-4f0e-98e3-04a1babeb12a",
                  "parentUUID": "f73aa412-a0e0-42de-894e-2da747458b91",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a508bbb-3fe2-4446-8613-18078b72bf43",
                "43df795d-4570-4f0e-98e3-04a1babeb12a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 829,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c418a1e2-a037-45a8-b2d7-e4e1a8d1d19b",
              "title": "edgeCollection.save",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.save creates an edge in the collection",
                  "timedOut": false,
                  "duration": 613,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "24aa958d-af9f-46ad-8a46-0f80df63c9ad",
                  "parentUUID": "c418a1e2-a037-45a8-b2d7-e4e1a8d1d19b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "EdgeCollection API edgeCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 626,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = {\n    chicken: \"chicken\",\n    _key: \"banana\",\n    _from: \"d/1\",\n    _to: \"d/2\"\n};\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.equals(data._key);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._key).to.equal(data._key);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "b105ca11-9e44-4f34-b001-aff52116ba5c",
                  "parentUUID": "c418a1e2-a037-45a8-b2d7-e4e1a8d1d19b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes _from and _to as positional arguments",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes _from and _to as positional arguments",
                  "timedOut": false,
                  "duration": 616,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "4ea5bff4-1ecc-446d-a8bc-a61b06af0f21",
                  "parentUUID": "c418a1e2-a037-45a8-b2d7-e4e1a8d1d19b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object",
                  "timedOut": false,
                  "duration": 960,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "0c660b89-7c10-4dce-8394-bb62f6a108af",
                  "parentUUID": "c418a1e2-a037-45a8-b2d7-e4e1a8d1d19b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object with positional _from and _to",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object with positional _from and _to",
                  "timedOut": false,
                  "duration": 615,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "b694c7b4-29e0-4b75-b76a-49cb7406887d",
                  "parentUUID": "c418a1e2-a037-45a8-b2d7-e4e1a8d1d19b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24aa958d-af9f-46ad-8a46-0f80df63c9ad",
                "b105ca11-9e44-4f34-b001-aff52116ba5c",
                "4ea5bff4-1ecc-446d-a8bc-a61b06af0f21",
                "0c660b89-7c10-4dce-8394-bb62f6a108af",
                "b694c7b4-29e0-4b75-b76a-49cb7406887d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3430,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8d563d59-8ab4-4b81-b545-256936042b5b",
              "title": "edgeCollection.traversal",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal \"before each\" hook",
                  "timedOut": false,
                  "duration": 1859,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows = fabric.edgeCollection(\"knows\");\nconst person = fabric.collection(\"person\");\nPromise.all([person.create(), knows.create()])\n    .then(() => Promise.all([\n    person.import([\n        { _key: \"Alice\" },\n        { _key: \"Bob\" },\n        { _key: \"Charlie\" },\n        { _key: \"Dave\" },\n        { _key: \"Eve\" }\n    ]),\n    knows.import([\n        { _from: \"person/Alice\", _to: \"person/Bob\" },\n        { _from: \"person/Bob\", _to: \"person/Charlie\" },\n        { _from: \"person/Bob\", _to: \"person/Dave\" },\n        { _from: \"person/Eve\", _to: \"person/Alice\" },\n        { _from: \"person/Eve\", _to: \"person/Bob\" }\n    ])\n]))\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "508391d5-9c39-44f1-b15e-c687c78d0065",
                  "parentUUID": "8d563d59-8ab4-4b81-b545-256936042b5b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "executes traversal",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal executes traversal",
                  "timedOut": false,
                  "duration": 603,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows\n    .traversal(\"person/Alice\", { direction: \"outbound\" })\n    .then((result) => {\n    chai_1.expect(result).to.have.property(\"visited\");\n    const visited = result.visited;\n    chai_1.expect(visited).to.have.property(\"vertices\");\n    const vertices = visited.vertices;\n    chai_1.expect(vertices).to.be.instanceOf(Array);\n    chai_1.expect(vertices.length).to.equal(4);\n    const names = vertices.map((d) => d._key);\n    for (const name of [\"Alice\", \"Bob\", \"Charlie\", \"Dave\"]) {\n        chai_1.expect(names).to.contain(name);\n    }\n    chai_1.expect(visited).to.have.property(\"paths\");\n    const paths = visited.paths;\n    chai_1.expect(paths).to.be.instanceOf(Array);\n    chai_1.expect(paths.length).to.equal(4);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "3c36d106-8459-4b1c-8340-40b346d871c5",
                  "parentUUID": "8d563d59-8ab4-4b81-b545-256936042b5b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c36d106-8459-4b1c-8340-40b346d871c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 603,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0d9e6d24-67dd-453d-9108-ce0101c6cb87",
              "title": "edgeCollection.replace",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.replace replaces the given edge",
                  "timedOut": false,
                  "duration": 801,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = { potato: \"tomato\", _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, {\n        sup: \"dawg\",\n        _from: \"d/1\",\n        _to: \"d/2\"\n    });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "5f248c60-47bd-442d-abba-0e9c83cbcf9f",
                  "parentUUID": "0d9e6d24-67dd-453d-9108-ce0101c6cb87",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5f248c60-47bd-442d-abba-0e9c83cbcf9f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 801,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "29ca8d4c-d293-4e8a-ae43-034a5d9780ab",
              "title": "edgeCollection.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "EdgeCollection API edgeCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 912,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).to.have.property(\"empty\", null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "808fbefb-249f-4191-a606-8f9198a69883",
                  "parentUUID": "29ca8d4c-d293-4e8a-ae43-034a5d9780ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "EdgeCollection API edgeCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 781,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "780dc007-e65f-4e7b-9dda-168fb913238e",
                  "parentUUID": "29ca8d4c-d293-4e8a-ae43-034a5d9780ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "808fbefb-249f-4191-a606-8f9198a69883",
                "780dc007-e65f-4e7b-9dda-168fb913238e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1693,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b184ecab-e897-4a40-808a-ec0ffc05691c",
              "title": "edgeCollection.remove",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 261,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key, _from: \"d/1\", _to: \"d/2\" })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c86eb33d-37c2-4f71-b636-2f16c61dd9b5",
                  "parentUUID": "b184ecab-e897-4a40-808a-ec0ffc05691c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.remove deletes the given edge",
                  "timedOut": false,
                  "duration": 1275,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.edge(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a0100320-3cdb-49b3-b51d-5d5d9fedf7c9",
                  "parentUUID": "b184ecab-e897-4a40-808a-ec0ffc05691c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0100320-3cdb-49b3-b51d-5d5d9fedf7c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1275,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "e9256a85-b16d-4406-bc64-e63a7a03b2f5",
          "title": "Graph API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
          "file": "/lib/async/test/16-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Graph API \"before all\" hook",
              "timedOut": false,
              "duration": 1847,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "8af90def-3b9f-482e-a4ba-afc2c0ed2e22",
              "parentUUID": "e9256a85-b16d-4406-bc64-e63a7a03b2f5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Graph API \"after all\" hook",
              "timedOut": false,
              "duration": 358,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "c6b1f5b0-796b-4991-9178-b8118d0d864e",
              "parentUUID": "e9256a85-b16d-4406-bc64-e63a7a03b2f5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "00c09909-292a-4c37-98cf-17d9ca70ef53",
              "title": "graph.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.get \"before all\" hook",
                  "timedOut": false,
                  "duration": 1165,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "75ab143c-b099-43c3-84ce-d77de4634022",
                  "parentUUID": "00c09909-292a-4c37-98cf-17d9ca70ef53",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.get \"after all\" hook",
                  "timedOut": false,
                  "duration": 921,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d437f28d-c662-4d09-a45e-87c90f435695",
                  "parentUUID": "00c09909-292a-4c37-98cf-17d9ca70ef53",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about the graph",
                  "fullTitle": "Graph API graph.get fetches information about the graph",
                  "timedOut": false,
                  "duration": 365,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "4605d8c7-84ba-458f-bb52-5b882fecba7c",
                  "parentUUID": "00c09909-292a-4c37-98cf-17d9ca70ef53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4605d8c7-84ba-458f-bb52-5b882fecba7c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 365,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c566fcf4-ab06-4ead-abf1-365c16611f55",
              "title": "graph.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.create \"before all\" hook",
                  "timedOut": false,
                  "duration": 613,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "7803cab1-b498-41e3-9c7d-226d15962e80",
                  "parentUUID": "c566fcf4-ab06-4ead-abf1-365c16611f55",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 610,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric.collection(name).drop()))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "890657bc-6e24-49b6-b6f8-532db88e4ffa",
                  "parentUUID": "c566fcf4-ab06-4ead-abf1-365c16611f55",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates the graph",
                  "fullTitle": "Graph API graph.create creates the graph",
                  "timedOut": false,
                  "duration": 617,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let graph = fabric.graph(`g${Date.now()}`);\ngraph\n    .create({\n    edgeDefinitions: edgeCollectionNames.map(name => ({\n        collection: name,\n        from: vertexCollectionNames,\n        to: vertexCollectionNames\n    }))\n})\n    .then(() => graph.get())\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f65c647b-c27a-4393-a4b0-fa9e5bc536c8",
                  "parentUUID": "c566fcf4-ab06-4ead-abf1-365c16611f55",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f65c647b-c27a-4393-a4b0-fa9e5bc536c8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 617,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "87da99d9-511f-497b-8a58-2705b1846d2e",
              "title": "graph.drop",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Graph API graph.drop \"before each\" hook",
                  "timedOut": false,
                  "duration": 920,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "30e646f6-9b84-4852-afe2-ab949273b27c",
                  "parentUUID": "87da99d9-511f-497b-8a58-2705b1846d2e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Graph API graph.drop \"after each\" hook",
                  "timedOut": false,
                  "duration": 562,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric\n    .collection(name)\n    .drop()\n    .catch(() => null)))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d90907f8-f44d-4705-ad43-833bc52e61bd",
                  "parentUUID": "87da99d9-511f-497b-8a58-2705b1846d2e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "destroys the graph if not passed true",
                  "fullTitle": "Graph API graph.drop destroys the graph if not passed true",
                  "timedOut": false,
                  "duration": 923,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3fa9a317-c769-47c0-922b-a0d117319558",
                  "parentUUID": "87da99d9-511f-497b-8a58-2705b1846d2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally drops all of its collections if passed true",
                  "fullTitle": "Graph API graph.drop additionally drops all of its collections if passed true",
                  "timedOut": false,
                  "duration": 1230,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop(true)\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).not.to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "904b2068-ba01-4150-8e05-e04a371334e5",
                  "parentUUID": "87da99d9-511f-497b-8a58-2705b1846d2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fa9a317-c769-47c0-922b-a0d117319558",
                "904b2068-ba01-4150-8e05-e04a371334e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "7830dcd8-e0c5-42b7-885e-8a7bdff0161d",
          "title": "Manipulating graph vertices",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
          "file": "/lib/async/test/17-graph-vertices.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph vertices \"before all\" hook",
              "timedOut": false,
              "duration": 2154,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "66b33c91-1238-4492-9e3f-d00064206acd",
              "parentUUID": "7830dcd8-e0c5-42b7-885e-8a7bdff0161d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph vertices \"before each\" hook",
              "timedOut": false,
              "duration": 921,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "a7bea723-5d20-455f-b290-69989570aa9e",
              "parentUUID": "7830dcd8-e0c5-42b7-885e-8a7bdff0161d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph vertices \"after all\" hook",
              "timedOut": false,
              "duration": 307,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "9aecc7dc-511d-4559-ba4d-aef0d8c2c81c",
              "parentUUID": "7830dcd8-e0c5-42b7-885e-8a7bdff0161d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph vertices \"after each\" hook",
              "timedOut": false,
              "duration": 919,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "9bf6d34c-6f82-4860-a9de-09db659f2bd0",
              "parentUUID": "7830dcd8-e0c5-42b7-885e-8a7bdff0161d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d2b6b854-7711-41ec-a428-43d6dac52f97",
              "title": "graph.vertexCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a GraphVertexCollection instance for the collection",
                  "fullTitle": "Manipulating graph vertices graph.vertexCollection returns a GraphVertexCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = graph.vertexCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(graph_1.GraphVertexCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "f57ac67e-9f7f-4a4c-a381-b46bfcd27a1c",
                  "parentUUID": "d2b6b854-7711-41ec-a428-43d6dac52f97",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f57ac67e-9f7f-4a4c-a381-b46bfcd27a1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "821b94de-5b86-466b-ae49-002a2e9e19db",
              "title": "graph.addVertexCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"before each\" hook",
                  "timedOut": false,
                  "duration": 334,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`coll${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "5a3c15e4-40a3-4bfd-a3f5-8d0071766e58",
                  "parentUUID": "821b94de-5b86-466b-ae49-002a2e9e19db",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"after each\" hook",
                  "timedOut": false,
                  "duration": 313,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "96983185-7ef8-4555-80c9-af4887bbe3e0",
                  "parentUUID": "821b94de-5b86-466b-ae49-002a2e9e19db",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "adds the given vertex collection to the graph",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection adds the given vertex collection to the graph",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).to.contain(vertexCollection.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "984b959e-7436-4008-8a20-d84a7930c775",
                  "parentUUID": "821b94de-5b86-466b-ae49-002a2e9e19db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "984b959e-7436-4008-8a20-d84a7930c775"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 309,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "130a0ccb-7f1f-4771-8e74-8ee3193c46c1",
              "title": "graph.removeVertexCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection \"before each\" hook",
                  "timedOut": false,
                  "duration": 614,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`xc${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => graph.addVertexCollection(vertexCollection.name))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "737203e0-f2dd-466d-b2c7-d0d80d2e2093",
                  "parentUUID": "130a0ccb-7f1f-4771-8e74-8ee3193c46c1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes the given vertex collection from the graph",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection removes the given vertex collection from the graph",
                  "timedOut": false,
                  "duration": 585,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "8e866afc-27b6-440b-ad25-b699958c0674",
                  "parentUUID": "130a0ccb-7f1f-4771-8e74-8ee3193c46c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "destroys the collection if explicitly passed true",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection destroys the collection if explicitly passed true",
                  "timedOut": false,
                  "duration": 616,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name, true)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), err => {\n    chai_1.expect(err).to.be.an.instanceof(error_1.C8Error);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c239f5e1-854d-42f2-8096-725f0efef454",
                  "parentUUID": "130a0ccb-7f1f-4771-8e74-8ee3193c46c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e866afc-27b6-440b-ad25-b699958c0674",
                "c239f5e1-854d-42f2-8096-725f0efef454"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1201,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "39dd8012-1f9e-46d3-be96-3049174c32c1",
          "title": "Manipulating graph edges",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
          "file": "/lib/async/test/18-graph-edges.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph edges \"before all\" hook",
              "timedOut": false,
              "duration": 1831,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);",
              "err": {},
              "uuid": "facc71f5-ce2f-4f1e-b22b-f628511f851f",
              "parentUUID": "39dd8012-1f9e-46d3-be96-3049174c32c1",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph edges \"before each\" hook",
              "timedOut": false,
              "duration": 306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(graphName);\ngraph\n    .create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "7d923ca1-8a7e-4c66-b4cb-3e2c344a30eb",
              "parentUUID": "39dd8012-1f9e-46d3-be96-3049174c32c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph edges \"after all\" hook",
              "timedOut": false,
              "duration": 350,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "7c41d7fb-50e7-4195-a7a0-27118c546a0c",
              "parentUUID": "39dd8012-1f9e-46d3-be96-3049174c32c1",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph edges \"after each\" hook",
              "timedOut": false,
              "duration": 263,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "4324c627-5b23-4df9-b500-9c8cc9854e11",
              "parentUUID": "39dd8012-1f9e-46d3-be96-3049174c32c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f1749b44-6e2a-4878-b2b6-fe7a26130668",
              "title": "graph.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about the graph",
                  "fullTitle": "Manipulating graph edges graph.get should return information about the graph",
                  "timedOut": false,
                  "duration": 342,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e1f037d9-3df4-4681-933c-24c3bc59b383",
                  "parentUUID": "f1749b44-6e2a-4878-b2b6-fe7a26130668",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e1f037d9-3df4-4681-933c-24c3bc59b383"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 342,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "12113c63-b82c-4e32-989c-58187fddd78f",
              "title": "graph.edgeCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should contain edge collection",
                  "fullTitle": "Manipulating graph edges graph.edgeCollections should contain edge collection",
                  "timedOut": false,
                  "duration": 338,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .edgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info.map((c) => c.name)).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "1f3284aa-8975-4df0-b1d0-9441ecc4bf52",
                  "parentUUID": "12113c63-b82c-4e32-989c-58187fddd78f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1f3284aa-8975-4df0-b1d0-9441ecc4bf52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 338,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "64b0b1d8-1d53-45bc-b883-7d91c3df8be2",
              "title": "graph.listEdgeCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all edge collection names",
                  "fullTitle": "Manipulating graph edges graph.listEdgeCollections should return all edge collection names",
                  "timedOut": false,
                  "duration": 258,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listEdgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "37d2307f-49eb-4f8e-901c-68ced79ce155",
                  "parentUUID": "64b0b1d8-1d53-45bc-b883-7d91c3df8be2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "37d2307f-49eb-4f8e-901c-68ced79ce155"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 258,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "64b19e4f-9286-49d0-a0fb-7faaa19ae17e",
              "title": "graph.listVertexCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all vertex collection names",
                  "fullTitle": "Manipulating graph edges graph.listVertexCollections should return all vertex collection names",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listVertexCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e2e61c48-0b24-4bb9-b63f-48bb5e943e58",
                  "parentUUID": "64b19e4f-9286-49d0-a0fb-7faaa19ae17e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e2e61c48-0b24-4bb9-b63f-48bb5e943e58"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 311,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "5d0b6dba-4663-4add-8274-7e7894c005ba",
              "title": "graph.addEdgeDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add an edgeDefinition to the graph",
                  "fullTitle": "Manipulating graph edges graph.addEdgeDefinition should add an edgeDefinition to the graph",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addEdgeDefinition({\n    collection: \"works_in\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(2);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"works_in\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"works_in\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "657d6805-785b-4771-b318-dfd1f7191f84",
                  "parentUUID": "5d0b6dba-4663-4add-8274-7e7894c005ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "657d6805-785b-4771-b318-dfd1f7191f84"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4fc48cd3-1615-4192-8a88-88ce54074d6d",
              "title": "graph.replaceEdgeDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should replace an existing edgeDefinition in the graph",
                  "fullTitle": "Manipulating graph edges graph.replaceEdgeDefinition should replace an existing edgeDefinition in the graph",
                  "timedOut": false,
                  "duration": 278,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .replaceEdgeDefinition(\"knows\", {\n    collection: \"knows\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4daa7328-9820-438e-be09-44a208ab7263",
                  "parentUUID": "4fc48cd3-1615-4192-8a88-88ce54074d6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4daa7328-9820-438e-be09-44a208ab7263"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 278,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "bf32e622-d348-4355-8fad-94b815c61636",
              "title": "graph.removeEdgeDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove an edgeDefinition from the graph",
                  "fullTitle": "Manipulating graph edges graph.removeEdgeDefinition should remove an edgeDefinition from the graph",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeEdgeDefinition(\"knows\")\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "40b4f9ce-b987-4917-86db-d74750836144",
                  "parentUUID": "bf32e622-d348-4355-8fad-94b815c61636",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "40b4f9ce-b987-4917-86db-d74750836144"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 308,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "052d1a7b-32ca-488a-aa0d-26412a614b6f",
          "title": "GraphVertexCollection API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
          "file": "/lib/async/test/19-graph-vertex-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "GraphVertexCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 3193,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\nconst graph = fabric.graph(`testgraph${Date.now()}`);\nawait graph.create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n});\ncollection = graph.vertexCollection(\"person\");",
              "err": {},
              "uuid": "4187f6f6-6310-4aa2-bd15-af17794e6f32",
              "parentUUID": "052d1a7b-32ca-488a-aa0d-26412a614b6f",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "GraphVertexCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .truncate()\n    .then(() => done())\n    .catch(done);",
              "err": {},
              "uuid": "c710f3f6-381b-49ee-b2a8-f62edbc8ac69",
              "parentUUID": "052d1a7b-32ca-488a-aa0d-26412a614b6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "GraphVertexCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 309,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "14dba1ec-da0e-4fec-a44e-5fc51d96beae",
              "parentUUID": "052d1a7b-32ca-488a-aa0d-26412a614b6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b3516bfb-9856-4bf3-82f1-825dadb1f734",
              "title": "graphVertexCollection.vertex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex \"before each\" hook",
                  "timedOut": false,
                  "duration": 400,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "5f3ffa95-5033-4850-9106-dee558afa7bb",
                  "parentUUID": "b3516bfb-9856-4bf3-82f1-825dadb1f734",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "3079549a-dde6-4bb5-8411-4080fdfb8018",
                  "parentUUID": "b3516bfb-9856-4bf3-82f1-825dadb1f734",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 412,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "8d3e2a38-e9f2-473a-9451-6593d406d527",
                  "parentUUID": "b3516bfb-9856-4bf3-82f1-825dadb1f734",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3079549a-dde6-4bb5-8411-4080fdfb8018",
                "8d3e2a38-e9f2-473a-9451-6593d406d527"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 719,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "da035930-a71b-4921-bea3-44f36e1d3610",
              "title": "graphVertexCollection.document",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 519,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "71fc317a-af23-4d6f-b79e-6a6fab8fe7aa",
                  "parentUUID": "da035930-a71b-4921-bea3-44f36e1d3610",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "2e964d76-1c0f-483e-92f5-3369c9b0d316",
                  "parentUUID": "da035930-a71b-4921-bea3-44f36e1d3610",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 350,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "d7d28155-4206-415f-bcf0-a0594158f1c9",
                  "parentUUID": "da035930-a71b-4921-bea3-44f36e1d3610",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2e964d76-1c0f-483e-92f5-3369c9b0d316",
                "d7d28155-4206-415f-bcf0-a0594158f1c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 658,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f53194eb-b8ab-4a2e-aabb-35ef1560106a",
              "title": "graphVertexCollection.save",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save creates a vertex in the collection",
                  "timedOut": false,
                  "duration": 562,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b5d5251a-db02-4349-a49a-f9361d43d93b",
                  "parentUUID": "f53194eb-b8ab-4a2e-aabb-35ef1560106a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 614,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "762f6898-6954-4a48-9a6b-9ccddf44470b",
                  "parentUUID": "f53194eb-b8ab-4a2e-aabb-35ef1560106a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b5d5251a-db02-4349-a49a-f9361d43d93b",
                "762f6898-6954-4a48-9a6b-9ccddf44470b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1176,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "1c18943c-c201-4fd7-863d-8338dbf99a14",
              "title": "graphVertexCollection.replace",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.replace replaces the given vertex",
                  "timedOut": false,
                  "duration": 809,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "de014cea-284a-42a6-8cf7-1477b9c370e6",
                  "parentUUID": "1c18943c-c201-4fd7-863d-8338dbf99a14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "de014cea-284a-42a6-8cf7-1477b9c370e6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 809,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b479a05c-22d8-4da6-a3da-6f538d2c106d",
              "title": "graphVertexCollection.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update updates the given vertex",
                  "timedOut": false,
                  "duration": 1023,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "56eb2509-b74d-41f7-bacf-c255b84cd6cf",
                  "parentUUID": "b479a05c-22d8-4da6-a3da-6f538d2c106d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 1009,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "2ceac800-2b0c-4312-bc87-ffd4133a6760",
                  "parentUUID": "b479a05c-22d8-4da6-a3da-6f538d2c106d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56eb2509-b74d-41f7-bacf-c255b84cd6cf",
                "2ceac800-2b0c-4312-bc87-ffd4133a6760"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2032,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0ef0307f-97f8-4109-b84f-a90aba3f907f",
              "title": "graphVertexCollection.remove",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 306,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7855929e-f7e1-43af-aedf-62aab3e9ffaf",
                  "parentUUID": "0ef0307f-97f8-4109-b84f-a90aba3f907f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove deletes the given vertex",
                  "timedOut": false,
                  "duration": 616,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.vertex(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "033a03cf-dba7-4734-ad44-0fdf817a74fb",
                  "parentUUID": "0ef0307f-97f8-4109-b84f-a90aba3f907f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "033a03cf-dba7-4734-ad44-0fdf817a74fb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 616,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "5e70ed86-ab43-45ba-a60a-11423d98f173",
          "title": "Join Path",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/21-util-joinpath.js",
          "file": "/lib/async/test/21-util-joinpath.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "joinPath 1",
              "fullTitle": "Join Path joinPath 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"../../u1/u2\";\nvar path = \"/security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"../../u1/u2/security/authenticate\");",
              "err": {},
              "uuid": "3468a01c-1050-4855-a392-2a6f5e938060",
              "parentUUID": "5e70ed86-ab43-45ba-a60a-11423d98f173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 2",
              "fullTitle": "Join Path joinPath 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/u1/security/authenticate\");",
              "err": {},
              "uuid": "0ecd9113-793e-44f5-aeb7-b6db391415a8",
              "parentUUID": "5e70ed86-ab43-45ba-a60a-11423d98f173",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 3",
              "fullTitle": "Join Path joinPath 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/security/authenticate\");",
              "err": {},
              "uuid": "bdfca25e-2edc-476c-b06c-d3732fc9dd58",
              "parentUUID": "5e70ed86-ab43-45ba-a60a-11423d98f173",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3468a01c-1050-4855-a392-2a6f5e938060",
            "0ecd9113-793e-44f5-aeb7-b6db391415a8",
            "bdfca25e-2edc-476c-b06c-d3732fc9dd58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "8b578d70-3248-4cc1-b1a8-8a78da1a9835",
          "title": "Helper.getFullStreamPath",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output when there is no extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is no extra url",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog\");",
              "err": {},
              "uuid": "6d28e9d6-a591-4dfe-8f77-9984f481d8ec",
              "parentUUID": "8b578d70-3248-4cc1-b1a8-8a78da1a9835",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns correct output when there is extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is extra url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\", \"/compaction\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog/compaction\");",
              "err": {},
              "uuid": "99b7773a-401a-4db9-b6c8-3a7486cd6830",
              "parentUUID": "8b578d70-3248-4cc1-b1a8-8a78da1a9835",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d28e9d6-a591-4dfe-8f77-9984f481d8ec",
            "99b7773a-401a-4db9-b6c8-3a7486cd6830"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "9c4bf1f3-4c2f-4b0a-9653-6e71c134cdcd",
          "title": "Helper.getDCListString",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output",
              "fullTitle": "Helper.getDCListString returns correct output",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(helper_1.getDCListString(response)).to.equal('dev-ap-southeast-1,dev-ap-southeast-2');",
              "err": {},
              "uuid": "e572c10d-3825-4c57-af19-49564a0e931a",
              "parentUUID": "9c4bf1f3-4c2f-4b0a-9653-6e71c134cdcd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e572c10d-3825-4c57-af19-49564a0e931a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "cc9bac83-9946-4971-961c-afd582213d40",
          "title": "C8QL Stream queries",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/23-c8ql-queries-stream.js",
          "file": "/lib/async/test/23-c8ql-queries-stream.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL Stream queries \"before all\" hook",
              "timedOut": false,
              "duration": 1868,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "84e46aba-0253-4808-8263-2d87f5afe0e1",
              "parentUUID": "cc9bac83-9946-4971-961c-afd582213d40",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL Stream queries \"after all\" hook",
              "timedOut": false,
              "duration": 318,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "4ee54fda-1736-457c-9415-19e47f1f0acc",
              "parentUUID": "cc9bac83-9946-4971-961c-afd582213d40",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8965b5cf-c575-4bef-8016-28fd655ae1bd",
              "title": "fabric.query",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL Stream queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 272,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\", {}, { options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8d9ca186-6e62-46f5-9576-4432d1cc1080",
                  "parentUUID": "8965b5cf-c575-4bef-8016-28fd655ae1bd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL Stream queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 }, { options: { stream: true } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e0b647f4-3dda-4d6a-82fa-3a6e1b032229",
                  "parentUUID": "8965b5cf-c575-4bef-8016-28fd655ae1bd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL Stream queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 302,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", {}, {\n    batchSize: 2,\n    count: true\n})\n    .then(cursor => {\n    let count = cursor.count;\n    chai_1.expect(count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e79ac5ea-8984-4d26-b945-547cee4f0ed8",
                  "parentUUID": "8965b5cf-c575-4bef-8016-28fd655ae1bd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL Stream queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "78872ade-6e1d-4dd4-8ab9-9e1fe1b18110",
                  "parentUUID": "8965b5cf-c575-4bef-8016-28fd655ae1bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8d9ca186-6e62-46f5-9576-4432d1cc1080",
                "e0b647f4-3dda-4d6a-82fa-3a6e1b032229",
                "e79ac5ea-8984-4d26-b945-547cee4f0ed8",
                "78872ade-6e1d-4dd4-8ab9-9e1fe1b18110"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1190,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "fbc4c903-4f1d-4667-b840-a17c6ee7c9c6",
              "title": "with some data",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can access large collection in parallel",
                  "fullTitle": "C8QL Stream queries with some data can access large collection in parallel",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "997a6ba9-84f1-4118-958b-250272df346f",
                  "parentUUID": "fbc4c903-4f1d-4667-b840-a17c6ee7c9c6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can do writes and reads",
                  "fullTitle": "C8QL Stream queries with some data can do writes and reads",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "0c443cd9-f2ca-43be-ad22-71057c82978f",
                  "parentUUID": "fbc4c903-4f1d-4667-b840-a17c6ee7c9c6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "997a6ba9-84f1-4118-958b-250272df346f",
                "0c443cd9-f2ca-43be-ad22-71057c82978f"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "4becde04-ae7b-4e8b-9edc-9ba2771a123e",
          "title": "Manipulating streams",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
          "file": "/lib/async/test/28-manipulating-streams.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating streams \"before all\" hook",
              "timedOut": false,
              "duration": 1213,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "697afce3-1167-429a-b208-c8889089c405",
              "parentUUID": "4becde04-ae7b-4e8b-9edc-9ba2771a123e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating streams \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "401e6a84-6f1e-4b29-bad3-9e37096a09ae",
              "parentUUID": "4becde04-ae7b-4e8b-9edc-9ba2771a123e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b5ad3def-0532-404f-bc2a-1554d921c3fd",
              "title": "fabric.stream",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a new Stream instance",
                  "fullTitle": "Manipulating streams fabric.stream returns a new Stream instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.stream(\"testStream\", true)).to.be.instanceof(stream_1.Stream);",
                  "err": {},
                  "uuid": "0fedec02-97bc-43f5-9c0f-1b614c349b1f",
                  "parentUUID": "b5ad3def-0532-404f-bc2a-1554d921c3fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets all streams",
                  "fullTitle": "Manipulating streams fabric.stream gets all streams",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getStreams();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "8f081e08-eb52-4977-bcfb-d43536e5a41a",
                  "parentUUID": "b5ad3def-0532-404f-bc2a-1554d921c3fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears backlog",
                  "timedOut": false,
                  "duration": 304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.clearBacklog();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "dfff803d-b883-4ae5-9307-a5349586f549",
                  "parentUUID": "b5ad3def-0532-404f-bc2a-1554d921c3fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears subscription backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears subscription backlog",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "39ec797e-1463-4252-b2fe-23f2a2e7af9c",
                  "parentUUID": "b5ad3def-0532-404f-bc2a-1554d921c3fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "unsubscribes to a subscription",
                  "fullTitle": "Manipulating streams fabric.stream unsubscribes to a subscription",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "0496687b-b342-42f3-861f-8c56eb5a6c36",
                  "parentUUID": "b5ad3def-0532-404f-bc2a-1554d921c3fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0fedec02-97bc-43f5-9c0f-1b614c349b1f",
                "8f081e08-eb52-4977-bcfb-d43536e5a41a",
                "dfff803d-b883-4ae5-9307-a5349586f549"
              ],
              "failures": [],
              "pending": [
                "39ec797e-1463-4252-b2fe-23f2a2e7af9c",
                "0496687b-b342-42f3-861f-8c56eb5a6c36"
              ],
              "skipped": [],
              "duration": 611,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "eef1e300-1d97-43ff-9c4e-ae7cc72ef4a6",
              "title": "stream.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "7dfd59c7-a917-479e-8768-2c67507bbb6f",
                  "title": "persistent",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "creates a persistent local stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent local stream",
                      "timedOut": false,
                      "duration": 305,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, true);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "5f32739a-d5cd-48b7-9d47-3833aa0be777",
                      "parentUUID": "7dfd59c7-a917-479e-8768-2c67507bbb6f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "creates a persistent global stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent global stream",
                      "timedOut": false,
                      "duration": 306,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, false);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "5a938ed7-5201-48fd-8b1d-94fc75e5e77d",
                      "parentUUID": "7dfd59c7-a917-479e-8768-2c67507bbb6f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5f32739a-d5cd-48b7-9d47-3833aa0be777",
                    "5a938ed7-5201-48fd-8b1d-94fc75e5e77d"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 611,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "7ccf5255-760e-4891-80cf-96bda3cd8253",
              "title": "stream.manipulate",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 414,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream = fabric.stream(`testStream${Date.now()}`, false);\nawait stream.createStream();",
                  "err": {},
                  "uuid": "a49d2ef1-a50f-43d6-bea8-70457f1e4193",
                  "parentUUID": "7ccf5255-760e-4891-80cf-96bda3cd8253",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 506,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                  "err": {},
                  "uuid": "1ca02e4d-60af-41d9-81d1-7da9ed268584",
                  "parentUUID": "7ccf5255-760e-4891-80cf-96bda3cd8253",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream.closeConnections();",
                  "err": {},
                  "uuid": "dc8dcd26-419c-4591-80da-c1d7a6a09bcf",
                  "parentUUID": "7ccf5255-760e-4891-80cf-96bda3cd8253",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "stream.expireMessagesOnAllSubscriptions",
                  "fullTitle": "Manipulating streams stream.manipulate stream.expireMessagesOnAllSubscriptions",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "2d401ca8-48f9-4a05-bf48-43ff2d2e6906",
                  "parentUUID": "7ccf5255-760e-4891-80cf-96bda3cd8253",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "6303e885-dd91-43ff-87c2-51244e07fb3c",
                  "title": "stream.getBacklog",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets estimated backlog for offline stream",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getBacklog gets estimated backlog for offline stream",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "setTimeout(async function () {\n    const response = await stream.backlog();\n    chai_1.expect(response.error).to.be.false;\n}, 5000);",
                      "err": {},
                      "uuid": "3307a63c-c471-4f9c-99bc-0e1b88370010",
                      "parentUUID": "6303e885-dd91-43ff-87c2-51244e07fb3c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "3307a63c-c471-4f9c-99bc-0e1b88370010"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "ef3e88e2-e900-4287-9175-460135537ab9",
                  "title": "stream.getStreamStatistics",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets the stream statistics",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getStreamStatistics gets the stream statistics",
                      "timedOut": false,
                      "duration": 268,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.getStreamStatistics();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "fd7b3160-e73b-4237-b594-2c980011e737",
                      "parentUUID": "ef3e88e2-e900-4287-9175-460135537ab9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "fd7b3160-e73b-4237-b594-2c980011e737"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 268,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                  "title": "stream.subscriptions",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "stream.resetSubscriptionToPosition",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetSubscriptionToPosition",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "2b8c7d89-eee5-4b5e-ae39-b42b4c2d4856",
                      "parentUUID": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.expireMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.expireMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "0cc42559-7182-4db7-b92e-dd789ece3b9c",
                      "parentUUID": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.resetCursor",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetCursor",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "3d4879e7-09b5-4e7c-9e07-9064aed2e464",
                      "parentUUID": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipNumberOfMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipNumberOfMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "9294ba90-35bc-4098-8cd4-25f5caa36bb6",
                      "parentUUID": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipAllMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipAllMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "a78f794f-7128-47a4-a40c-0cbd7e4813a9",
                      "parentUUID": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.getSubscriptionList",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.getSubscriptionList",
                      "timedOut": false,
                      "duration": 1,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it(\"gets subscription list\", async () => {\n    const response = await stream.getSubscriptionList();\n    chai_1.expect(response.error).to.be.false;\n});",
                      "err": {},
                      "uuid": "cdf09d9c-9a1a-4c8b-b18e-e73d78fd1af2",
                      "parentUUID": "f1ff6740-fbe6-4735-85ce-3cb010cde3f9",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0cc42559-7182-4db7-b92e-dd789ece3b9c",
                    "3d4879e7-09b5-4e7c-9e07-9064aed2e464",
                    "9294ba90-35bc-4098-8cd4-25f5caa36bb6",
                    "a78f794f-7128-47a4-a40c-0cbd7e4813a9",
                    "cdf09d9c-9a1a-4c8b-b18e-e73d78fd1af2"
                  ],
                  "failures": [],
                  "pending": [
                    "2b8c7d89-eee5-4b5e-ae39-b42b4c2d4856"
                  ],
                  "skipped": [],
                  "duration": 2,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "9676e617-9652-4c3f-9c34-110465bc0ad4",
                  "title": "stream.terminate",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "a6ecd9ac-89ff-4b24-80b0-6e958f20bf1a",
                      "title": "persistent",
                      "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                      "file": "/lib/async/test/28-manipulating-streams.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "26d2dbf8-eaef-45c9-9fa3-a9f20237ec2b",
                          "title": "local",
                          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local \"before each\" hook",
                              "timedOut": false,
                              "duration": 344,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, true);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "8d038d0d-01f7-4581-b108-e2bb53941e6b",
                              "parentUUID": "26d2dbf8-eaef-45c9-9fa3-a9f20237ec2b",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent local stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local terminates persistent local stream",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "setTimeout(async function () {\n    const response = await stream.terminateStream();\n    chai_1.expect(response.error).to.be.false;\n}, 5000);",
                              "err": {},
                              "uuid": "5285154b-cd45-4eab-89dc-076703ba43d4",
                              "parentUUID": "26d2dbf8-eaef-45c9-9fa3-a9f20237ec2b",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "5285154b-cd45-4eab-89dc-076703ba43d4"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        },
                        {
                          "uuid": "6920105e-f96c-461d-9322-2527335b81cf",
                          "title": "global",
                          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global \"before each\" hook",
                              "timedOut": false,
                              "duration": 299,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, false);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "8ba499a3-f3c3-4a7f-823b-a6acc737f44b",
                              "parentUUID": "6920105e-f96c-461d-9322-2527335b81cf",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent global stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global terminates persistent global stream",
                              "timedOut": false,
                              "duration": 0,
                              "state": "passed",
                              "speed": "fast",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "setTimeout(async function () {\n    const response = await stream.terminateStream();\n    chai_1.expect(response.error).to.be.false;\n}, 5000);",
                              "err": {},
                              "uuid": "61e8255c-c0c7-476d-8163-4afc0a7ff731",
                              "parentUUID": "6920105e-f96c-461d-9322-2527335b81cf",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "61e8255c-c0c7-476d-8163-4afc0a7ff731"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 0,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 50000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "4308e58e-7c23-405b-8c68-14d5fdf188d1",
                  "title": "stream.websocket",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"before all\" hook",
                      "timedOut": false,
                      "duration": 407,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                      "err": {},
                      "uuid": "baa21ce2-06cc-49ac-b5c8-e070eabac157",
                      "parentUUID": "4308e58e-7c23-405b-8c68-14d5fdf188d1",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"after all\" hook",
                      "timedOut": false,
                      "duration": 1,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "stream.closeConnections();",
                      "err": {},
                      "uuid": "6105c9cd-113c-41a7-940c-3a98041a4ac0",
                      "parentUUID": "4308e58e-7c23-405b-8c68-14d5fdf188d1",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "gets data in consumer when sent by producer",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket gets data in consumer when sent by producer",
                      "timedOut": false,
                      "duration": 3251,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "function callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    chai_1.expect(payload).to.equal(\"dGVzdA==\");\n    done();\n}\nstream.consumer(`streamSubscription${Date.now()}`, {\n    onmessage: callback,\n    onopen: () => stream.producer(\"test\", dcName)\n}, dcName);",
                      "err": {},
                      "uuid": "f5fcf5e1-784e-4313-a02e-f24a4b5e3d58",
                      "parentUUID": "4308e58e-7c23-405b-8c68-14d5fdf188d1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f5fcf5e1-784e-4313-a02e-f24a4b5e3d58"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 3251,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "2d401ca8-48f9-4a05-bf48-43ff2d2e6906"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "268e9a20-421f-4690-a428-e42d3f5f05e9",
          "title": "User Management",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
          "file": "/lib/async/test/30-user-management.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "User Management \"before all\" hook",
              "timedOut": false,
              "duration": 1555,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "ba0bca2f-9095-400e-9ee0-4d5879f04eb2",
              "parentUUID": "268e9a20-421f-4690-a428-e42d3f5f05e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "User Management \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "dc5507f4-db1e-4daa-bbe3-485f52f12895",
              "parentUUID": "268e9a20-421f-4690-a428-e42d3f5f05e9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "32883f1c-d23a-4ecf-9bab-02d6bee071fe",
              "title": "fabric.user",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new user instance",
                  "fullTitle": "User Management fabric.user creates a new user instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.user(\"testUser\", \"testUser@test.com\")).to.be.instanceof(user_1.default);",
                  "err": {},
                  "uuid": "0ed4caad-ec75-44f9-b12c-1f2d8f8e60ef",
                  "parentUUID": "32883f1c-d23a-4ecf-9bab-02d6bee071fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ed4caad-ec75-44f9-b12c-1f2d8f8e60ef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "1f19a557-2ae0-47c8-81eb-dadeb895f6da",
              "title": "user.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "User Management user.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 305,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await user.deleteUser();",
                  "err": {},
                  "uuid": "882f54e2-82ea-4620-b979-7cc6e018bcf8",
                  "parentUUID": "1f19a557-2ae0-47c8-81eb-dadeb895f6da",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a user",
                  "fullTitle": "User Management user.create creates a user",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nconst response = await user.createUser(\"testPass\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "a4310531-673f-4337-85a8-70e36dc0debb",
                  "parentUUID": "1f19a557-2ae0-47c8-81eb-dadeb895f6da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4310531-673f-4337-85a8-70e36dc0debb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 305,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "ed4ba4c4-9ddc-4e7d-9a73-ba081a14d69a",
              "title": "fabric.getAllUsers",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Lists all users",
                  "fullTitle": "User Management fabric.getAllUsers Lists all users",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllUsers();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "09f1c369-67f5-4262-a496-c0ce93231129",
                  "parentUUID": "ed4ba4c4-9ddc-4e7d-9a73-ba081a14d69a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09f1c369-67f5-4262-a496-c0ce93231129"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8ca5519e-411f-4ce0-b1a0-3897993e6f7a",
              "title": "user.crud_operations",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "User Management user.crud_operations \"before each\" hook",
                  "timedOut": false,
                  "duration": 318,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nawait user.createUser(\"testPass\");",
                  "err": {},
                  "uuid": "0d4ce42e-7dc6-4fd3-95e8-8bdff47357ea",
                  "parentUUID": "8ca5519e-411f-4ce0-b1a0-3897993e6f7a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "User Management user.crud_operations \"after each\" hook",
                  "timedOut": false,
                  "duration": 303,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await user.deleteUser();\n}\ncatch (error) { }",
                  "err": {},
                  "uuid": "8f922950-f326-4d2a-b46b-624ceafb9852",
                  "parentUUID": "8ca5519e-411f-4ce0-b1a0-3897993e6f7a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [],
              "suites": [
                {
                  "uuid": "98dbd510-8b5d-434f-8673-4ea5367815cb",
                  "title": "user.deleteUser",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deletes a user",
                      "fullTitle": "User Management user.crud_operations user.deleteUser Deletes a user",
                      "timedOut": false,
                      "duration": 308,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.deleteUser();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "93d27764-1fea-4eb1-b2cc-7fb925d81804",
                      "parentUUID": "98dbd510-8b5d-434f-8673-4ea5367815cb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "93d27764-1fea-4eb1-b2cc-7fb925d81804"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 308,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "edab48d0-1350-42c5-b7b3-b5f95ee6185b",
                  "title": "user.getUserDetails",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Fetches a user",
                      "fullTitle": "User Management user.crud_operations user.getUserDetails Fetches a user",
                      "timedOut": false,
                      "duration": 259,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getUserDeatils();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "a2ceeb0c-b472-4b87-a4b8-b56bd7fc6ec1",
                      "parentUUID": "edab48d0-1350-42c5-b7b3-b5f95ee6185b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a2ceeb0c-b472-4b87-a4b8-b56bd7fc6ec1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 259,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "ff2d88fb-d6d1-4a0f-816a-eb8e0ceda258",
                  "title": "user.modifyUser",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.modifyUser Modifies a user",
                      "timedOut": false,
                      "duration": 271,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.modifyUser({\n    active: false\n});\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.active).to.be.false;",
                      "err": {},
                      "uuid": "c219f994-d0d9-4f51-94d3-ed21f419d7de",
                      "parentUUID": "ff2d88fb-d6d1-4a0f-816a-eb8e0ceda258",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "c219f994-d0d9-4f51-94d3-ed21f419d7de"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 271,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "1b189cc5-d418-4599-989a-7bc09c0fb2d1",
                  "title": "user.replaceUser",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.replaceUser Modifies a user",
                      "timedOut": false,
                      "duration": 264,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.replaceUser({\n    passwd: \"test_passwordddd\"\n});\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "a5b8c9c2-32a4-4379-b2a8-2d45fcad6fd1",
                      "parentUUID": "1b189cc5-d418-4599-989a-7bc09c0fb2d1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a5b8c9c2-32a4-4379-b2a8-2d45fcad6fd1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 264,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                  "title": "User.FabricAccessOperations",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"before each\" hook",
                      "timedOut": false,
                      "duration": 339,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await fabric.createFabric(testFabricName, [{ username: user.user }], {\n    dcList: dcList\n});\n// fabric.useFabric(testFabricName);",
                      "err": {},
                      "uuid": "7dd2c135-05d2-46d9-a9f5-5b479826c007",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"after each\" hook",
                      "timedOut": false,
                      "duration": 317,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(testFabricName);",
                      "err": {},
                      "uuid": "1cfc1b50-77a1-4b8f-9102-235005a7d3a3",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "Lists the accessible databases and their permissions ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions ",
                      "timedOut": false,
                      "duration": 288,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).not.exist;",
                      "err": {},
                      "uuid": "8923d385-fd24-47a2-8ef3-718b37823407",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Lists the accessible databases and their permissions with all the collections",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions with all the collections",
                      "timedOut": false,
                      "duration": 297,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases(true);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).to.exist;",
                      "err": {},
                      "uuid": "a2e6ff21-a9ac-47db-b502-229bfc71d5cb",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a database ",
                      "timedOut": false,
                      "duration": 555,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result).to.be.oneOf([\"rw\", \"ro\", \"none\"]);",
                      "err": {},
                      "uuid": "996669fd-05d4-454b-a31f-5a4a5a714da4",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 627,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = `coll${Date.now()}`;\nawait fabric.collection(collectionName).create();\nconst response = await user.getCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "09135e76-9ed9-4e0a-9a6a-b1c865c6a4a6",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a database ",
                      "timedOut": false,
                      "duration": 308,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.clearDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {},
                      "uuid": "d48a1bbd-dacb-4a9e-a115-2a61e513ccd6",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "94d8a029-f1f0-4635-935c-fe3919f93f5c",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "6c9d4cf4-2ee0-4849-9124-80b007582e58",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a database",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a database",
                      "timedOut": false,
                      "duration": 261,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.setDatabaseAccessLevel(testFabricName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}`]).eq(\"ro\");",
                      "err": {},
                      "uuid": "8865d37e-9bb4-43da-abd7-9c864f9b6bfa",
                      "parentUUID": "3e8ecdfe-0b95-46ea-ab71-bd488148ba2e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8923d385-fd24-47a2-8ef3-718b37823407",
                    "a2e6ff21-a9ac-47db-b502-229bfc71d5cb",
                    "996669fd-05d4-454b-a31f-5a4a5a714da4",
                    "09135e76-9ed9-4e0a-9a6a-b1c865c6a4a6",
                    "d48a1bbd-dacb-4a9e-a115-2a61e513ccd6",
                    "8865d37e-9bb4-43da-abd7-9c864f9b6bfa"
                  ],
                  "failures": [],
                  "pending": [
                    "94d8a029-f1f0-4635-935c-fe3919f93f5c",
                    "6c9d4cf4-2ee0-4849-9124-80b007582e58"
                  ],
                  "skipped": [],
                  "duration": 2336,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "67349fbc-c8ef-43b0-90ba-ae70d3a28a3a",
          "title": "manipulating restql",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
          "file": "/lib/async/test/31-restql.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating restql \"before all\" hook",
              "timedOut": false,
              "duration": 1220,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "2d7e9957-eb07-442a-b5b1-9284d1cccf1a",
              "parentUUID": "67349fbc-c8ef-43b0-90ba-ae70d3a28a3a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating restql \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "c3a0c6b8-9e9d-41e1-a708-4ee9f57fd41d",
              "parentUUID": "67349fbc-c8ef-43b0-90ba-ae70d3a28a3a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6815ffd6-a4da-4b15-8222-f90b35185f42",
              "title": "fabric.saveQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should save a query",
                  "fullTitle": "manipulating restql fabric.saveQuery should save a query",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const queryName = \"testQuery\";\nconst response = await fabric.saveQuery(queryName, {}, \"for coll in _collections return coll\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.name).to.equal(queryName);",
                  "err": {},
                  "uuid": "5a4fe309-cfba-48cc-beef-b6a89e3eb7c4",
                  "parentUUID": "6815ffd6-a4da-4b15-8222-f90b35185f42",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5a4fe309-cfba-48cc-beef-b6a89e3eb7c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "692d49db-86b3-4323-8059-db008c8b4fdd",
              "title": "fabric.listSavedQueries",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should make a successful API call",
                  "fullTitle": "manipulating restql fabric.listSavedQueries should make a successful API call",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.listSavedQueries();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.length).to.be.at.least(1);",
                  "err": {},
                  "uuid": "9654c78e-667a-4f81-b0ff-1d78cabdba5b",
                  "parentUUID": "692d49db-86b3-4323-8059-db008c8b4fdd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9654c78e-667a-4f81-b0ff-1d78cabdba5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 308,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "e0948123-cf0a-436e-a7dc-b8bc1176cdae",
              "title": "fabric.executeSavedQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery \"before all\" hook",
                  "timedOut": false,
                  "duration": 921,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.executeSavedQuery(queryName, {});",
                  "err": {},
                  "uuid": "f7391683-baed-4a2e-92f6-942494f33202",
                  "parentUUID": "e0948123-cf0a-436e-a7dc-b8bc1176cdae",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a saved query",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery should execute a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "655352cc-522a-4db8-b9cb-1a86861da219",
                  "parentUUID": "e0948123-cf0a-436e-a7dc-b8bc1176cdae",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "655352cc-522a-4db8-b9cb-1a86861da219"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "a09a213c-ef2a-4b6f-96fd-ba144fbed8d3",
              "title": "fabric.deleteSavedQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.deleteSavedQuery should delete a saved query",
                  "timedOut": false,
                  "duration": 304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.deleteSavedQuery(queryName);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "c4e24449-0a25-4910-a3ef-e6e991e90d30",
                  "parentUUID": "a09a213c-ef2a-4b6f-96fd-ba144fbed8d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c4e24449-0a25-4910-a3ef-e6e991e90d30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 304,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "0ba45e6d-2871-458e-8136-ae64703df699",
              "title": "fabric.createRestqlCursor",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.createRestqlCursor should delete a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "d4188b78-41bd-4878-b906-1272a2cd5a49",
                  "parentUUID": "0ba45e6d-2871-458e-8136-ae64703df699",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "d4188b78-41bd-4878-b906-1272a2cd5a49"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "bdf6f5cf-a5f6-412e-97e6-f49d0e4a8bcb",
          "title": " StreamApps ",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
          "file": "/lib/async/test/32-streamapps.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": " StreamApps  \"before all\" hook",
              "timedOut": false,
              "duration": 1229,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "6ab57737-f409-4d61-9c39-2fb4b5d1afab",
              "parentUUID": "bdf6f5cf-a5f6-412e-97e6-f49d0e4a8bcb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": " StreamApps  \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "c53bf9b1-85c0-41b7-8227-82f8f81c4284",
              "parentUUID": "bdf6f5cf-a5f6-412e-97e6-f49d0e4a8bcb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "db08c569-bb3a-436d-9c61-c5cd2c663863",
              "title": "fabric.createStreamApp",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Should create a Stream Apllication",
                  "fullTitle": " StreamApps  fabric.createStreamApp Should create a Stream Apllication",
                  "timedOut": false,
                  "duration": 633,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllEdgeLocations();\nlet dcListAll = helper_1.getDCListString(response);\nlet dcList = dcListAll.split(\",\");\nlet appDefinition = `@App:name('Sample-Cargo-App')\n    -- Stream\n    define stream srcCargoStream (weight int);\n    -- Table\n    define table destCargoTable (weight int, totalWeight long);\n    -- Data Processing\n    @info(name='Query')\n    select weight, sum(weight) as totalWeight\n    from srcCargoStream\n    insert into destCargoTable;`;\nlet resp = await fabric.createStreamApp(dcList, appDefinition);\nconsole.log(resp);\nchai_1.expect(resp.error).to.be.false;",
                  "err": {},
                  "uuid": "4684361b-fbf5-48c1-9412-6579a654de5c",
                  "parentUUID": "db08c569-bb3a-436d-9c61-c5cd2c663863",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4684361b-fbf5-48c1-9412-6579a654de5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 633,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "5476f233-dd31-491e-ad19-db7a0f01c8bd",
              "title": "fabric.getAllStreamApps",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get all stream apps",
                  "fullTitle": " StreamApps  fabric.getAllStreamApps get all stream apps",
                  "timedOut": false,
                  "duration": 285,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await fabric.getAllStreamApps();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "c2e85ad4-7074-4797-92c6-b857c1305d8f",
                  "parentUUID": "5476f233-dd31-491e-ad19-db7a0f01c8bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2e85ad4-7074-4797-92c6-b857c1305d8f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 285,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "427447d4-9fb4-4d5d-8c3a-68b97da2cc8b",
              "title": "fabric.validateStreamappDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "validate the streamapp definition",
                  "fullTitle": " StreamApps  fabric.validateStreamappDefinition validate the streamapp definition",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let appDefinition = `@App:name('Sample-Cargo-App')\n    -- Stream\n    define stream srcCargoStream (weight int);\n    -- Table\n    define table destCargoTable (weight int, totalWeight long);\n    -- Data Processing\n    @info(name='Query')\n    select weight, sum(weight) as totalWeight\n    from srcCargoStream\n    insert into destCargoTable;`;\nlet response = await fabric.validateStreamappDefinition(appDefinition);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "87a005b9-f64a-44f8-ab1c-091c312ae151",
                  "parentUUID": "427447d4-9fb4-4d5d-8c3a-68b97da2cc8b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "87a005b9-f64a-44f8-ab1c-091c312ae151"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 305,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d61474e6-2ad9-44f0-95bc-538ac53e032e",
              "title": "fabric.getSampleStreamApps",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "get sample stream apps",
                  "fullTitle": " StreamApps  fabric.getSampleStreamApps get sample stream apps",
                  "timedOut": false,
                  "duration": 619,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let response = await fabric.getSampleStreamApps();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "50903ca6-224c-4458-a09d-d5eb8b3fb6c0",
                  "parentUUID": "d61474e6-2ad9-44f0-95bc-538ac53e032e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "50903ca6-224c-4458-a09d-d5eb8b3fb6c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 619,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "dc67cbf7-72c3-4fbd-94c2-05f5eca18aeb",
              "title": "streamapps.activateStreamApplication",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Activate a stream App",
                  "fullTitle": " StreamApps  streamapps.activateStreamApplication Activate a stream App",
                  "timedOut": false,
                  "duration": 300,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const app = fabric.streamApp(\"Sample-Cargo-App\");\nlet response = await app.activateStreamApplication(true);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "7b6a4845-38c7-449d-9745-0a37d25e7ade",
                  "parentUUID": "dc67cbf7-72c3-4fbd-94c2-05f5eca18aeb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b6a4845-38c7-449d-9745-0a37d25e7ade"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 300,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "eb2f7dde-4ac6-4458-a231-138abc48419c",
              "title": "streamapps.retriveApplication",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Retrive a stream App",
                  "fullTitle": " StreamApps  streamapps.retriveApplication Retrive a stream App",
                  "timedOut": false,
                  "duration": 272,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const app = fabric.streamApp(\"Sample-Cargo-App\");\nlet response = await app.retriveApplication();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "3804610f-cf35-4545-b017-9a37f92d0990",
                  "parentUUID": "eb2f7dde-4ac6-4458-a231-138abc48419c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3804610f-cf35-4545-b017-9a37f92d0990"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 272,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "62fbe30b-f970-4066-89ea-7affa83c9eaa",
              "title": "streamapps.updateApplication",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Update a stream App",
                  "fullTitle": " StreamApps  streamapps.updateApplication Update a stream App",
                  "timedOut": false,
                  "duration": 648,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const resp = await fabric.getAllEdgeLocations();\nlet dcListAll = helper_1.getDCListString(resp);\nlet dcList = dcListAll.split(\",\");\nlet appdef = `@App:name('Sample-Cargo-App')\n    -- Stream\n    define stream srcCargoStream (weight int);\n    -- Table\n    define table destCargoTable (weight int, totalWeight long);\n    -- Data Processing\n    @info(name='Query')\n    select weight, sum(weight) as totalWeight\n    from srcCargoStream\n    insert into destCargoTable;`;\nconst app = fabric.streamApp(\"Sample-Cargo-App\");\nlet response = await app.updateApplication(dcList, appdef);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "79bb04b8-9347-4c48-aff6-43261a349c97",
                  "parentUUID": "62fbe30b-f970-4066-89ea-7affa83c9eaa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79bb04b8-9347-4c48-aff6-43261a349c97"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 648,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "219aebf8-55ad-4759-b1d9-61356b960a80",
              "title": "streamapps.query",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "runs query",
                  "fullTitle": " StreamApps  streamapps.query runs query",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const app = fabric.streamApp(\"Sample-Cargo-App\");\nlet response = await app.query(\"select * from destCargoTable limit 3\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "211d0c78-e075-4364-a799-6d8b4fdb80bf",
                  "parentUUID": "219aebf8-55ad-4759-b1d9-61356b960a80",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "211d0c78-e075-4364-a799-6d8b4fdb80bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 305,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "101e3497-7f10-4f9a-9cef-89b2377f2b4d",
              "title": "streamapps.deleteApplication",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
              "file": "/lib/async/test/32-streamapps.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Delete a stream App",
                  "fullTitle": " StreamApps  streamapps.deleteApplication Delete a stream App",
                  "timedOut": false,
                  "duration": 298,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const app = fabric.streamApp(\"Sample-Cargo-App\");\nlet response = await app.deleteApplication();\nconsole.log(response);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "552c2da4-9fbf-4f28-abf9-b1a22305a14f",
                  "parentUUID": "101e3497-7f10-4f9a-9cef-89b2377f2b4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "552c2da4-9fbf-4f28-abf9-b1a22305a14f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 298,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "8b22457a-3163-425a-a83a-bcf233b77edb",
          "title": "fabric.route",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-streamapps.js",
          "file": "/lib/async/test/32-streamapps.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns a Route instance",
              "fullTitle": "fabric.route returns a Route instance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route();\nchai_1.expect(route).to.be.an.instanceof(route_1.Route);",
              "err": {},
              "uuid": "65bd8b8c-959f-4ba5-b020-e42edb15bd6b",
              "parentUUID": "8b22457a-3163-425a-a83a-bcf233b77edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates a route for the given path",
              "fullTitle": "fabric.route creates a route for the given path",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = \"/hi\";\nconst route = fabric.route(path);\nchai_1.expect(route._path).to.equal(path);",
              "err": {},
              "uuid": "b5ad0285-8253-479f-8811-18b45d4fc259",
              "parentUUID": "8b22457a-3163-425a-a83a-bcf233b77edb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passes the given headers to the new route",
              "fullTitle": "fabric.route passes the given headers to the new route",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route(\"/hello\", { \"x-magic\": \"awesome\" });\nchai_1.expect(route._headers).to.have.property(\"x-magic\", \"awesome\");",
              "err": {},
              "uuid": "9ebf99e0-c4a9-43bf-85d7-47f802892892",
              "parentUUID": "8b22457a-3163-425a-a83a-bcf233b77edb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "65bd8b8c-959f-4ba5-b020-e42edb15bd6b",
            "b5ad0285-8253-479f-8811-18b45d4fc259",
            "9ebf99e0-c4a9-43bf-85d7-47f802892892"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "193f0fbf-e5dd-48a6-a948-f971aad99f9a"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.1.0"
    }
  }
}