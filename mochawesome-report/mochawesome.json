{
  "stats": {
    "suites": 162,
    "tests": 219,
    "passes": 174,
    "pending": 20,
    "failures": 25,
    "start": "2020-02-20T07:29:00.372Z",
    "end": "2020-02-20T07:31:21.382Z",
    "duration": 141010,
    "testsRegistered": 227,
    "passPercent": 84.05797101449275,
    "pendingPercent": 8.81057268722467,
    "other": 5,
    "hasOther": true,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "5c4f730b-a8c4-4aec-a0cd-aafdc2bb0509",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "gets subscription list",
          "fullTitle": "gets subscription list",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const response = await stream.getSubscriptionList();\nchai_1.expect(response.error).to.be.false;",
          "err": {},
          "uuid": "fddc46c0-2e87-4a00-b3d2-e579a92f5599",
          "parentUUID": "5c4f730b-a8c4-4aec-a0cd-aafdc2bb0509",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "3a96d394-8ced-42ef-910b-c0baaa52614c",
          "title": "Creating a Fabric",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "e415de50-7056-470a-8d56-27085f0d78f5",
              "title": "using the factory",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the factory returns a Fabric instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "6279b373-315a-41e0-939f-7b709f24e522",
                  "parentUUID": "e415de50-7056-470a-8d56-27085f0d78f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the factory passes any configs to the connection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 54321);",
                  "err": {},
                  "uuid": "3c6840f9-b79a-44ba-9f8e-af62fcc067cd",
                  "parentUUID": "e415de50-7056-470a-8d56-27085f0d78f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6279b373-315a-41e0-939f-7b709f24e522",
                "3c6840f9-b79a-44ba-9f8e-af62fcc067cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "e27d2f7f-c456-46f3-a649-2bf25c27d63c",
              "title": "using the constructor",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the constructor returns a Fabric instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "1d99afc3-eeae-423e-8643-2978f1649ae5",
                  "parentUUID": "e27d2f7f-c456-46f3-a649-2bf25c27d63c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the constructor passes any configs to the connection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 43210);",
                  "err": {},
                  "uuid": "0d10c68c-06de-4193-a36a-ce7058c88200",
                  "parentUUID": "e27d2f7f-c456-46f3-a649-2bf25c27d63c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d99afc3-eeae-423e-8643-2978f1649ae5",
                "0d10c68c-06de-4193-a36a-ce7058c88200"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "4c0720af-3507-4656-963d-db8ee7e4c3e3",
          "title": "Configuring the driver",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "60f011e6-b500-4c54-8b87-57348b2d1a00",
              "title": "with a string",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the url",
                  "fullTitle": "Configuring the driver with a string sets the url",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "84ceb3de-6b0c-455a-9916-d114b6989aca",
                  "parentUUID": "60f011e6-b500-4c54-8b87-57348b2d1a00",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "84ceb3de-6b0c-455a-9916-d114b6989aca"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "7f1e43d4-fd7b-4fce-aba4-728196f18dc9",
              "title": "with headers",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "applies the headers",
                  "fullTitle": "Configuring the driver with headers applies the headers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({\n    headers: {\n        \"x-one\": \"1\",\n        \"x-two\": \"2\"\n    }\n});\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-one\", \"1\");\n        chai_1.expect(headers).to.have.property(\"x-two\", \"2\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "2934eccb-c789-4f49-be2b-32b13555ad6c",
                  "parentUUID": "7f1e43d4-fd7b-4fce-aba4-728196f18dc9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2934eccb-c789-4f49-be2b-32b13555ad6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "c7c25e92-1425-4840-a2d8-4a79b7f46028",
              "title": "with an c8Version",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the x-c8-version header",
                  "fullTitle": "Configuring the driver with an c8Version sets the x-c8-version header",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({ c8Version: 99999 });\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-c8-version\", \"99999\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "ff9df47e-fae3-486d-a0fa-e10d91371440",
                  "parentUUID": "c7c25e92-1425-4840-a2d8-4a79b7f46028",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ff9df47e-fae3-486d-a0fa-e10d91371440"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "240f9860-2abe-44b5-85ac-ffe30f0c3eb2",
              "title": "with agentOptions",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Agent = (ptcl) => function (opts) {\n    protocol = ptcl;\n    options = opts;\n    return () => null;\n};\nhttp.Agent = Agent(\"http\");\nhttps.Agent = Agent(\"https\");",
                  "err": {},
                  "uuid": "2670ccbe-3b60-4fb4-b797-f00451463e47",
                  "parentUUID": "240f9860-2abe-44b5-85ac-ffe30f0c3eb2",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "4f6a5fdf-9787-41c6-bcc5-462a67369119",
                  "parentUUID": "240f9860-2abe-44b5-85ac-ffe30f0c3eb2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.Agent = _httpAgent;\nhttps.Agent = _httpsAgent;",
                  "err": {},
                  "uuid": "7a6918de-49f2-4acb-aba6-994eca49abab",
                  "parentUUID": "240f9860-2abe-44b5-85ac-ffe30f0c3eb2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agentOptions to the agent",
                  "fullTitle": "Configuring the driver with agentOptions passes the agentOptions to the agent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "new connection_1.Connection({ agentOptions: { hello: \"world\" } }); // eslint-disable-line no-new\nchai_1.expect(options).to.have.property(\"hello\", \"world\");",
                  "err": {},
                  "uuid": "3e447e27-b517-470c-a9b3-054fc4d16497",
                  "parentUUID": "240f9860-2abe-44b5-85ac-ffe30f0c3eb2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the built-in agent for the protocol",
                  "fullTitle": "Configuring the driver with agentOptions uses the built-in agent for the protocol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// default: http\nnew connection_1.Connection(); // eslint-disable-line no-new\n// expect(protocol).to.equal(\"http\");\nnew connection_1.Connection(\"https://test.macrometa.io\"); // eslint-disable-line no-new\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "3ace3f5b-4361-4c40-a5f6-ccf01d9a8c6f",
                  "parentUUID": "240f9860-2abe-44b5-85ac-ffe30f0c3eb2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e447e27-b517-470c-a9b3-054fc4d16497",
                "3ace3f5b-4361-4c40-a5f6-ccf01d9a8c6f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
              "title": "with agent",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agent \"before all\" hook",
                  "timedOut": false,
                  "duration": 1,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Request = (ptcl) => (opts) => {\n    protocol = ptcl;\n    options = opts;\n    return {\n        on() {\n            return this;\n        },\n        end() {\n            return this;\n        }\n    };\n};\nhttp.request = Request(\"http\");\nhttps.request = Request(\"https\");",
                  "err": {},
                  "uuid": "9bebb32b-963f-42ee-ba35-f12dd07d44cb",
                  "parentUUID": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agent \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "e2b4b4f6-cd44-428b-aa01-e862fd2127dd",
                  "parentUUID": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agent \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.request = _httpRequest;\nhttps.request = _httpsRequest;",
                  "err": {},
                  "uuid": "b6df3c17-0b49-436d-b4d8-bdc06ece293e",
                  "parentUUID": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agent to the request function",
                  "fullTitle": "Configuring the driver with agent passes the agent to the request function",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: https\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);\nagent = Symbol(\"agent\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);",
                  "err": {},
                  "uuid": "d8291434-47e7-4c0c-adab-d4165747e2e2",
                  "parentUUID": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the request function for the protocol",
                  "fullTitle": "Configuring the driver with agent uses the request function for the protocol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: http\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "89d9d08d-57cf-435c-a99f-255ad6331a81",
                  "parentUUID": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "calls Agent#destroy when the connection is closed",
                  "fullTitle": "Configuring the driver with agent calls Agent#destroy when the connection is closed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = {\n    _destroyed: false,\n    destroy() {\n        this._destroyed = true;\n    }\n};\nconst conn = new connection_1.Connection({ agent });\nchai_1.expect(agent._destroyed).to.equal(false);\nconn.close();\nchai_1.expect(agent._destroyed).to.equal(true);",
                  "err": {},
                  "uuid": "4e90430a-bf4c-4c52-8e45-120554f11065",
                  "parentUUID": "519d9d7d-2602-4d9c-9246-9f7d4b0a7be4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d8291434-47e7-4c0c-adab-d4165747e2e2",
                "89d9d08d-57cf-435c-a99f-255ad6331a81",
                "4e90430a-bf4c-4c52-8e45-120554f11065"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
          "title": "Manipulating fabrics",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
          "file": "/lib/async/test/01-manipulating-fabrics.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1698,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "669119ea-7c07-44f0-a0b1-14014d0dfe84",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1099,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fabric2 = new jsC8_1.Fabric({\n    url: testUrl\n});\nawait fabric2.login(\"guest@macrometa.io\", \"guest\");\nfabric2.useTenant(\"guest\");\ncollection = fabric2.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "0b31197c-da08-4327-a27f-6d362d51bf69",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 608,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "a912d9c9-57a6-45de-804a-e83c02bb18d8",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\")",
              "err": {},
              "uuid": "0f89e0ca-c0f6-42e4-bea9-9ed21c1a90be",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "dd4fccc6-7f8c-44ac-9570-049e72523a95",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 151,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.drop();",
              "err": {},
              "uuid": "fc9d2c68-f3fd-41b5-a171-656e376d5ef2",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating fabrics \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "e7f29e2b-f441-4757-9c74-818a503610eb",
              "parentUUID": "db703b2a-7968-4ff5-99a7-06c947df7ad4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f0c0eefb-54c5-4ae2-9d9d-420d5e74128c",
              "title": "fabric.version",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the version object when no details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when no details are required",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version();\nchai_1.expect(response.server).to.equal(\"C8DB\");",
                  "err": {},
                  "uuid": "7cff9b07-c9a9-4477-a79f-0df535ea4ba4",
                  "parentUUID": "f0c0eefb-54c5-4ae2-9d9d-420d5e74128c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the version object when details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when details are required",
                  "timedOut": false,
                  "duration": 128,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version(true);\nchai_1.expect(response.server).to.equal(\"C8DB\");\nchai_1.expect(response.details).to.haveOwnProperty(\"C8DB\");",
                  "err": {
                    "message": "AssertionError: expected { Object (architecture, arm, ...) } to have own property 'C8DB'",
                    "estack": "AssertionError: expected { Object (architecture, arm, ...) } to have own property 'C8DB'\n    at Context.it (src/test/01-manipulating-fabrics.ts:60:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "43f5c60d-70c2-4615-b0af-03e2131a9835",
                  "parentUUID": "f0c0eefb-54c5-4ae2-9d9d-420d5e74128c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7cff9b07-c9a9-4477-a79f-0df535ea4ba4"
              ],
              "failures": [
                "43f5c60d-70c2-4615-b0af-03e2131a9835"
              ],
              "pending": [],
              "skipped": [],
              "duration": 250,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "80a5f2b3-cca0-4fba-a55b-fbbdecdbbcb8",
              "title": "fabric.useFabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the fabric name",
                  "fullTitle": "Manipulating fabrics fabric.useFabric updates the fabric name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = \"example\";\nchai_1.expect(fabric.name).to.equal(\"_system\"); // default\nfabric.useFabric(name);\nchai_1.expect(fabric._connection).to.have.property(\"_fabricName\", name);\nchai_1.expect(fabric.name).to.equal(name);",
                  "err": {},
                  "uuid": "555e0a38-86f9-48d8-a268-fbc6c0cc505c",
                  "parentUUID": "80a5f2b3-cca0-4fba-a55b-fbbdecdbbcb8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns itself",
                  "fullTitle": "Manipulating fabrics fabric.useFabric returns itself",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabric2 = fabric.useFabric(\"nope\");\nchai_1.expect(fabric).to.equal(fabric2);",
                  "err": {},
                  "uuid": "3189b12c-2546-4ba5-a794-af4982e3ccc5",
                  "parentUUID": "80a5f2b3-cca0-4fba-a55b-fbbdecdbbcb8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "555e0a38-86f9-48d8-a268-fbc6c0cc505c",
                "3189b12c-2546-4ba5-a794-af4982e3ccc5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0c21ed60-4b0e-4f40-be08-b55cd00bf4f1",
              "title": "fabric.edgeLocations",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gets all the edge locations",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets all the edge locations",
                  "timedOut": false,
                  "duration": 129,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllEdgeLocations();\nchai_1.expect(Array.isArray(response)).to.be.true;\nchai_1.expect(response[0]).to.haveOwnProperty(\"_id\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"name\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"tags\");\nchai_1.expect(response.length).to.be.greaterThan(0);",
                  "err": {},
                  "uuid": "20c985d0-2cc6-41bc-86ec-c4a34e234441",
                  "parentUUID": "0c21ed60-4b0e-4f40-be08-b55cd00bf4f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets local edge location",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets local edge location",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\nchai_1.expect(Array.isArray(response)).to.be.false;\nchai_1.expect(response).to.haveOwnProperty(\"_id\");\nchai_1.expect(response).to.haveOwnProperty(\"name\");\nchai_1.expect(response).to.haveOwnProperty(\"tags\");",
                  "err": {},
                  "uuid": "a3a3289f-27c1-4958-862b-1d5e4c80d5a5",
                  "parentUUID": "0c21ed60-4b0e-4f40-be08-b55cd00bf4f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "20c985d0-2cc6-41bc-86ec-c4a34e234441",
                "a3a3289f-27c1-4958-862b-1d5e4c80d5a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 247,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "75c5c1fe-2736-479e-876f-4b64cc063cfc",
              "title": "fabric.createFabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.createFabric \"after each\" hook",
                  "timedOut": false,
                  "duration": 163,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "a46e0f2e-185b-4b92-a5ba-a662d4e91e06",
                  "parentUUID": "75c5c1fe-2736-479e-876f-4b64cc063cfc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a fabric with the given name",
                  "fullTitle": "Manipulating fabrics fabric.createFabric creates a fabric with the given name",
                  "timedOut": false,
                  "duration": 923,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nconst info = await fabric.get();\nchai_1.expect(info.name).to.equal(name);",
                  "err": {},
                  "uuid": "8adcb18e-e9df-47ae-840b-164aabf906de",
                  "parentUUID": "75c5c1fe-2736-479e-876f-4b64cc063cfc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "adds the given users to the fabric",
                  "fullTitle": "Manipulating fabrics fabric.createFabric adds the given users to the fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "e9b467dc-bce5-4170-843b-b96de9bfda99",
                  "parentUUID": "75c5c1fe-2736-479e-876f-4b64cc063cfc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8adcb18e-e9df-47ae-840b-164aabf906de"
              ],
              "failures": [],
              "pending": [
                "e9b467dc-bce5-4170-843b-b96de9bfda99"
              ],
              "skipped": [],
              "duration": 923,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6a102420-a369-4913-b656-f4c227227a32",
              "title": "fabric.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetches the fabric description if the fabric exists",
                  "fullTitle": "Manipulating fabrics fabric.get fetches the fabric description if the fabric exists",
                  "timedOut": false,
                  "duration": 188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await fabric.get();\nchai_1.expect(info.name).to.equal(fabric.name);\nchai_1.expect(fabric.name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "2fd77171-e40c-4bf7-b6d9-1b4f91e65766",
                  "parentUUID": "6a102420-a369-4913-b656-f4c227227a32",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fails if the fabric does not exist",
                  "fullTitle": "Manipulating fabrics fabric.get fails if the fabric does not exist",
                  "timedOut": false,
                  "duration": 149,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"__does_not_exist__\");\ntry {\n    await fabric.get();\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n    return;\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "42b9935f-8a98-4b19-ac66-9c72d934a75a",
                  "parentUUID": "6a102420-a369-4913-b656-f4c227227a32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fd77171-e40c-4bf7-b6d9-1b4f91e65766",
                "42b9935f-8a98-4b19-ac66-9c72d934a75a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 337,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6a0fb1eb-1eab-4b2e-8a7e-1fbcabf3f41c",
              "title": "fabric.listFabrics",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of all fabrics",
                  "fullTitle": "Manipulating fabrics fabric.listFabrics returns a list of all fabrics",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics.indexOf(\"_system\")).to.be.greaterThan(-1);",
                  "err": {},
                  "uuid": "e6b484bf-55bb-4e2d-a063-3d4a61c098f0",
                  "parentUUID": "6a0fb1eb-1eab-4b2e-8a7e-1fbcabf3f41c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6b484bf-55bb-4e2d-a063-3d4a61c098f0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 120,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c9bf7393-c059-4284-95ac-3eb9f3f71f74",
              "title": "fabric.listUserFabrics",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of fabrics accessible to the active user",
                  "fullTitle": "Manipulating fabrics fabric.listUserFabrics returns a list of fabrics accessible to the active user",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listUserFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics[0].name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "ef1a8473-aec8-40a4-947b-57fcc992b488",
                  "parentUUID": "c9bf7393-c059-4284-95ac-3eb9f3f71f74",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ef1a8473-aec8-40a4-947b-57fcc992b488"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "30b1f00f-4987-4441-ada0-ca689c7a1705",
              "title": "fabric.dropFabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric \"before each\" hook",
                  "timedOut": false,
                  "duration": 186,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});",
                  "err": {},
                  "uuid": "1866bc04-a8f5-4aa2-8efa-f865924c293f",
                  "parentUUID": "30b1f00f-4987-4441-ada0-ca689c7a1705",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given fabric from the server",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric deletes the given fabric from the server",
                  "timedOut": false,
                  "duration": 235,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.dropFabric(name);\nlet temp = new jsC8_1.Fabric().useFabric(name);\ntry {\n    await temp.get();\n}\ncatch (e) {\n    return;\n}\nfinally {\n    temp.close();\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "ae7742a9-0ee2-4df6-9c25-71a7aa4bb77c",
                  "parentUUID": "30b1f00f-4987-4441-ada0-ca689c7a1705",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae7742a9-0ee2-4df6-9c25-71a7aa4bb77c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 235,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "2dba2563-f62d-4bf8-b26d-951cf9266af6",
              "title": "fabric.truncate",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"before each\" hook",
                  "timedOut": false,
                  "duration": 1178,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create();\n        await collection.save({ _key: \"example\" });\n    }),\n    ...systemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create({ isSystem: true });\n        await collection.save({ _key: \"example\" });\n    })\n]);",
                  "err": {},
                  "uuid": "dca2c6d6-3bea-4176-a72f-c93fb9cb8d66",
                  "parentUUID": "2dba2563-f62d-4bf8-b26d-951cf9266af6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"after each\" hook",
                  "timedOut": false,
                  "duration": 158,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "cc6b7f7d-3620-492c-8e62-37718b46e732",
                  "parentUUID": "2dba2563-f62d-4bf8-b26d-951cf9266af6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "removes all documents from all non-system collections in the fabric",
                  "fullTitle": "Manipulating fabrics fabric.truncate removes all documents from all non-system collections in the fabric",
                  "timedOut": false,
                  "duration": 2300,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.truncate();\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    }),\n    ...systemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    })\n]);",
                  "err": {},
                  "uuid": "6b7b8ebb-4934-45b7-a7fb-389aa51c55a8",
                  "parentUUID": "2dba2563-f62d-4bf8-b26d-951cf9266af6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally truncates system collections if explicitly passed false",
                  "fullTitle": "Manipulating fabrics fabric.truncate additionally truncates system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "311b5a75-cef5-49eb-8e75-f29a2277fecc",
                  "parentUUID": "2dba2563-f62d-4bf8-b26d-951cf9266af6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6b7b8ebb-4934-45b7-a7fb-389aa51c55a8"
              ],
              "failures": [],
              "pending": [
                "311b5a75-cef5-49eb-8e75-f29a2277fecc"
              ],
              "skipped": [],
              "duration": 2300,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "08fd7ad2-ea24-4625-89cd-4c280e31aa0d",
              "title": "fabric.validateQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate correct query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate correct query",
                  "timedOut": false,
                  "duration": 112,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.validateQuery(\"for doc in docs return doc\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "b9829dfe-9585-4473-83d2-cbd634d5dfd6",
                  "parentUUID": "08fd7ad2-ea24-4625-89cd-4c280e31aa0d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate incorrect query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate incorrect query",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    const response = await fabric.validateQuery(\"forrrr doc in docs return doc\");\n    chai_1.expect(response.error).to.be.true;\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n}",
                  "err": {},
                  "uuid": "8e8a71fe-5e52-4130-abf9-6814207f5f25",
                  "parentUUID": "08fd7ad2-ea24-4625-89cd-4c280e31aa0d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9829dfe-9585-4473-83d2-cbd634d5dfd6",
                "8e8a71fe-5e52-4130-abf9-6814207f5f25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 232,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4d486fbd-af04-42e5-9178-707ef8b6294c",
              "title": "fabric.explainQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should explain query",
                  "fullTitle": "Manipulating fabrics fabric.explainQuery should explain query",
                  "timedOut": false,
                  "duration": 120,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryObject = {\n    query: `for doc in ${collectionName} return doc`,\n    bindVars: {}\n};\nconst response = await fabric.explainQuery(queryObject);\nchai_1.expect(response.error).to.be.false;",
                  "err": {
                    "message": "C8Error: expecting POST /_api/query",
                    "estack": "C8Error: expecting POST /_api/query\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "217b338d-608d-47d7-a4ce-03b1935b1b6e",
                  "parentUUID": "4d486fbd-af04-42e5-9178-707ef8b6294c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "217b338d-608d-47d7-a4ce-03b1935b1b6e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 120,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "392a57a8-cf8b-4dd0-8613-0ea85a524b7b",
              "title": "fabric.getCurrentQueries",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get currently running queries",
                  "fullTitle": "Manipulating fabrics fabric.getCurrentQueries should get currently running queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "2d1a03e1-c901-425b-a0a6-f6a014b6a0a3",
                  "parentUUID": "392a57a8-cf8b-4dd0-8613-0ea85a524b7b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "2d1a03e1-c901-425b-a0a6-f6a014b6a0a3"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "cf8c0528-aa5b-4d33-9be1-8439564c7054",
              "title": "fabric.clearSlowQueries",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear slow queries",
                  "fullTitle": "Manipulating fabrics fabric.clearSlowQueries should clear slow queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "812eadb2-f705-468b-bb15-11a35312f9ec",
                  "parentUUID": "cf8c0528-aa5b-4d33-9be1-8439564c7054",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "812eadb2-f705-468b-bb15-11a35312f9ec"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "49672e3a-5ffd-44f7-a293-1b28d411ec05",
              "title": "fabric.terminateRunningQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should terminate running query",
                  "fullTitle": "Manipulating fabrics fabric.terminateRunningQuery should terminate running query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "a8f52a93-31d0-42d7-aa0d-33f5c70742fb",
                  "parentUUID": "49672e3a-5ffd-44f7-a293-1b28d411ec05",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "a8f52a93-31d0-42d7-aa0d-33f5c70742fb"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "fadfa776-6ca4-4f37-a94d-88428e82c8d8",
          "title": "Accessing collections",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
          "file": "/lib/async/test/02-accessing-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing collections \"before all\" hook",
              "timedOut": false,
              "duration": 929,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\nconst collections = await fabric.listCollections(false);\nbuiltinSystemCollections = collections.map((c) => c.name);",
              "err": {},
              "uuid": "2f31319d-2c54-4dd5-aae2-80c25dfe9027",
              "parentUUID": "fadfa776-6ca4-4f37-a94d-88428e82c8d8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing collections \"after all\" hook",
              "timedOut": false,
              "duration": 156,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "c3657f2b-7e19-4b40-b2bc-97664d56425d",
              "parentUUID": "fadfa776-6ca4-4f37-a94d-88428e82c8d8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d6ee5ec1-ce2e-4d10-bbf6-90191c3ddf5d",
              "title": "fabric.collection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a DocumentCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.collection returns a DocumentCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = fabric.collection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.DocumentCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "8944805a-1c73-4db6-94d1-e5d42b14747d",
                  "parentUUID": "d6ee5ec1-ce2e-4d10-bbf6-90191c3ddf5d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8944805a-1c73-4db6-94d1-e5d42b14747d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "8a744d9b-f2f9-4e60-9998-26166daf270b",
              "title": "fabric.edgeCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an EdgeCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.edgeCollection returns an EdgeCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"tomato\";\nlet collection = fabric.edgeCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.EdgeCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "1506fe09-c04a-493f-83f7-105eb3ff622a",
                  "parentUUID": "8a744d9b-f2f9-4e60-9998-26166daf270b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1506fe09-c04a-493f-83f7-105eb3ff622a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "db8a7e2a-4d87-434b-b3e2-17adb56243dc",
              "title": "fabric.listCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"before all\" hook",
                  "timedOut": false,
                  "duration": 407,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).create())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).create({ isSystem: true })\n    // )\n]);",
                  "err": {},
                  "uuid": "a2f3c97e-aea5-4894-9f41-0c1f9384c4e6",
                  "parentUUID": "db8a7e2a-4d87-434b-b3e2-17adb56243dc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"after all\" hook",
                  "timedOut": false,
                  "duration": 309,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).drop())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).drop({ isSystem: true })\n    // )\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2992fd84-8750-4770-b925-759888dafe01",
                  "parentUUID": "db8a7e2a-4d87-434b-b3e2-17adb56243dc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all non-system collections",
                  "fullTitle": "Accessing collections fabric.listCollections fetches information about all non-system collections",
                  "timedOut": false,
                  "duration": 126,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections()\n    .then(collections => {\n    chai_1.expect(collections.length).to.equal(nonSystemCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(nonSystemCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c5905700-19f5-4532-9f7f-5f5fa9450ea2",
                  "parentUUID": "db8a7e2a-4d87-434b-b3e2-17adb56243dc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.listCollections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections(false)\n    .then(collections => {\n    let allCollectionNames = nonSystemCollectionNames\n        // .concat(systemCollectionNames)\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(collections.length).to.be.at.least(allCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(allCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a2ccdcd7-8e63-4c8e-a323-91e1262c9123",
                  "parentUUID": "db8a7e2a-4d87-434b-b3e2-17adb56243dc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c5905700-19f5-4532-9f7f-5f5fa9450ea2",
                "a2ccdcd7-8e63-4c8e-a323-91e1262c9123"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 245,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "d0232c1c-4eb2-4e8a-b37d-cee100ba3f86",
              "title": "fabric.collections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"before all\" hook",
                  "timedOut": false,
                  "duration": 620,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "08bce537-de8c-4301-ae3a-26c0b56c8ac7",
                  "parentUUID": "d0232c1c-4eb2-4e8a-b37d-cee100ba3f86",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"after all\" hook",
                  "timedOut": false,
                  "duration": 479,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).drop()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).drop())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "831e0543-f40b-4789-b905-34c9c222a594",
                  "parentUUID": "d0232c1c-4eb2-4e8a-b37d-cee100ba3f86",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates DocumentCollection and EdgeCollection instances",
                  "fullTitle": "Accessing collections fabric.collections creates DocumentCollection and EdgeCollection instances",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections()\n    .then(collections => {\n    let documentCollections = collections\n        .filter((c) => c instanceof collection_1.DocumentCollection)\n        .sort();\n    let edgeCollections = collections\n        .filter((c) => c instanceof collection_1.EdgeCollection)\n        .sort();\n    chai_1.expect(documentCollections.length).to.equal(documentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(documentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.equal(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3471d0ff-f6ff-4ed5-9f48-4558e0510bbc",
                  "parentUUID": "d0232c1c-4eb2-4e8a-b37d-cee100ba3f86",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.collections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections(false)\n    .then(collections => {\n    let documentCollections = collections.filter((c) => c instanceof collection_1.DocumentCollection);\n    let edgeCollections = collections.filter((c) => c instanceof collection_1.EdgeCollection);\n    let allDocumentCollectionNames = documentCollectionNames\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(documentCollections.length).to.be.at.least(allDocumentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(allDocumentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.be.at.least(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "df9aace9-d8e7-4028-941b-63b08c429998",
                  "parentUUID": "d0232c1c-4eb2-4e8a-b37d-cee100ba3f86",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3471d0ff-f6ff-4ed5-9f48-4558e0510bbc",
                "df9aace9-d8e7-4028-941b-63b08c429998"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 241,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "0660b70f-df7a-4a41-9b9c-ce78fec797e5",
          "title": "Accessing graphs",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
          "file": "/lib/async/test/03-accessing-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing graphs \"before all\" hook",
              "timedOut": false,
              "duration": 804,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "9bb69b2a-2556-44b8-b78f-964b48f0725d",
              "parentUUID": "0660b70f-df7a-4a41-9b9c-ce78fec797e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing graphs \"after all\" hook",
              "timedOut": false,
              "duration": 156,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "29f91af0-dcc3-47b3-a92b-a051b2d91802",
              "parentUUID": "0660b70f-df7a-4a41-9b9c-ce78fec797e5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6b9464a1-1682-4fb7-a233-e63f5a4d7dde",
              "title": "fabric.graph",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Graph instance",
                  "fullTitle": "Accessing graphs fabric.graph returns a Graph instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet graph = fabric.graph(name);\nchai_1.expect(graph).to.be.an.instanceof(graph_1.Graph);\nchai_1.expect(graph)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "05858caa-7806-4844-8c07-3feab1605715",
                  "parentUUID": "6b9464a1-1682-4fb7-a233-e63f5a4d7dde",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05858caa-7806-4844-8c07-3feab1605715"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "67e879d2-f360-410e-92f6-ceef73fd2209",
              "title": "fabric.listGraphs",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 654,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        })),\n        isSmart: true,\n        options: {\n            numberOfShards: 1,\n            smartGraphAttribute: \"test\"\n        },\n        orphanCollections: []\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d45abcd1-b3ce-47be-94be-630c932a5afa",
                  "parentUUID": "67e879d2-f360-410e-92f6-ceef73fd2209",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 519,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "dd9f2bd9-f1ab-425c-bf9d-87deee9dd043",
                  "parentUUID": "67e879d2-f360-410e-92f6-ceef73fd2209",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all graphs",
                  "fullTitle": "Accessing graphs fabric.listGraphs fetches information about all graphs",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listGraphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g._key).sort()).to.eql(graphNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "36c0b8e8-ceaa-4824-b9b9-9ccde3bf79ca",
                  "parentUUID": "67e879d2-f360-410e-92f6-ceef73fd2209",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36c0b8e8-ceaa-4824-b9b9-9ccde3bf79ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 122,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "b0f2d1d6-6b60-404e-8eec-24adb50b24f1",
              "title": "fabric.graphs",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 544,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        }))\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "3e0dca3d-dcae-48df-8655-2bbcc8e03962",
                  "parentUUID": "b0f2d1d6-6b60-404e-8eec-24adb50b24f1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 536,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b80dcc7b-25c8-4d27-b280-d3dd80360e0d",
                  "parentUUID": "b0f2d1d6-6b60-404e-8eec-24adb50b24f1",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates Graph instances",
                  "fullTitle": "Accessing graphs fabric.graphs creates Graph instances",
                  "timedOut": false,
                  "duration": 124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .graphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g.name).sort()).to.eql(graphNames);\n    graphs.forEach((graph) => chai_1.expect(graph).to.be.an.instanceof(graph_1.Graph));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c658937c-3e2a-4e33-96f8-f3860809d5c9",
                  "parentUUID": "b0f2d1d6-6b60-404e-8eec-24adb50b24f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c658937c-3e2a-4e33-96f8-f3860809d5c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "6ec909dc-0ca3-4099-870b-1feb9c95029f",
          "title": "Transactions",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/04-transactions.js",
          "file": "/lib/async/test/04-transactions.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Transactions \"before all\" hook",
              "timedOut": false,
              "duration": 507,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "890412ce-9d51-448d-804d-6e43331b3815",
              "parentUUID": "6ec909dc-0ca3-4099-870b-1feb9c95029f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Transactions \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "29f60023-69f9-41c8-868c-7c3870a76345",
              "parentUUID": "6ec909dc-0ca3-4099-870b-1feb9c95029f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "94897fef-b03f-4f03-b126-b28197b8a371",
              "title": "fabric.transaction",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/04-transactions.js",
              "file": "/lib/async/test/04-transactions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a transaction and return the result",
                  "fullTitle": "Transactions fabric.transaction should execute a transaction and return the result",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await fabric.transaction([], \"function (params) {return params;}\", \"test\");\nchai_1.expect(result).to.equal(\"test\");",
                  "err": {},
                  "uuid": "79f53926-2f55-412a-96a3-c413f84b0ba9",
                  "parentUUID": "94897fef-b03f-4f03-b126-b28197b8a371",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79f53926-2f55-412a-96a3-c413f84b0ba9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 122,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "908b6056-ef69-4282-b593-58af9077e6ce",
          "title": "C8QL queries",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/05-c8ql-queries.js",
          "file": "/lib/async/test/05-c8ql-queries.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL queries \"before all\" hook",
              "timedOut": false,
              "duration": 1831,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "ccebde5b-0cfe-4e46-be3a-0607aea71666",
              "parentUUID": "908b6056-ef69-4282-b593-58af9077e6ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL queries \"after all\" hook",
              "timedOut": false,
              "duration": 155,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "bcd201a9-7ba0-47e6-968d-c3875c1e8e64",
              "parentUUID": "908b6056-ef69-4282-b593-58af9077e6ce",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
              "title": "fabric.query",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\")\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a9036fbd-4ced-4e54-9b2e-b1e05ab0cf1e",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR i IN no RETURN i\")\n    .then(() => {\n    chai_1.expect.fail();\n    done();\n})\n    .catch(err => {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n    done();\n});",
                  "err": {},
                  "uuid": "3f6943da-ddb3-4f48-92bf-f2cada07d5b7",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error (async await)",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error (async await)",
                  "timedOut": false,
                  "duration": 121,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.query(\"FOR i IN no RETURN i\");\n    chai_1.expect.fail();\n}\ncatch (err) {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n}",
                  "err": {},
                  "uuid": "d45d55a6-3fb9-46d5-8b0c-9ecae896be0a",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "2aa33ea5-43f8-40cf-82b7-d28086037a83",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", undefined, {\n    batchSize: 2,\n    count: true\n})\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "94298396-7c0e-4d3b-937d-7afbe0167879",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports AQB queries",
                  "fullTitle": "C8QL queries fabric.query supports AQB queries",
                  "timedOut": false,
                  "duration": 123,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ toC8QL: () => \"RETURN 42\" })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(42);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "68e48e4c-4d1a-43b4-ae0c-5c4463b0bb40",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports query objects",
                  "fullTitle": "C8QL queries fabric.query supports query objects",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN 1337\", bindVars: {} })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(1337);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "4372a389-d401-4308-bac7-b62cda929ae9",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries",
                  "fullTitle": "C8QL queries fabric.query supports compact queries",
                  "timedOut": false,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN @potato\", bindVars: { potato: \"tomato\" } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(\"tomato\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "49a7a1ff-d3de-4c25-886f-de27b5d451a3",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 121,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6b2b6fb0-116a-4292-aa97-85e29166d32f",
                  "parentUUID": "9b0b55e4-5f03-4eac-911a-efb32631d41b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a9036fbd-4ced-4e54-9b2e-b1e05ab0cf1e",
                "3f6943da-ddb3-4f48-92bf-f2cada07d5b7",
                "d45d55a6-3fb9-46d5-8b0c-9ecae896be0a",
                "2aa33ea5-43f8-40cf-82b7-d28086037a83",
                "94298396-7c0e-4d3b-937d-7afbe0167879",
                "68e48e4c-4d1a-43b4-ae0c-5c4463b0bb40",
                "4372a389-d401-4308-bac7-b62cda929ae9",
                "49a7a1ff-d3de-4c25-886f-de27b5d451a3",
                "6b2b6fb0-116a-4292-aa97-85e29166d32f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1097,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7cb7aa38-4635-422d-88de-4077fbc883d6",
              "title": "c8ql",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "correctly handles simple parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles simple parameters",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let values = [\n    0,\n    42,\n    -1,\n    null,\n    undefined,\n    true,\n    false,\n    \"\",\n    \"string\",\n    [1, 2, 3],\n    { a: \"b\" }\n];\nlet query = jsC8_1.c8ql `\n        A ${values[0]} B ${values[1]} C ${values[2]} D ${values[3]} E ${values[4]} F ${values[5]}\n        G ${values[6]} H ${values[7]} I ${values[8]} J ${values[9]} K ${values[10]} EOF\n      `;\nchai_1.expect(query.query).to.equal(`\n        A @value0 B @value1 C @value2 D @value3 E @value4 F @value5\n        G @value6 H @value7 I @value8 J @value9 K @value10 EOF\n      `);\nlet bindVarNames = Object.keys(query.bindVars).sort((a, b) => (+a.substr(5) > +b.substr(5) ? 1 : -1));\nchai_1.expect(bindVarNames).to.eql([\n    \"value0\",\n    \"value1\",\n    \"value2\",\n    \"value3\",\n    \"value4\",\n    \"value5\",\n    \"value6\",\n    \"value7\",\n    \"value8\",\n    \"value9\",\n    \"value10\"\n]);\nchai_1.expect(bindVarNames.map(k => query.bindVars[k])).to.eql(values);",
                  "err": {},
                  "uuid": "adbe811b-3849-456a-9688-c0271bc8b3b8",
                  "parentUUID": "7cb7aa38-4635-422d-88de-4077fbc883d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles jsC8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles jsC8 collection parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(\"potato\");\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"potato\");",
                  "err": {},
                  "uuid": "ab58cd19-c6d5-4911-bada-a6a154047dcf",
                  "parentUUID": "7cb7aa38-4635-422d-88de-4077fbc883d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles C8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles C8 collection parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "class C8Collection {\n    constructor() {\n        this.isC8Collection = true;\n        this.name = \"tomato\";\n    }\n}\nlet collection = new C8Collection();\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"tomato\");",
                  "err": {},
                  "uuid": "53d80375-79f5-451c-9832-8d18083efc5c",
                  "parentUUID": "7cb7aa38-4635-422d-88de-4077fbc883d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "adbe811b-3849-456a-9688-c0271bc8b3b8",
                "ab58cd19-c6d5-4911-bada-a6a154047dcf",
                "53d80375-79f5-451c-9832-8d18083efc5c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "184ff8b2-b0c9-4fa2-bf70-c7a146122f84",
          "title": "Route API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
          "file": "/lib/async/test/07-routes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Route API \"before all\" hook",
              "timedOut": false,
              "duration": 1864,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\ncollection = fabric.collection(`c${Date.now()}`);\nawait collection.create();",
              "err": {},
              "uuid": "7a9e945c-5923-48ef-b5a0-68d6a5f1c87e",
              "parentUUID": "184ff8b2-b0c9-4fa2-bf70-c7a146122f84",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Route API \"before each\" hook",
              "timedOut": false,
              "duration": 187,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.truncate();",
              "err": {},
              "uuid": "cd99560b-816e-46cd-a19f-5bfe5834f574",
              "parentUUID": "184ff8b2-b0c9-4fa2-bf70-c7a146122f84",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Route API \"after all\" hook",
              "timedOut": false,
              "duration": 257,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "cc963ab0-87c5-4240-8f6d-00159bc6ad51",
              "parentUUID": "184ff8b2-b0c9-4fa2-bf70-c7a146122f84",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "22efded1-a5ab-44c2-8b5c-dc958834e568",
              "title": "route.route",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should concat path",
                  "fullTitle": "Route API route.route should concat path",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const route = fabric.route(\"/api\").route(\"/version\");\nchai_1.expect(route).to.have.property(\"_path\", \"/api/version\");",
                  "err": {},
                  "uuid": "6f8b847c-b988-45d7-bdb0-83427211e74f",
                  "parentUUID": "22efded1-a5ab-44c2-8b5c-dc958834e568",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6f8b847c-b988-45d7-bdb0-83427211e74f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3ba45e7e-2b08-4b87-90ef-5120c8568de2",
              "title": "route.post",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.post should passes body",
                  "timedOut": false,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${collection.name}`)\n    .post({ foo: \"bar\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "83ddc3e3-84d9-4f1d-b86f-f317ca95e537",
                  "parentUUID": "3ba45e7e-2b08-4b87-90ef-5120c8568de2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83ddc3e3-84d9-4f1d-b86f-f317ca95e537"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 155,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0c855fc2-00bb-41e1-a4ad-8bcf6b3256d0",
              "title": "route.put",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.put \"before each\" hook",
                  "timedOut": false,
                  "duration": 203,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a1a793c7-d973-4b0d-b43e-dd37552e77e2",
                  "parentUUID": "0c855fc2-00bb-41e1-a4ad-8bcf6b3256d0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.put should passes body",
                  "timedOut": false,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .put({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a8efd8ab-3607-4dd8-94a1-9591a8fab1ea",
                  "parentUUID": "0c855fc2-00bb-41e1-a4ad-8bcf6b3256d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a8efd8ab-3607-4dd8-94a1-9591a8fab1ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 150,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6e3c22df-2a00-4549-83b1-7009e664e1cc",
              "title": "route.patch",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.patch \"before each\" hook",
                  "timedOut": false,
                  "duration": 155,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "7367a435-ce06-479e-ba56-b7fb5a0ae908",
                  "parentUUID": "6e3c22df-2a00-4549-83b1-7009e664e1cc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.patch should passes body",
                  "timedOut": false,
                  "duration": 243,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .patch({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "cd6ebd43-5a5e-41bf-ab97-ccce456e34e9",
                  "parentUUID": "6e3c22df-2a00-4549-83b1-7009e664e1cc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cd6ebd43-5a5e-41bf-ab97-ccce456e34e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 243,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a60e31f0-ab53-450f-b1b0-33947e0d7a3f",
              "title": "route.delete",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.delete \"before each\" hook",
                  "timedOut": false,
                  "duration": 209,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3b409b3e-80df-4fe5-a661-5cab2f64dc52",
                  "parentUUID": "a60e31f0-ab53-450f-b1b0-33947e0d7a3f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.delete should be executed using the route path",
                  "timedOut": false,
                  "duration": 153,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .delete()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "19e042f1-09a4-4ef8-86f2-5e5c3e1799b5",
                  "parentUUID": "a60e31f0-ab53-450f-b1b0-33947e0d7a3f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19e042f1-09a4-4ef8-86f2-5e5c3e1799b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 153,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3a86d6fd-314b-4f3f-995a-b54fd0289cd4",
              "title": "route.head",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.head \"before each\" hook",
                  "timedOut": false,
                  "duration": 171,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f38dce1b-39b8-48e8-b891-bc273b57350d",
                  "parentUUID": "3a86d6fd-314b-4f3f-995a-b54fd0289cd4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.head should be executed using the route path",
                  "timedOut": false,
                  "duration": 146,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .head()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"statusCode\", 200);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "53774beb-8970-46e3-93be-7fcb52157733",
                  "parentUUID": "3a86d6fd-314b-4f3f-995a-b54fd0289cd4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53774beb-8970-46e3-93be-7fcb52157733"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 146,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "54373e4e-65c2-45ff-bfe8-20b25a838ca0",
          "title": "Cursor API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
          "file": "/lib/async/test/08-cursors.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Cursor API \"before all\" hook",
              "timedOut": false,
              "duration": 924,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "d8bd7238-4376-40fd-a97e-f55f9585c1c4",
              "parentUUID": "54373e4e-65c2-45ff-bfe8-20b25a838ca0",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Cursor API \"before each\" hook",
              "timedOut": false,
              "duration": 119,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cursor = await fabric.query(c8qlQuery);",
              "err": {},
              "uuid": "9c2724ad-7534-48f6-8bb7-7441afcb3090",
              "parentUUID": "54373e4e-65c2-45ff-bfe8-20b25a838ca0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Cursor API \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "7cd7a002-4c38-4075-9a0f-7172471f9acc",
              "parentUUID": "54373e4e-65c2-45ff-bfe8-20b25a838ca0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6ac63b8e-49b7-49fc-a8ba-f86b7bb8ab26",
              "title": "cursor.all",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an Array of all results",
                  "fullTitle": "Cursor API cursor.all returns an Array of all results",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(vals => {\n    chai_1.expect(vals).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "0b6ef393-c9e1-457b-9d8a-c109b19b0889",
                  "parentUUID": "6ac63b8e-49b7-49fc-a8ba-f86b7bb8ab26",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b6ef393-c9e1-457b-9d8a-c109b19b0889"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "eb7de5da-b27b-4430-add2-e8c5f578d34c",
              "title": "cursor.next",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the next result of the Cursor",
                  "fullTitle": "Cursor API cursor.next returns the next result of the Cursor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.equal(0);\n    return cursor.next();\n})\n    .then(val => {\n    chai_1.expect(val).to.equal(1);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "aec0060d-51fd-4b70-aaba-fcc24cb9a0f2",
                  "parentUUID": "eb7de5da-b27b-4430-add2-e8c5f578d34c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aec0060d-51fd-4b70-aaba-fcc24cb9a0f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
              "title": "cursor.hasNext",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the Cursor has more results",
                  "fullTitle": "Cursor API cursor.hasNext returns true if the Cursor has more results",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(cursor.hasNext()).to.equal(true);\ncursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.be.a(\"number\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "642dcd3f-468a-4f0a-986b-cdec5bd62694",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the Cursor is empty",
                  "fullTitle": "Cursor API cursor.hasNext returns false if the Cursor is empty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(() => {\n    chai_1.expect(cursor.hasNext()).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "556af155-2386-4b27-ae6e-880895163780",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true after first batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns true after first batch is consumed",
                  "timedOut": false,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(c8qlQuery, {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor.next();\n    chai_1.expect(cursor._result.length).to.equal(0);\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "eb9fa94e-5027-4f7a-8dfd-051fbf5e03a6",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last batch is consumed",
                  "timedOut": false,
                  "duration": 687,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(\"FOR i In 0..1 RETURN i\", {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "fbadac22-b906-43c5-bfa4-7345317cb0db",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(\"FOR i In 0..1 RETURN i\")\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(2);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(1);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6ba9f5b2-f507-4d28-9e63-c587b4ec819c",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 404 after timeout",
                  "fullTitle": "Cursor API cursor.hasNext returns 404 after timeout",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "69de53c4-760a-4979-ba66-c4235d72ce88",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed (with large amount of results)",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed (with large amount of results)",
                  "timedOut": true,
                  "duration": 20002,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const EXPECTED_LENGTH = 100000;\nconst loadMore = function (cursor, totalLength) {\n    cursor\n        .next()\n        .then(() => {\n        totalLength++;\n        chai_1.expect(cursor.hasNext()).to.equal(totalLength !== EXPECTED_LENGTH);\n        if (cursor.hasNext()) {\n            loadMore(cursor, totalLength);\n        }\n        else {\n            done();\n        }\n    })\n        .catch(done);\n};\nfabric.query(`FOR i In 1..${EXPECTED_LENGTH} RETURN i`)\n    .then(cursor => loadMore(cursor, 0))\n    .catch(done);",
                  "err": {
                    "message": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js)",
                    "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js)",
                    "diff": null
                  },
                  "uuid": "8bb0a8ad-3150-4ffa-8c95-173e172b29c2",
                  "parentUUID": "8863748b-d1ee-4636-8c45-d5f0e0ce51b6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "642dcd3f-468a-4f0a-986b-cdec5bd62694",
                "556af155-2386-4b27-ae6e-880895163780",
                "eb9fa94e-5027-4f7a-8dfd-051fbf5e03a6",
                "fbadac22-b906-43c5-bfa4-7345317cb0db",
                "6ba9f5b2-f507-4d28-9e63-c587b4ec819c"
              ],
              "failures": [
                "8bb0a8ad-3150-4ffa-8c95-173e172b29c2"
              ],
              "pending": [
                "69de53c4-760a-4979-ba66-c4235d72ce88"
              ],
              "skipped": [],
              "duration": 20939,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "ff8db0dd-d77d-4acb-b380-7cc888ebce0c",
              "title": "cursor.each",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes the callback for each value",
                  "fullTitle": "Cursor API cursor.each invokes the callback for each value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each(value => {\n    results.push(value);\n})\n    .then(() => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3518ac98-c0f6-4ce3-9cf2-da96d04be10c",
                  "parentUUID": "ff8db0dd-d77d-4acb-b380-7cc888ebce0c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "aborts if the callback returns false",
                  "fullTitle": "Cursor API cursor.each aborts if the callback returns false",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each((value) => {\n    results.push(value);\n    if (value === 5)\n        return false;\n    return;\n})\n    .then(() => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "d89a97ca-ca27-45d9-8a21-439924396b52",
                  "parentUUID": "ff8db0dd-d77d-4acb-b380-7cc888ebce0c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3518ac98-c0f6-4ce3-9cf2-da96d04be10c",
                "d89a97ca-ca27-45d9-8a21-439924396b52"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8f0b1ba8-3f51-49f4-b8b4-2a448ed44810",
              "title": "cursor.every",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the callback returns a truthy value for every item",
                  "fullTitle": "Cursor API cursor.every returns true if the callback returns a truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    if (results.indexOf(value) !== -1)\n        return false;\n    results.push(value);\n    return true;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f967b24f-abd6-4841-819d-df7a053ebe5f",
                  "parentUUID": "8f0b1ba8-3f51-49f4-b8b4-2a448ed44810",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the callback returns a non-truthy value for any item",
                  "fullTitle": "Cursor API cursor.every returns false if the callback returns a non-truthy value for any item",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    results.push(value);\n    return value < 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c81df4f0-2b63-4de9-97cd-7669745d465d",
                  "parentUUID": "8f0b1ba8-3f51-49f4-b8b4-2a448ed44810",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f967b24f-abd6-4841-819d-df7a053ebe5f",
                "c81df4f0-2b63-4de9-97cd-7669745d465d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "9adca659-9115-4501-8670-0939bfaca698",
              "title": "cursor.some",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns false if the callback returns a non-truthy value for every item",
                  "fullTitle": "Cursor API cursor.some returns false if the callback returns a non-truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    if (results.indexOf(value) !== -1)\n        return true;\n    results.push(value);\n    return false;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "550a773a-2c8d-4765-a810-35e39aee65cd",
                  "parentUUID": "9adca659-9115-4501-8670-0939bfaca698",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if the callback returns a truthy value for any item",
                  "fullTitle": "Cursor API cursor.some returns true if the callback returns a truthy value for any item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    results.push(value);\n    return value >= 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "d2319026-c5d5-446f-9695-8e27eaed1c4a",
                  "parentUUID": "9adca659-9115-4501-8670-0939bfaca698",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "550a773a-2c8d-4765-a810-35e39aee65cd",
                "d2319026-c5d5-446f-9695-8e27eaed1c4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "039a1dbe-5ac5-4796-8c1d-501525e54682",
              "title": "cursor.map",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "maps all result values over the callback",
                  "fullTitle": "Cursor API cursor.map maps all result values over the callback",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .map(value => value * 2)\n    .then(results => {\n    chai_1.expect(results).to.eql(c8qlResult.map(value => value * 2));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "134c768e-d0a4-41e3-a46d-c8ba6e0a29b2",
                  "parentUUID": "039a1dbe-5ac5-4796-8c1d-501525e54682",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "134c768e-d0a4-41e3-a46d-c8ba6e0a29b2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "0c8066b3-e209-434d-a46f-8f48101f0620",
              "title": "cursor.reduce",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "reduces the result values with the callback",
                  "fullTitle": "Cursor API cursor.reduce reduces the result values with the callback",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .reduce((a, b) => a + b)\n    .then(result => {\n    chai_1.expect(result).to.eql(c8qlResult.reduce((a, b) => a + b));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "4920776f-3a01-4f2b-8cd7-ad2d9cf64f43",
                  "parentUUID": "0c8066b3-e209-434d-a46f-8f48101f0620",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4920776f-3a01-4f2b-8cd7-ad2d9cf64f43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "351c0c97-cdec-43fb-8da0-56caf0697768",
              "title": "cursor.delete",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the cursor",
                  "fullTitle": "Cursor API cursor.delete should delete the cursor",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "34723423-c066-494f-8043-7c0cf156641e",
                  "parentUUID": "351c0c97-cdec-43fb-8da0-56caf0697768",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "34723423-c066-494f-8043-7c0cf156641e"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "02561d9e-e279-43a0-8d87-556ed3b8349d",
          "title": "Collection metadata",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
          "file": "/lib/async/test/09-collection-metadata.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Collection metadata \"before all\" hook",
              "timedOut": false,
              "duration": 920,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "664a2cdb-1da1-4371-89c3-233cdc040751",
              "parentUUID": "02561d9e-e279-43a0-8d87-556ed3b8349d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Collection metadata \"after all\" hook",
              "timedOut": false,
              "duration": 156,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(dbName);",
              "err": {},
              "uuid": "1bff9373-4525-49af-a3ea-a265262e4bf8",
              "parentUUID": "02561d9e-e279-43a0-8d87-556ed3b8349d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f7eacc24-140c-42d2-a3fd-b43e628c61f6",
              "title": "collection.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.get should return information about a collection",
                  "timedOut": false,
                  "duration": 114,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await collection.get();\nchai_1.expect(info).to.have.property(\"name\", collectionName);\nchai_1.expect(info).to.have.property(\"isSystem\", false);\nchai_1.expect(info).to.have.property(\"status\", 3); // loaded\nchai_1.expect(info).to.have.property(\"type\", 2); // document collection",
                  "err": {},
                  "uuid": "7eafd4b8-60b8-48fc-8cac-81e73a441cee",
                  "parentUUID": "f7eacc24-140c-42d2-a3fd-b43e628c61f6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw if collection does not exist",
                  "fullTitle": "Collection metadata collection.get should throw if collection does not exist",
                  "timedOut": false,
                  "duration": 166,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.collection(\"no\").get();\n}\ncatch (e) {\n    chai_1.expect(e).to.have.property(\"errorNum\", collection_1.COLLECTION_NOT_FOUND);\n    return;\n}\nchai_1.expect.fail(\"should throw\");",
                  "err": {},
                  "uuid": "21401921-0287-45c6-baa2-d8f13b053bc1",
                  "parentUUID": "f7eacc24-140c-42d2-a3fd-b43e628c61f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7eafd4b8-60b8-48fc-8cac-81e73a441cee",
                "21401921-0287-45c6-baa2-d8f13b053bc1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 280,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "00ef1e1a-3b36-4720-85fe-e4bfbc4990a5",
              "title": "collection.exists",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if collection exists",
                  "fullTitle": "Collection metadata collection.exists should return true if collection exists",
                  "timedOut": false,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.exists();\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "0abefd35-9fbf-48ad-b990-df06ace8a18d",
                  "parentUUID": "00ef1e1a-3b36-4720-85fe-e4bfbc4990a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if collection does not exist",
                  "fullTitle": "Collection metadata collection.exists should return false if collection does not exist",
                  "timedOut": false,
                  "duration": 116,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric.collection(\"no\").exists();\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "76d35951-bcfb-4963-8961-228f2999153f",
                  "parentUUID": "00ef1e1a-3b36-4720-85fe-e4bfbc4990a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0abefd35-9fbf-48ad-b990-df06ace8a18d",
                "76d35951-bcfb-4963-8961-228f2999153f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 229,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "16115b96-5785-454a-a9cf-6173be7300e1",
              "title": "collection.properties",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return properties of a collection",
                  "fullTitle": "Collection metadata collection.properties should return properties of a collection",
                  "timedOut": false,
                  "duration": 194,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .properties()\n    .then(properties => {\n    chai_1.expect(properties).to.have.property(\"name\", collectionName);\n    chai_1.expect(properties).to.have.property(\"waitForSync\", false);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d0ff418a-cc2a-4bf0-89d5-7edc1d165cfd",
                  "parentUUID": "16115b96-5785-454a-a9cf-6173be7300e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d0ff418a-cc2a-4bf0-89d5-7edc1d165cfd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 194,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "93803ed2-16e2-4b8a-aa54-9236478d1961",
              "title": "collection.count",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.count should return information about a collection",
                  "timedOut": false,
                  "duration": 116,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .count()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", collectionName);\n    chai_1.expect(info).to.have.property(\"count\", 0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "53fbec91-a725-4a59-8b3e-217394c0ef95",
                  "parentUUID": "93803ed2-16e2-4b8a-aa54-9236478d1961",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "53fbec91-a725-4a59-8b3e-217394c0ef95"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 116,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "495df1bd-d015-4e84-95f6-9685447591f2",
          "title": "Manipulating collections",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
          "file": "/lib/async/test/10-manipulating-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating collections \"before all\" hook",
              "timedOut": false,
              "duration": 1609,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "9219c58f-d074-45cd-99b2-e1acdf84e531",
              "parentUUID": "495df1bd-d015-4e84-95f6-9685447591f2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating collections \"before each\" hook",
              "timedOut": false,
              "duration": 219,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`collection${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "8f15fbf9-9371-4b62-a34d-0d6d286ccbe2",
              "parentUUID": "495df1bd-d015-4e84-95f6-9685447591f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating collections \"after all\" hook",
              "timedOut": false,
              "duration": 155,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "33b57c97-abb5-4579-998c-0b0d5ee0807c",
              "parentUUID": "495df1bd-d015-4e84-95f6-9685447591f2",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating collections \"after each\" hook",
              "timedOut": false,
              "duration": 262,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .get()\n    .then(() => {\n    collection\n        .drop()\n        .then(() => void done())\n        .catch(done);\n})\n    .catch(() => void done());",
              "err": {},
              "uuid": "6e32cc8c-76dc-4618-aa38-97d520ab7a95",
              "parentUUID": "495df1bd-d015-4e84-95f6-9685447591f2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9fa475f0-0b79-494b-bb63-a92943c903b7",
              "title": "collection.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new document collection",
                  "timedOut": false,
                  "duration": 313,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f0b49465-a104-4c56-bdbc-a151731c8694",
                  "parentUUID": "9fa475f0-0b79-494b-bb63-a92943c903b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local document collection",
                  "timedOut": false,
                  "duration": 276,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "388bc96b-505a-4069-9132-aa2aac209ced",
                  "parentUUID": "9fa475f0-0b79-494b-bb63-a92943c903b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new edge collection",
                  "timedOut": false,
                  "duration": 633,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "54ca2c5d-c3cb-43f4-8880-6a31cf06cb0d",
                  "parentUUID": "9fa475f0-0b79-494b-bb63-a92943c903b7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local edge collection",
                  "timedOut": false,
                  "duration": 279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "6b906872-1f9f-494a-90e2-bc3bf881c389",
                  "parentUUID": "9fa475f0-0b79-494b-bb63-a92943c903b7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0b49465-a104-4c56-bdbc-a151731c8694",
                "388bc96b-505a-4069-9132-aa2aac209ced",
                "54ca2c5d-c3cb-43f4-8880-6a31cf06cb0d",
                "6b906872-1f9f-494a-90e2-bc3bf881c389"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1501,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4c86d103-a25d-43b9-8e26-8f0f80cca8d3",
              "title": "collection.rename",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should rename a collection",
                  "fullTitle": "Manipulating collections collection.rename should rename a collection",
                  "timedOut": false,
                  "duration": 670,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(\"/_admin/server/role\")\n    .get()\n    .then(res => {\n    if (res.body.role !== \"SINGLE\")\n        return;\n    const name = `renamecollection${Date.now()}`;\n    return collection.rename(name).then(info => {\n        chai_1.expect(info).to.have.property(\"name\", name);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "954120c5-63cd-4f23-a609-0a32be9f20af",
                  "parentUUID": "4c86d103-a25d-43b9-8e26-8f0f80cca8d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "954120c5-63cd-4f23-a609-0a32be9f20af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 670,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "fa532543-9e7a-40c9-89c3-f9f8753fbb6d",
              "title": "collection.truncate",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should truncate a non-empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should truncate a non-empty collection",
                  "timedOut": false,
                  "duration": 821,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.save({}).then(() => {\n    return collection\n        .truncate()\n        .then(() => {\n        collection.count().then(info => {\n            chai_1.expect(info).to.have.property(\"name\", collection.name);\n            chai_1.expect(info).to.have.property(\"count\", 0);\n        });\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "99864e0b-26ed-4a9f-a6e2-a1b085f3c873",
                  "parentUUID": "fa532543-9e7a-40c9-89c3-f9f8753fbb6d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow truncating a empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should allow truncating a empty collection",
                  "timedOut": false,
                  "duration": 906,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.truncate().then(() => {\n    return collection\n        .count()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"count\", 0);\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "c8547860-ed1d-4a8f-8023-a56fe0999142",
                  "parentUUID": "fa532543-9e7a-40c9-89c3-f9f8753fbb6d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99864e0b-26ed-4a9f-a6e2-a1b085f3c873",
                "c8547860-ed1d-4a8f-8023-a56fe0999142"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1727,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "9da003f4-5784-4b97-94fc-405ae53ddc85",
              "title": "collection.drop",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop a collection",
                  "fullTitle": "Manipulating collections collection.drop should drop a collection",
                  "timedOut": false,
                  "duration": 264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.drop().then(() => {\n    return collection\n        .get()\n        .then(done)\n        .catch(err => {\n        chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n        void done();\n    });\n});",
                  "err": {},
                  "uuid": "79c0d957-6414-491e-a729-7dd020f7aeda",
                  "parentUUID": "9da003f4-5784-4b97-94fc-405ae53ddc85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79c0d957-6414-491e-a729-7dd020f7aeda"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 264,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a9f6f93a-84ec-4798-974d-1428771bd151",
              "title": "collection.onChange",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the message on collection change",
                  "fullTitle": "Manipulating collections collection.onChange should get the message on collection change",
                  "timedOut": false,
                  "duration": 1000,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const callbackObj = {\n    onopen: () => {\n        collection.save({ name: \"Anthony\", lastname: \"Gonsalvis\" });\n    },\n    onmessage: (msg) => {\n        console.log(\"msg=>\", msg);\n        done();\n    },\n    onerror: (err) => {\n        console.log(\"Connection Error->\", err);\n        chai_1.expect.fail(\"Websocket connection error\");\n    },\n    onclose: () => console.log(\"Websoket connection closed\")\n};\ncollection.onChange(callbackObj, testUrl.substring(8));",
                  "err": {},
                  "uuid": "5ae6bfcb-1d34-4349-afe6-abb4c8c57fd0",
                  "parentUUID": "a9f6f93a-84ec-4798-974d-1428771bd151",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ae6bfcb-1d34-4349-afe6-abb4c8c57fd0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1000,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "b7706c9e-40af-4d0d-8289-fa15965dfbe8",
          "title": "Managing indexes",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
          "file": "/lib/async/test/11-managing-indexes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Managing indexes \"before all\" hook",
              "timedOut": false,
              "duration": 952,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "41d89b46-86c8-4764-b570-d31e40627d07",
              "parentUUID": "b7706c9e-40af-4d0d-8289-fa15965dfbe8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Managing indexes \"after all\" hook",
              "timedOut": false,
              "duration": 175,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "ea295ea2-0bc2-47f9-a253-7cb27ba60494",
              "parentUUID": "b7706c9e-40af-4d0d-8289-fa15965dfbe8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d20244e9-b595-4c14-9d30-e6ad8445691a",
              "title": "collection.createIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a index of given type",
                  "fullTitle": "Managing indexes collection.createIndex should create a index of given type",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createIndex({\n    type: \"hash\",\n    fields: [\"value0\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value0\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "01f8cd4e-8c01-40df-976b-557502cc61c4",
                  "parentUUID": "d20244e9-b595-4c14-9d30-e6ad8445691a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "01f8cd4e-8c01-40df-976b-557502cc61c4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 118,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f1070c15-37c9-45e2-877e-e0ce838514e8",
              "title": "collection.createHashIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a hash index",
                  "fullTitle": "Managing indexes collection.createHashIndex should create a hash index",
                  "timedOut": false,
                  "duration": 116,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2428db2f-199b-47b3-86d8-8afcb17f1d0e",
                  "parentUUID": "f1070c15-37c9-45e2-877e-e0ce838514e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2428db2f-199b-47b3-86d8-8afcb17f1d0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 116,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "1225b7b7-d188-4e32-9bdb-4e2500c5807b",
              "title": "collection.createSkipList",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a skiplist index",
                  "fullTitle": "Managing indexes collection.createSkipList should create a skiplist index",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createSkipList([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"skiplist\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f0720b2b-32fe-4639-b545-5c5b1474bb00",
                  "parentUUID": "1225b7b7-d188-4e32-9bdb-4e2500c5807b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f0720b2b-32fe-4639-b545-5c5b1474bb00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 118,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "37f93010-02e4-4e12-8f7b-e625f8b58011",
              "title": "collection.createPersistentIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a persistent index",
                  "fullTitle": "Managing indexes collection.createPersistentIndex should create a persistent index",
                  "timedOut": false,
                  "duration": 121,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createPersistentIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"persistent\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a1bef9d0-89cc-4ba9-92cc-fe9e27a2cfe7",
                  "parentUUID": "37f93010-02e4-4e12-8f7b-e625f8b58011",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a1bef9d0-89cc-4ba9-92cc-fe9e27a2cfe7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 121,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d64e5dc2-3cac-45e4-9f9a-622080c31980",
              "title": "collection.createGeoIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a geo1 index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo1 index for one field",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "d3891c4b-b4fa-43ce-af5d-c6c8315aeb9b",
                  "parentUUID": "d64e5dc2-3cac-45e4-9f9a-622080c31980",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo2 index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo2 index for two fields",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "2a4ad838-e587-41d8-9cda-10d9392cfa46",
                  "parentUUID": "d64e5dc2-3cac-45e4-9f9a-622080c31980",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for one field",
                  "timedOut": false,
                  "duration": 123,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo1\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo1', but got 'geo'",
                    "estack": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo1', but got 'geo'\n    at collection.createGeoIndex.then.info (src/test/11-managing-indexes.ts:143:32)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- geo\n+ geo1\n"
                  },
                  "uuid": "280daa6e-4fed-4747-b9f7-05306ad56a86",
                  "parentUUID": "d64e5dc2-3cac-45e4-9f9a-622080c31980",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for two fields",
                  "timedOut": false,
                  "duration": 170,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value1\", \"value2\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo2\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value1\", \"value2\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo2', but got 'geo'",
                    "estack": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo2', but got 'geo'\n    at collection.createGeoIndex.then.info (src/test/11-managing-indexes.ts:156:32)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- geo\n+ geo2\n"
                  },
                  "uuid": "dfefc380-5533-473e-96ef-bd5a469c728c",
                  "parentUUID": "d64e5dc2-3cac-45e4-9f9a-622080c31980",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "280daa6e-4fed-4747-b9f7-05306ad56a86",
                "dfefc380-5533-473e-96ef-bd5a469c728c"
              ],
              "pending": [
                "d3891c4b-b4fa-43ce-af5d-c6c8315aeb9b",
                "2a4ad838-e587-41d8-9cda-10d9392cfa46"
              ],
              "skipped": [],
              "duration": 293,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "94308617-684c-4b41-a993-74e7fdaf8cf6",
              "title": "collection.createFulltextIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a fulltext index",
                  "fullTitle": "Managing indexes collection.createFulltextIndex should create a fulltext index",
                  "timedOut": false,
                  "duration": 179,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createFulltextIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"fulltext\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4574fef9-e7c8-4964-bb0c-6baed7e25402",
                  "parentUUID": "94308617-684c-4b41-a993-74e7fdaf8cf6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4574fef9-e7c8-4964-bb0c-6baed7e25402"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 179,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c5076144-ca5b-4a83-8d4c-8ba8d55caf13",
              "title": "collection.index",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a index",
                  "fullTitle": "Managing indexes collection.index should return information about a index",
                  "timedOut": false,
                  "duration": 234,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.index(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        chai_1.expect(index).to.have.property(\"type\", info.type);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "67c7cbbe-ca06-4e10-ba1a-1869bb680827",
                  "parentUUID": "c5076144-ca5b-4a83-8d4c-8ba8d55caf13",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "67c7cbbe-ca06-4e10-ba1a-1869bb680827"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 234,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "25bd5f16-abe0-4632-97ec-a0bfc9f7b152",
              "title": "collection.indexes",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a list of indexes",
                  "fullTitle": "Managing indexes collection.indexes should return a list of indexes",
                  "timedOut": false,
                  "duration": 233,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(index => {\n    return collection.indexes().then(indexes => {\n        chai_1.expect(indexes).to.be.instanceof(Array);\n        chai_1.expect(indexes).to.not.be.empty;\n        chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(1);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2a9e1c35-924a-466d-b40b-7e810cca721b",
                  "parentUUID": "25bd5f16-abe0-4632-97ec-a0bfc9f7b152",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2a9e1c35-924a-466d-b40b-7e810cca721b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 233,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3995d383-a1a0-4267-9587-2a8c7289c54a",
              "title": "collection.dropIndex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop existing index",
                  "fullTitle": "Managing indexes collection.dropIndex should drop existing index",
                  "timedOut": false,
                  "duration": 403,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.dropIndex(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        return collection.indexes().then(indexes => {\n            chai_1.expect(indexes).to.be.instanceof(Array);\n            chai_1.expect(indexes).to.not.be.empty;\n            chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(1);\n        });\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected 0 to equal 1",
                    "estack": "AssertionError: expected 0 to equal 1\n    at collection.indexes.then.indexes (src/test/11-managing-indexes.ts:223:20)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- 0\n+ 1\n"
                  },
                  "uuid": "9a83c5da-a7e6-4056-91eb-6db22b4637b2",
                  "parentUUID": "3995d383-a1a0-4267-9587-2a8c7289c54a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "9a83c5da-a7e6-4056-91eb-6db22b4637b2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 403,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "d81a40bb-2fae-41b0-8ae5-240af236f19c",
          "title": "DocumentCollection API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
          "file": "/lib/async/test/14-document-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "DocumentCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 937,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "1355acf6-e8cf-4470-af29-9f029ce6fdef",
              "parentUUID": "d81a40bb-2fae-41b0-8ae5-240af236f19c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "DocumentCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 150,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "deaa80d9-e11f-42e0-bae5-b245d60d3190",
              "parentUUID": "d81a40bb-2fae-41b0-8ae5-240af236f19c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "DocumentCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 157,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "83759bc6-6d11-4c8c-9fb0-3fe232c0b51c",
              "parentUUID": "d81a40bb-2fae-41b0-8ae5-240af236f19c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "DocumentCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 153,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "cfc99bde-dcd7-461e-9775-989a8869ab51",
              "parentUUID": "d81a40bb-2fae-41b0-8ae5-240af236f19c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3a9cb764-6bd9-49de-8bfc-e89b54643f3e",
              "title": "documentCollection.document",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 328,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "b9582e0a-7696-4fe7-85b9-cb5512eeadcb",
                  "parentUUID": "3a9cb764-6bd9-49de-8bfc-e89b54643f3e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.document returns a document in the collection",
                  "timedOut": false,
                  "duration": 478,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "712e10b3-e65b-4f66-8756-c61f8574856b",
                  "parentUUID": "3a9cb764-6bd9-49de-8bfc-e89b54643f3e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "DocumentCollection API documentCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 123,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "4de93d91-57eb-4739-9d74-ec803bd0731b",
                  "parentUUID": "3a9cb764-6bd9-49de-8bfc-e89b54643f3e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "712e10b3-e65b-4f66-8756-c61f8574856b",
                "4de93d91-57eb-4739-9d74-ec803bd0731b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 601,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a5b9d90b-0794-4b6e-a033-26234feb0dac",
              "title": "documentCollection.documentExists",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 127,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "133531bc-ade9-4689-9f96-7d75a13173b7",
                  "parentUUID": "a5b9d90b-0794-4b6e-a033-26234feb0dac",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the document exists",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns true if the document exists",
                  "timedOut": false,
                  "duration": 121,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "5c497a26-6f3d-44e6-84f2-75cfcb87d7a6",
                  "parentUUID": "a5b9d90b-0794-4b6e-a033-26234feb0dac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the document does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the document does not exist",
                  "timedOut": false,
                  "duration": 208,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"does-not-exist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "3cef9ca0-8a1e-4478-9526-4b4a306bdabb",
                  "parentUUID": "a5b9d90b-0794-4b6e-a033-26234feb0dac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the collection does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the collection does not exist",
                  "timedOut": false,
                  "duration": 121,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric\n    .collection(\"doesnotexist\")\n    .documentExists(\"lol\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "2c607799-70ce-4f29-8e6b-fcfb90de9537",
                  "parentUUID": "a5b9d90b-0794-4b6e-a033-26234feb0dac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c497a26-6f3d-44e6-84f2-75cfcb87d7a6",
                "3cef9ca0-8a1e-4478-9526-4b4a306bdabb",
                "2c607799-70ce-4f29-8e6b-fcfb90de9537"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 450,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "312d7a02-5fb4-495e-8b6a-02bfa9e15422",
              "title": "documentCollection.save",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.save creates a document in the collection",
                  "timedOut": false,
                  "duration": 253,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "3a17e21d-2ec7-43b8-b1db-aae65bd91025",
                  "parentUUID": "312d7a02-5fb4-495e-8b6a-02bfa9e15422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "DocumentCollection API documentCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 270,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "eea5f74f-e213-471a-944e-6c4558a1fdc9",
                  "parentUUID": "312d7a02-5fb4-495e-8b6a-02bfa9e15422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the document if opts.returnNew is set",
                  "fullTitle": "DocumentCollection API documentCollection.save returns the document if opts.returnNew is set",
                  "timedOut": false,
                  "duration": 152,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = { returnNew: true };\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "184edd1d-16db-4780-86a9-e28a14010629",
                  "parentUUID": "312d7a02-5fb4-495e-8b6a-02bfa9e15422",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "interprets opts as returnNew if it is a boolean",
                  "fullTitle": "DocumentCollection API documentCollection.save interprets opts as returnNew if it is a boolean",
                  "timedOut": false,
                  "duration": 129,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = true;\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f2fcfea3-2e62-44dc-8ac4-ed05a9544fed",
                  "parentUUID": "312d7a02-5fb4-495e-8b6a-02bfa9e15422",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3a17e21d-2ec7-43b8-b1db-aae65bd91025",
                "eea5f74f-e213-471a-944e-6c4558a1fdc9",
                "184edd1d-16db-4780-86a9-e28a14010629",
                "f2fcfea3-2e62-44dc-8ac4-ed05a9544fed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 804,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f7087561-cd41-44ea-bfa7-cedc75720484",
              "title": "documentCollection.replace",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given document",
                  "fullTitle": "DocumentCollection API documentCollection.replace replaces the given document",
                  "timedOut": false,
                  "duration": 378,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f7b216d1-aed9-47d1-8f4f-19709ca6d5f5",
                  "parentUUID": "f7087561-cd41-44ea-bfa7-cedc75720484",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f7b216d1-aed9-47d1-8f4f-19709ca6d5f5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 378,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e8305907-a608-4e38-a856-f0cfca6fead8",
              "title": "documentCollection.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "DocumentCollection API documentCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 648,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ad96b7c0-ac7f-4fd4-a1e7-8686c7913c11",
                  "parentUUID": "e8305907-a608-4e38-a856-f0cfca6fead8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "DocumentCollection API documentCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 456,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b51bc51f-3d91-40ef-94cb-50218588eb45",
                  "parentUUID": "e8305907-a608-4e38-a856-f0cfca6fead8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ad96b7c0-ac7f-4fd4-a1e7-8686c7913c11",
                "b51bc51f-3d91-40ef-94cb-50218588eb45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1104,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ea26e9e1-e317-4494-b43b-0e8e53178b03",
              "title": "documentCollection.remove",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 205,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a2ddf338-9174-4286-a32c-63e9bd7122e7",
                  "parentUUID": "ea26e9e1-e317-4494-b43b-0e8e53178b03",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given document",
                  "fullTitle": "DocumentCollection API documentCollection.remove deletes the given document",
                  "timedOut": false,
                  "duration": 323,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.document(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a4451380-274a-4d04-9366-8a2c10918f1b",
                  "parentUUID": "ea26e9e1-e317-4494-b43b-0e8e53178b03",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4451380-274a-4d04-9366-8a2c10918f1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 323,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "45b6b39e-2cb8-4f0f-bc0c-d12134ab9cb3",
          "title": "EdgeCollection API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
          "file": "/lib/async/test/15-edge-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "EdgeCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 843,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "58314fb5-9cca-4f44-8522-ecb935d76f7e",
              "parentUUID": "45b6b39e-2cb8-4f0f-bc0c-d12134ab9cb3",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "EdgeCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 151,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.edgeCollection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "e9ff303f-bd1a-43a4-9ef9-fa3e5c7b4a06",
              "parentUUID": "45b6b39e-2cb8-4f0f-bc0c-d12134ab9cb3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "EdgeCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 156,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "62939efe-4f91-406e-a59d-ee7ff265e251",
              "parentUUID": "45b6b39e-2cb8-4f0f-bc0c-d12134ab9cb3",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "EdgeCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 156,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "9be3e402-bb0b-4dc9-b6c1-3d31b3c6d074",
              "parentUUID": "45b6b39e-2cb8-4f0f-bc0c-d12134ab9cb3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "312b71a7-bb16-4a2e-a0d8-71040adb7ae8",
              "title": "edgeCollection.edge",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.edge \"before each\" hook",
                  "timedOut": false,
                  "duration": 123,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "3e565dd8-d6e3-4f43-a0f9-6e5eaae32d4e",
                  "parentUUID": "312b71a7-bb16-4a2e-a0d8-71040adb7ae8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.edge returns an edge in the collection",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "e5bea9f5-8c19-48c2-97de-a0b373827375",
                  "parentUUID": "312b71a7-bb16-4a2e-a0d8-71040adb7ae8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.edge does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "0d3b5878-735a-4905-b34f-11750e08ef91",
                  "parentUUID": "312b71a7-bb16-4a2e-a0d8-71040adb7ae8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e5bea9f5-8c19-48c2-97de-a0b373827375",
                "0d3b5878-735a-4905-b34f-11750e08ef91"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 237,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "96905b0a-6208-4ae8-a810-a7c90f749d7d",
              "title": "edgeCollection.document",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 122,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "93b8c1d0-43c4-403c-8926-f5223710d32d",
                  "parentUUID": "96905b0a-6208-4ae8-a810-a7c90f749d7d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.document returns an edge in the collection",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "dbf79f82-9877-46b6-9a32-53a5c180862c",
                  "parentUUID": "96905b0a-6208-4ae8-a810-a7c90f749d7d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "39812d38-4f3c-4297-84d0-ca0bb1a0a204",
                  "parentUUID": "96905b0a-6208-4ae8-a810-a7c90f749d7d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbf79f82-9877-46b6-9a32-53a5c180862c",
                "39812d38-4f3c-4297-84d0-ca0bb1a0a204"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 308,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "cef3348b-bf76-417c-aad5-c411f799e9a8",
              "title": "edgeCollection.documentExists",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 125,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "1ac92006-ba07-4ac4-b433-97ab9d49fcf3",
                  "parentUUID": "cef3348b-bf76-417c-aad5-c411f799e9a8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the edge exists",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns true if the edge exists",
                  "timedOut": false,
                  "duration": 201,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "25192a2f-d799-4ab6-86c4-68f3ce319bfe",
                  "parentUUID": "cef3348b-bf76-417c-aad5-c411f799e9a8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the edge does not exist",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns false if the edge does not exist",
                  "timedOut": false,
                  "duration": 179,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"doesnotexist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "0b352e6b-eef9-49ee-bb31-09217374010b",
                  "parentUUID": "cef3348b-bf76-417c-aad5-c411f799e9a8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "25192a2f-d799-4ab6-86c4-68f3ce319bfe",
                "0b352e6b-eef9-49ee-bb31-09217374010b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 380,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "33c0439e-b397-4d83-985b-7fadfee5c42b",
              "title": "edgeCollection.save",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.save creates an edge in the collection",
                  "timedOut": false,
                  "duration": 244,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "925ee605-f244-4dd8-95f0-f58f01ef96d7",
                  "parentUUID": "33c0439e-b397-4d83-985b-7fadfee5c42b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "EdgeCollection API edgeCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 241,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = {\n    chicken: \"chicken\",\n    _key: \"banana\",\n    _from: \"d/1\",\n    _to: \"d/2\"\n};\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.equals(data._key);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._key).to.equal(data._key);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "3413fe85-91a2-4be0-93e7-9b2c26821ef5",
                  "parentUUID": "33c0439e-b397-4d83-985b-7fadfee5c42b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes _from and _to as positional arguments",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes _from and _to as positional arguments",
                  "timedOut": false,
                  "duration": 382,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "c66ad493-021b-4a0b-986b-27beef9637a0",
                  "parentUUID": "33c0439e-b397-4d83-985b-7fadfee5c42b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object",
                  "timedOut": false,
                  "duration": 323,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "a97d303c-42ef-4069-b4b0-84e64ea3ee17",
                  "parentUUID": "33c0439e-b397-4d83-985b-7fadfee5c42b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object with positional _from and _to",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object with positional _from and _to",
                  "timedOut": false,
                  "duration": 405,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "d243ff2a-85af-4f91-b65b-ed2db157d317",
                  "parentUUID": "33c0439e-b397-4d83-985b-7fadfee5c42b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "925ee605-f244-4dd8-95f0-f58f01ef96d7",
                "3413fe85-91a2-4be0-93e7-9b2c26821ef5",
                "c66ad493-021b-4a0b-986b-27beef9637a0",
                "a97d303c-42ef-4069-b4b0-84e64ea3ee17",
                "d243ff2a-85af-4f91-b65b-ed2db157d317"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1595,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "093249c6-7f2b-4d33-a6dd-d7d64e9f0e41",
              "title": "edgeCollection.traversal",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal \"before each\" hook",
                  "timedOut": false,
                  "duration": 531,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows = fabric.edgeCollection(\"knows\");\nconst person = fabric.collection(\"person\");\nPromise.all([person.create(), knows.create()])\n    .then(() => Promise.all([\n    person.import([\n        { _key: \"Alice\" },\n        { _key: \"Bob\" },\n        { _key: \"Charlie\" },\n        { _key: \"Dave\" },\n        { _key: \"Eve\" }\n    ]),\n    knows.import([\n        { _from: \"person/Alice\", _to: \"person/Bob\" },\n        { _from: \"person/Bob\", _to: \"person/Charlie\" },\n        { _from: \"person/Bob\", _to: \"person/Dave\" },\n        { _from: \"person/Eve\", _to: \"person/Alice\" },\n        { _from: \"person/Eve\", _to: \"person/Bob\" }\n    ])\n]))\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d0e8bcd7-5f8a-45a0-9d75-0c01fbcf27d3",
                  "parentUUID": "093249c6-7f2b-4d33-a6dd-d7d64e9f0e41",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "executes traversal",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal executes traversal",
                  "timedOut": false,
                  "duration": 133,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows\n    .traversal(\"person/Alice\", { direction: \"outbound\" })\n    .then((result) => {\n    chai_1.expect(result).to.have.property(\"visited\");\n    const visited = result.visited;\n    chai_1.expect(visited).to.have.property(\"vertices\");\n    const vertices = visited.vertices;\n    chai_1.expect(vertices).to.be.instanceOf(Array);\n    chai_1.expect(vertices.length).to.equal(4);\n    const names = vertices.map((d) => d._key);\n    for (const name of [\"Alice\", \"Bob\", \"Charlie\", \"Dave\"]) {\n        chai_1.expect(names).to.contain(name);\n    }\n    chai_1.expect(visited).to.have.property(\"paths\");\n    const paths = visited.paths;\n    chai_1.expect(paths).to.be.instanceOf(Array);\n    chai_1.expect(paths.length).to.equal(4);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "fbdc5dcc-3827-4976-b3d2-ee64e8b793a7",
                  "parentUUID": "093249c6-7f2b-4d33-a6dd-d7d64e9f0e41",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fbdc5dcc-3827-4976-b3d2-ee64e8b793a7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 133,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3e15444a-46b6-4464-8954-e502123a312e",
              "title": "edgeCollection.replace",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.replace replaces the given edge",
                  "timedOut": false,
                  "duration": 363,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = { potato: \"tomato\", _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, {\n        sup: \"dawg\",\n        _from: \"d/1\",\n        _to: \"d/2\"\n    });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "d70ec54d-d215-4ff1-9ba0-0b79ce4c3f3d",
                  "parentUUID": "3e15444a-46b6-4464-8954-e502123a312e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d70ec54d-d215-4ff1-9ba0-0b79ce4c3f3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 363,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7de44918-9a0e-42bf-96af-b994d27bb86c",
              "title": "edgeCollection.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "EdgeCollection API edgeCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 362,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).to.have.property(\"empty\", null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "085b6e17-ad8b-4cc5-989e-4ed618d99c28",
                  "parentUUID": "7de44918-9a0e-42bf-96af-b994d27bb86c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "EdgeCollection API edgeCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 370,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6e36b8cf-5864-446f-b531-5a8c929a65a5",
                  "parentUUID": "7de44918-9a0e-42bf-96af-b994d27bb86c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "085b6e17-ad8b-4cc5-989e-4ed618d99c28",
                "6e36b8cf-5864-446f-b531-5a8c929a65a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 732,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8686ee5a-23a1-4cd9-b868-bd48d14bd86c",
              "title": "edgeCollection.remove",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 121,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key, _from: \"d/1\", _to: \"d/2\" })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c83bb763-5d04-40dd-8609-055702adc53a",
                  "parentUUID": "8686ee5a-23a1-4cd9-b868-bd48d14bd86c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.remove deletes the given edge",
                  "timedOut": false,
                  "duration": 241,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.edge(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "8eac4d01-5f97-4612-924f-e00fb49fa5f2",
                  "parentUUID": "8686ee5a-23a1-4cd9-b868-bd48d14bd86c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8eac4d01-5f97-4612-924f-e00fb49fa5f2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 241,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "f151e0eb-031c-4417-8d36-a83b5f82999a",
          "title": "Graph API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
          "file": "/lib/async/test/16-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Graph API \"before all\" hook",
              "timedOut": false,
              "duration": 848,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "8dfd278e-8977-4265-b707-cdf4435bc982",
              "parentUUID": "f151e0eb-031c-4417-8d36-a83b5f82999a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Graph API \"after all\" hook",
              "timedOut": false,
              "duration": 188,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "7e3f37f5-22f7-479e-bdee-1de9ab45c43d",
              "parentUUID": "f151e0eb-031c-4417-8d36-a83b5f82999a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "be5d3b9b-1bba-475a-ac95-804955edbf8a",
              "title": "graph.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.get \"before all\" hook",
                  "timedOut": false,
                  "duration": 536,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f6290990-223c-4da1-a853-f81c24a1d3dc",
                  "parentUUID": "be5d3b9b-1bba-475a-ac95-804955edbf8a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.get \"after all\" hook",
                  "timedOut": false,
                  "duration": 680,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2ec3d633-8e05-443e-9069-6fd318788adf",
                  "parentUUID": "be5d3b9b-1bba-475a-ac95-804955edbf8a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about the graph",
                  "fullTitle": "Graph API graph.get fetches information about the graph",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "9afe2d04-5128-47fa-b269-eb8124e0e4ed",
                  "parentUUID": "be5d3b9b-1bba-475a-ac95-804955edbf8a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9afe2d04-5128-47fa-b269-eb8124e0e4ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 118,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "9e661801-a548-4bf5-ab57-09c8f4bb23af",
              "title": "graph.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.create \"before all\" hook",
                  "timedOut": false,
                  "duration": 411,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "869a6503-a07d-42d6-a66f-d7219929067e",
                  "parentUUID": "9e661801-a548-4bf5-ab57-09c8f4bb23af",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 520,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric.collection(name).drop()))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e11d2cfa-a1c1-474e-be96-c8a875178dbb",
                  "parentUUID": "9e661801-a548-4bf5-ab57-09c8f4bb23af",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates the graph",
                  "fullTitle": "Graph API graph.create creates the graph",
                  "timedOut": false,
                  "duration": 246,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let graph = fabric.graph(`g${Date.now()}`);\ngraph\n    .create({\n    edgeDefinitions: edgeCollectionNames.map(name => ({\n        collection: name,\n        from: vertexCollectionNames,\n        to: vertexCollectionNames\n    }))\n})\n    .then(() => graph.get())\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6638831e-f0ce-478a-9eb9-1514086e25a2",
                  "parentUUID": "9e661801-a548-4bf5-ab57-09c8f4bb23af",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6638831e-f0ce-478a-9eb9-1514086e25a2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 246,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "65df4f45-6248-4864-a5b9-847da9de9888",
              "title": "graph.drop",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Graph API graph.drop \"before each\" hook",
                  "timedOut": false,
                  "duration": 436,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "21fba6e2-42db-4a82-976e-ab8c9a3431a4",
                  "parentUUID": "65df4f45-6248-4864-a5b9-847da9de9888",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Graph API graph.drop \"after each\" hook",
                  "timedOut": false,
                  "duration": 235,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric\n    .collection(name)\n    .drop()\n    .catch(() => null)))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "0ca3e512-40da-4362-be99-1accc663dc43",
                  "parentUUID": "65df4f45-6248-4864-a5b9-847da9de9888",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "destroys the graph if not passed true",
                  "fullTitle": "Graph API graph.drop destroys the graph if not passed true",
                  "timedOut": false,
                  "duration": 380,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f8bde656-23ad-4681-b449-acdc71958da9",
                  "parentUUID": "65df4f45-6248-4864-a5b9-847da9de9888",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally drops all of its collections if passed true",
                  "fullTitle": "Graph API graph.drop additionally drops all of its collections if passed true",
                  "timedOut": false,
                  "duration": 485,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop(true)\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).not.to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "cc895b01-9abb-41cd-95b2-18cf4889744e",
                  "parentUUID": "65df4f45-6248-4864-a5b9-847da9de9888",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8bde656-23ad-4681-b449-acdc71958da9",
                "cc895b01-9abb-41cd-95b2-18cf4889744e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 865,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "4d6a9d93-7067-4129-b6d6-10674ef1b4b9",
          "title": "Manipulating graph vertices",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
          "file": "/lib/async/test/17-graph-vertices.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph vertices \"before all\" hook",
              "timedOut": false,
              "duration": 905,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "a9c5d34e-1c12-45ec-90e8-e7612bcfdb86",
              "parentUUID": "4d6a9d93-7067-4129-b6d6-10674ef1b4b9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph vertices \"before each\" hook",
              "timedOut": false,
              "duration": 437,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "1e311bfd-df0c-49b2-9482-7ab5e7b7ded7",
              "parentUUID": "4d6a9d93-7067-4129-b6d6-10674ef1b4b9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph vertices \"after all\" hook",
              "timedOut": false,
              "duration": 158,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "de0d6be8-a94f-4fca-9874-5a9b32e583e2",
              "parentUUID": "4d6a9d93-7067-4129-b6d6-10674ef1b4b9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph vertices \"after each\" hook",
              "timedOut": false,
              "duration": 431,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "acd19b7a-3933-49b6-8526-f544444cd863",
              "parentUUID": "4d6a9d93-7067-4129-b6d6-10674ef1b4b9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9dd7c5dd-1d89-4a30-98e5-8c51bca89c5f",
              "title": "graph.vertexCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a GraphVertexCollection instance for the collection",
                  "fullTitle": "Manipulating graph vertices graph.vertexCollection returns a GraphVertexCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = graph.vertexCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(graph_1.GraphVertexCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "30c0befe-9443-4c8a-8255-c0af47d6f9f6",
                  "parentUUID": "9dd7c5dd-1d89-4a30-98e5-8c51bca89c5f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "30c0befe-9443-4c8a-8255-c0af47d6f9f6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "71b318ef-1db2-4d0a-885c-69e7c60657d0",
              "title": "graph.addVertexCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"before each\" hook",
                  "timedOut": false,
                  "duration": 148,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`xc${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a9b8f532-69a1-4d0a-9bb0-423d5c86c9b7",
                  "parentUUID": "71b318ef-1db2-4d0a-885c-69e7c60657d0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"after each\" hook",
                  "timedOut": false,
                  "duration": 148,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "0312de16-1f88-4f48-9b6b-1a2cf2e86205",
                  "parentUUID": "71b318ef-1db2-4d0a-885c-69e7c60657d0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "adds the given vertex collection to the graph",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection adds the given vertex collection to the graph",
                  "timedOut": false,
                  "duration": 118,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).to.contain(vertexCollection.name);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com",
                    "estack": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "333ba9a1-ee5a-445e-ac21-aeae435ac09f",
                  "parentUUID": "71b318ef-1db2-4d0a-885c-69e7c60657d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "333ba9a1-ee5a-445e-ac21-aeae435ac09f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 118,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8f98004e-e577-4e91-856b-57b4e9af63ee",
              "title": "graph.removeVertexCollection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"removes the given vertex collection from the graph\"",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection \"before each\" hook for \"removes the given vertex collection from the graph\"",
                  "timedOut": false,
                  "duration": 268,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`xc${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => graph.addVertexCollection(vertexCollection.name))\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com",
                    "estack": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "82c2d558-9a16-4541-84e3-3d54e82141d9",
                  "parentUUID": "8f98004e-e577-4e91-856b-57b4e9af63ee",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes the given vertex collection from the graph",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection removes the given vertex collection from the graph",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "261ac41c-e63f-4d1c-8ad9-50f0dd1bdd89",
                  "parentUUID": "8f98004e-e577-4e91-856b-57b4e9af63ee",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "destroys the collection if explicitly passed true",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection destroys the collection if explicitly passed true",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name, true)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), err => {\n    chai_1.expect(err).to.be.an.instanceof(error_1.C8Error);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "0ac4c617-d57e-4e9b-8515-d5235eafb0df",
                  "parentUUID": "8f98004e-e577-4e91-856b-57b4e9af63ee",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "261ac41c-e63f-4d1c-8ad9-50f0dd1bdd89",
                "0ac4c617-d57e-4e9b-8515-d5235eafb0df"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "69836539-5c1b-4642-9905-a332dbba67d9",
          "title": "Manipulating graph edges",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
          "file": "/lib/async/test/18-graph-edges.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph edges \"before all\" hook",
              "timedOut": false,
              "duration": 1141,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);",
              "err": {},
              "uuid": "0b885f06-24d8-4edd-bbbf-bbec016836e2",
              "parentUUID": "69836539-5c1b-4642-9905-a332dbba67d9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph edges \"before each\" hook",
              "timedOut": false,
              "duration": 126,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(graphName);\ngraph\n    .create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "ae590ca6-4f7f-4d55-a5ba-098bfd6daac1",
              "parentUUID": "69836539-5c1b-4642-9905-a332dbba67d9",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph edges \"after all\" hook",
              "timedOut": false,
              "duration": 154,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "ddafcf30-2a85-458c-a5ac-21e97d7da716",
              "parentUUID": "69836539-5c1b-4642-9905-a332dbba67d9",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph edges \"after each\" hook",
              "timedOut": false,
              "duration": 138,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "05236074-39df-461b-adf5-3de6c418c691",
              "parentUUID": "69836539-5c1b-4642-9905-a332dbba67d9",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2b61ce73-e8b5-4c83-a337-7750e03e4551",
              "title": "graph.get",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about the graph",
                  "fullTitle": "Manipulating graph edges graph.get should return information about the graph",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "fa023775-f24a-4735-88a5-8c7ae7db974a",
                  "parentUUID": "2b61ce73-e8b5-4c83-a337-7750e03e4551",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa023775-f24a-4735-88a5-8c7ae7db974a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a04147c3-fc15-4df0-addb-d280633e4e78",
              "title": "graph.edgeCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should contain edge collection",
                  "fullTitle": "Manipulating graph edges graph.edgeCollections should contain edge collection",
                  "timedOut": false,
                  "duration": 124,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .edgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info.map((c) => c.name)).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4ec22960-9df0-4791-aaef-8dd92b7790bd",
                  "parentUUID": "a04147c3-fc15-4df0-addb-d280633e4e78",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ec22960-9df0-4791-aaef-8dd92b7790bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e6d60b22-b3a1-4406-86a1-ad829d026ab7",
              "title": "graph.listEdgeCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all edge collection names",
                  "fullTitle": "Manipulating graph edges graph.listEdgeCollections should return all edge collection names",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listEdgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "1a63879c-5f1b-455d-a3e6-6994e7e5310b",
                  "parentUUID": "e6d60b22-b3a1-4406-86a1-ad829d026ab7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a63879c-5f1b-455d-a3e6-6994e7e5310b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 118,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d387cb6e-7db2-417d-9033-e6fbe5fd79f6",
              "title": "graph.listVertexCollections",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all vertex collection names",
                  "fullTitle": "Manipulating graph edges graph.listVertexCollections should return all vertex collection names",
                  "timedOut": false,
                  "duration": 117,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listVertexCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "656745eb-6cc7-4cad-bd6e-8152a150f49c",
                  "parentUUID": "d387cb6e-7db2-417d-9033-e6fbe5fd79f6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "656745eb-6cc7-4cad-bd6e-8152a150f49c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 117,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a53dad15-bd3d-495e-b1c5-42d6ff474136",
              "title": "graph.addEdgeDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add an edgeDefinition to the graph",
                  "fullTitle": "Manipulating graph edges graph.addEdgeDefinition should add an edgeDefinition to the graph",
                  "timedOut": false,
                  "duration": 185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addEdgeDefinition({\n    collection: \"works_in\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(2);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"works_in\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"works_in\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2dab8258-792c-44b1-9fee-f8f28c55d033",
                  "parentUUID": "a53dad15-bd3d-495e-b1c5-42d6ff474136",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2dab8258-792c-44b1-9fee-f8f28c55d033"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 185,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "660d9099-2058-44ea-8b25-0756f6732e7e",
              "title": "graph.replaceEdgeDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should replace an existing edgeDefinition in the graph",
                  "fullTitle": "Manipulating graph edges graph.replaceEdgeDefinition should replace an existing edgeDefinition in the graph",
                  "timedOut": false,
                  "duration": 130,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .replaceEdgeDefinition(\"knows\", {\n    collection: \"knows\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "91eefa80-3f68-4ee1-b966-c6c2821e15ea",
                  "parentUUID": "660d9099-2058-44ea-8b25-0756f6732e7e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91eefa80-3f68-4ee1-b966-c6c2821e15ea"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ca71f9fb-1349-46cc-a3d4-8cc04fa2fb65",
              "title": "graph.removeEdgeDefinition",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove an edgeDefinition from the graph",
                  "fullTitle": "Manipulating graph edges graph.removeEdgeDefinition should remove an edgeDefinition from the graph",
                  "timedOut": false,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeEdgeDefinition(\"knows\")\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "44a1e1ab-13d4-4f4e-b13a-8b29e3f1ba3b",
                  "parentUUID": "ca71f9fb-1349-46cc-a3d4-8cc04fa2fb65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44a1e1ab-13d4-4f4e-b13a-8b29e3f1ba3b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 125,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "b8c8013c-b2ef-48ed-9984-dd2228e193e0",
          "title": "GraphVertexCollection API",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
          "file": "/lib/async/test/19-graph-vertex-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "GraphVertexCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 1009,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\nconst graph = fabric.graph(`testgraph${Date.now()}`);\nawait graph.create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n});\ncollection = graph.vertexCollection(\"person\");",
              "err": {},
              "uuid": "4ecd0e6f-d7ed-41fb-8823-b8bdcc5ed97e",
              "parentUUID": "b8c8013c-b2ef-48ed-9984-dd2228e193e0",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "GraphVertexCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 117,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .truncate()\n    .then(() => done())\n    .catch(done);",
              "err": {},
              "uuid": "af34b675-1a24-41ce-b9dc-6bdf250bba97",
              "parentUUID": "b8c8013c-b2ef-48ed-9984-dd2228e193e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "GraphVertexCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 160,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "409b907f-a35c-4f39-bb44-00b3011e5de6",
              "parentUUID": "b8c8013c-b2ef-48ed-9984-dd2228e193e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2d144945-9ed5-4caa-9eec-79869b258545",
              "title": "graphVertexCollection.vertex",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"returns a vertex in the collection\"",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex \"before each\" hook for \"returns a vertex in the collection\"",
                  "timedOut": false,
                  "duration": 134,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "20774303-b2a8-4a47-a470-dfa24456a8c4",
                  "parentUUID": "2d144945-9ed5-4caa-9eec-79869b258545",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "6b83e7b5-291a-4c3f-95ec-1edb9c620e32",
                  "parentUUID": "2d144945-9ed5-4caa-9eec-79869b258545",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "b47ff0b1-3bc4-4147-b05e-40419b12cb9a",
                  "parentUUID": "2d144945-9ed5-4caa-9eec-79869b258545",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "6b83e7b5-291a-4c3f-95ec-1edb9c620e32",
                "b47ff0b1-3bc4-4147-b05e-40419b12cb9a"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f23fc72d-2b76-455f-a469-f8a3719e7e66",
              "title": "graphVertexCollection.document",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"returns a vertex in the collection\"",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document \"before each\" hook for \"returns a vertex in the collection\"",
                  "timedOut": false,
                  "duration": 118,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "4ec64fa0-57b3-4386-9a52-45cfd5767030",
                  "parentUUID": "f23fc72d-2b76-455f-a469-f8a3719e7e66",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "1d6146b7-5633-4024-b7e7-fa2bfc627ed1",
                  "parentUUID": "f23fc72d-2b76-455f-a469-f8a3719e7e66",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "5e37d30e-a4f8-4172-aa8b-de2db904a4b8",
                  "parentUUID": "f23fc72d-2b76-455f-a469-f8a3719e7e66",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "1d6146b7-5633-4024-b7e7-fa2bfc627ed1",
                "5e37d30e-a4f8-4172-aa8b-de2db904a4b8"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e79e5b92-649f-493c-bd89-135f231aecdc",
              "title": "graphVertexCollection.save",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save creates a vertex in the collection",
                  "timedOut": false,
                  "duration": 119,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "97b93973-6627-44de-8b58-18c7da1111a4",
                  "parentUUID": "e79e5b92-649f-493c-bd89-135f231aecdc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 206,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "db477f3f-c98a-4cd1-9ddf-20eecfe95e7f",
                  "parentUUID": "e79e5b92-649f-493c-bd89-135f231aecdc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "97b93973-6627-44de-8b58-18c7da1111a4",
                "db477f3f-c98a-4cd1-9ddf-20eecfe95e7f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 325,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d58ea115-0d76-4d4f-910a-82ae31f44fb4",
              "title": "graphVertexCollection.replace",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.replace replaces the given vertex",
                  "timedOut": false,
                  "duration": 121,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "0f934482-fb7f-4452-be51-5c3318e25073",
                  "parentUUID": "d58ea115-0d76-4d4f-910a-82ae31f44fb4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "0f934482-fb7f-4452-be51-5c3318e25073"
              ],
              "pending": [],
              "skipped": [],
              "duration": 121,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "78e5cc75-a71f-4149-9a29-77bee90ee313",
              "title": "graphVertexCollection.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update updates the given vertex",
                  "timedOut": false,
                  "duration": 212,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "0bf7d2f5-f971-4760-a3c6-b7d59be177a8",
                  "parentUUID": "78e5cc75-a71f-4149-9a29-77bee90ee313",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 201,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "211313c9-6077-4186-b264-c888a630a409",
                  "parentUUID": "78e5cc75-a71f-4149-9a29-77bee90ee313",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "0bf7d2f5-f971-4760-a3c6-b7d59be177a8",
                "211313c9-6077-4186-b264-c888a630a409"
              ],
              "pending": [],
              "skipped": [],
              "duration": 413,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0491c99f-83ef-4430-b4d8-cc402fd06b69",
              "title": "graphVertexCollection.remove",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"deletes the given vertex\"",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove \"before each\" hook for \"deletes the given vertex\"",
                  "timedOut": false,
                  "duration": 118,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582183740359/graph/testgraph1582183858027/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "bffbf4f4-d1d0-43a4-a18b-35ba92937e78",
                  "parentUUID": "0491c99f-83ef-4430-b4d8-cc402fd06b69",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove deletes the given vertex",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.vertex(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c3daea9d-5b5b-4be3-8fd5-eb4278823b4d",
                  "parentUUID": "0491c99f-83ef-4430-b4d8-cc402fd06b69",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "c3daea9d-5b5b-4be3-8fd5-eb4278823b4d"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "a7ac32b3-da3c-4311-9f86-d6a3c4755114",
          "title": "Join Path",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/21-util-joinpath.js",
          "file": "/lib/async/test/21-util-joinpath.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "joinPath 1",
              "fullTitle": "Join Path joinPath 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"../../u1/u2\";\nvar path = \"/security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"../../u1/u2/security/authenticate\");",
              "err": {},
              "uuid": "41a6b356-24fa-47b1-9539-a9e7c38c7e03",
              "parentUUID": "a7ac32b3-da3c-4311-9f86-d6a3c4755114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 2",
              "fullTitle": "Join Path joinPath 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/u1/security/authenticate\");",
              "err": {},
              "uuid": "fd92009a-2120-46bd-a026-d722e7f82f29",
              "parentUUID": "a7ac32b3-da3c-4311-9f86-d6a3c4755114",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 3",
              "fullTitle": "Join Path joinPath 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/security/authenticate\");",
              "err": {},
              "uuid": "05e1f106-ee56-4a01-928d-df991fc783ba",
              "parentUUID": "a7ac32b3-da3c-4311-9f86-d6a3c4755114",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "41a6b356-24fa-47b1-9539-a9e7c38c7e03",
            "fd92009a-2120-46bd-a026-d722e7f82f29",
            "05e1f106-ee56-4a01-928d-df991fc783ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "b6bcc4b3-fad6-4977-ad3d-80e34c56416d",
          "title": "Helper.getFullStreamPath",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output when there is no extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is no extra url",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog\");",
              "err": {},
              "uuid": "fd16c68a-74f3-4a9e-b287-c102fb7e97d6",
              "parentUUID": "b6bcc4b3-fad6-4977-ad3d-80e34c56416d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns correct output when there is extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is extra url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\", \"/compaction\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog/compaction\");",
              "err": {},
              "uuid": "86274e4f-7da1-4c19-95a2-c8665bf3fa1e",
              "parentUUID": "b6bcc4b3-fad6-4977-ad3d-80e34c56416d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fd16c68a-74f3-4a9e-b287-c102fb7e97d6",
            "86274e4f-7da1-4c19-95a2-c8665bf3fa1e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "338e8662-6e0e-4431-b51d-831949ad1941",
          "title": "Helper.getDCListString",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output",
              "fullTitle": "Helper.getDCListString returns correct output",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(helper_1.getDCListString(response)).to.equal('dev-ap-southeast-1,dev-ap-southeast-2');",
              "err": {},
              "uuid": "e83654b8-4053-4d70-a09c-a5ecc9856238",
              "parentUUID": "338e8662-6e0e-4431-b51d-831949ad1941",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e83654b8-4053-4d70-a09c-a5ecc9856238"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "bb3adfa9-6034-42f2-84a4-d48ed7dd9e74",
          "title": "C8QL Stream queries",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/23-c8ql-queries-stream.js",
          "file": "/lib/async/test/23-c8ql-queries-stream.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL Stream queries \"before all\" hook",
              "timedOut": false,
              "duration": 872,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "7511c694-d42a-4bb6-9826-eb44958c7bd8",
              "parentUUID": "bb3adfa9-6034-42f2-84a4-d48ed7dd9e74",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL Stream queries \"after all\" hook",
              "timedOut": false,
              "duration": 168,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "04a98c9e-0d5b-49be-b3f9-bc4f140e749c",
              "parentUUID": "bb3adfa9-6034-42f2-84a4-d48ed7dd9e74",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c8de2af8-c451-430a-9b33-5d22fc0c1228",
              "title": "fabric.query",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL Stream queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 121,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\", {}, { options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e299c4ab-42f3-47d2-916a-cb36789d9ee4",
                  "parentUUID": "c8de2af8-c451-430a-9b33-5d22fc0c1228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL Stream queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 }, { options: { stream: true } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "61ec9d0c-5479-486a-81ef-e7ad5c7546dc",
                  "parentUUID": "c8de2af8-c451-430a-9b33-5d22fc0c1228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL Stream queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 119,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", undefined, {\n    batchSize: 2,\n    count: true,\n    options: { stream: true }\n})\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 10",
                    "estack": "AssertionError: expected undefined to equal 10\n    at fabric.query.then.cursor (src/test/23-c8ql-queries-stream.ts:69:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "2f3ddb1c-b74a-4270-80fc-c766f9afe906",
                  "parentUUID": "c8de2af8-c451-430a-9b33-5d22fc0c1228",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL Stream queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 117,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true, options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 10",
                    "estack": "AssertionError: expected undefined to equal 10\n    at fabric.query.then.cursor (src/test/23-c8ql-queries-stream.ts:83:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "7306d6fd-9d5d-469a-85e8-f5a0ce44dc99",
                  "parentUUID": "c8de2af8-c451-430a-9b33-5d22fc0c1228",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e299c4ab-42f3-47d2-916a-cb36789d9ee4",
                "61ec9d0c-5479-486a-81ef-e7ad5c7546dc"
              ],
              "failures": [
                "2f3ddb1c-b74a-4270-80fc-c766f9afe906",
                "7306d6fd-9d5d-469a-85e8-f5a0ce44dc99"
              ],
              "pending": [],
              "skipped": [],
              "duration": 475,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "65cf7578-744c-4699-bed7-a9aea50f72d2",
              "title": "with some data",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can do writes and reads",
                  "fullTitle": "C8QL Stream queries with some data can do writes and reads",
                  "timedOut": false,
                  "duration": 124,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(cname);\nlet readQ = jsC8_1.c8ql `FOR doc in ${collection} RETURN doc`;\nlet writeQ = jsC8_1.c8ql `FOR i in 1..1000 LET y = SLEEP(1) INSERT {forbidden: i} INTO ${collection}`;\nconst opts = { batchSize: 500, ttl: 5, options: { stream: true } };\n// 900s lock timeout + 5s ttl\nlet readCursor = fabric.query(readQ, opts);\nlet writeCursor = fabric.query(writeQ, opts);\n// the read cursor should always win\nPromise.race([readCursor, writeCursor])\n    .then(c => {\n    // therefore no document should have been written here\n    return c.every((d) => !d.hasOwnProperty(\"forbidden\"));\n})\n    .then(isOk => {\n    chai_1.expect(isOk).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: collection or view not found: name: MyTestCollection",
                    "estack": "C8Error: collection or view not found: name: MyTestCollection\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "6509bf38-2a56-425a-a832-eeb73816f694",
                  "parentUUID": "65cf7578-744c-4699-bed7-a9aea50f72d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6509bf38-2a56-425a-a832-eeb73816f694"
              ],
              "pending": [],
              "skipped": [],
              "duration": 124,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "24fa6850-4b60-4348-9585-4a77fd3f2977",
          "title": "Manipulating streams",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
          "file": "/lib/async/test/28-manipulating-streams.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating streams \"before all\" hook",
              "timedOut": false,
              "duration": 454,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "ec7565cd-c753-4e52-b6b3-2b70999515c8",
              "parentUUID": "24fa6850-4b60-4348-9585-4a77fd3f2977",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating streams \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "0fdebb80-0f7b-45dd-b832-d680d819e4f6",
              "parentUUID": "24fa6850-4b60-4348-9585-4a77fd3f2977",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2494c37a-99b6-424a-b6c9-cb95b1dcfc4d",
              "title": "fabric.stream",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a new Stream instance",
                  "fullTitle": "Manipulating streams fabric.stream returns a new Stream instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.stream(\"testStream\", true)).to.be.instanceof(stream_1.Stream);",
                  "err": {},
                  "uuid": "3e2b2220-0070-4ba9-8b61-b31be774ca00",
                  "parentUUID": "2494c37a-99b6-424a-b6c9-cb95b1dcfc4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets all streams",
                  "fullTitle": "Manipulating streams fabric.stream gets all streams",
                  "timedOut": false,
                  "duration": 116,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getStreams();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "53bc7f90-0c3a-4376-aad8-6444305da221",
                  "parentUUID": "2494c37a-99b6-424a-b6c9-cb95b1dcfc4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears backlog",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.clearBacklog();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "697767f0-0b0a-4bd2-b9d3-1e629f1b8084",
                  "parentUUID": "2494c37a-99b6-424a-b6c9-cb95b1dcfc4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears subscription backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears subscription backlog",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "d9441787-b587-4b10-9f9a-fec7dbb6a3ce",
                  "parentUUID": "2494c37a-99b6-424a-b6c9-cb95b1dcfc4d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "unsubscribes to a subscription",
                  "fullTitle": "Manipulating streams fabric.stream unsubscribes to a subscription",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "0d607f43-a0d9-44f7-ade1-90dc92dcd271",
                  "parentUUID": "2494c37a-99b6-424a-b6c9-cb95b1dcfc4d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3e2b2220-0070-4ba9-8b61-b31be774ca00",
                "53bc7f90-0c3a-4376-aad8-6444305da221",
                "697767f0-0b0a-4bd2-b9d3-1e629f1b8084"
              ],
              "failures": [],
              "pending": [
                "d9441787-b587-4b10-9f9a-fec7dbb6a3ce",
                "0d607f43-a0d9-44f7-ade1-90dc92dcd271"
              ],
              "skipped": [],
              "duration": 235,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "7fa3063c-2959-4d0a-b77a-8443901831b2",
              "title": "stream.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "d90572b6-3bc6-45de-b4a1-81bd41d50e22",
                  "title": "persistent",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "creates a persistent local stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent local stream",
                      "timedOut": false,
                      "duration": 127,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, true);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "bfcc19c8-739a-4aab-8704-d5a17efd7149",
                      "parentUUID": "d90572b6-3bc6-45de-b4a1-81bd41d50e22",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "creates a persistent global stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent global stream",
                      "timedOut": false,
                      "duration": 125,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, false);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "ac80dfef-4028-49c7-9dc0-a97c2bbd25a5",
                      "parentUUID": "d90572b6-3bc6-45de-b4a1-81bd41d50e22",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "bfcc19c8-739a-4aab-8704-d5a17efd7149",
                    "ac80dfef-4028-49c7-9dc0-a97c2bbd25a5"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 252,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "ccdb9c07-147a-417a-9c48-e094bc518433",
              "title": "stream.manipulate",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 127,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream = fabric.stream(`testStream${Date.now()}`, false);\nawait stream.createStream();",
                  "err": {},
                  "uuid": "725bf7b1-b117-4ed7-a206-e75e24b71deb",
                  "parentUUID": "ccdb9c07-147a-417a-9c48-e094bc518433",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 113,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                  "err": {},
                  "uuid": "50fe296e-3e57-4d26-bc63-119ea1a92266",
                  "parentUUID": "ccdb9c07-147a-417a-9c48-e094bc518433",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream.closeConnections();",
                  "err": {},
                  "uuid": "9e9330e7-a5c5-4ef0-acf2-4395d3f9cab9",
                  "parentUUID": "ccdb9c07-147a-417a-9c48-e094bc518433",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "stream.expireMessagesOnAllSubscriptions",
                  "fullTitle": "Manipulating streams stream.manipulate stream.expireMessagesOnAllSubscriptions",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "fc978f2d-9768-43da-89ed-33a4d0788fd8",
                  "parentUUID": "ccdb9c07-147a-417a-9c48-e094bc518433",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "8a14a984-9463-4f0b-950f-dbad1090e3b6",
                  "title": "stream.getBacklog",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets estimated backlog for offline stream",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getBacklog gets estimated backlog for offline stream",
                      "timedOut": false,
                      "duration": 126,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.backlog();\nconsole.log(response.error);\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "2ef35465-88dc-458c-a2f8-1b95865987ec",
                      "parentUUID": "8a14a984-9463-4f0b-950f-dbad1090e3b6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "2ef35465-88dc-458c-a2f8-1b95865987ec"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 126,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "0b9800c1-f4f0-4a11-9253-9a365703072c",
                  "title": "stream.getStreamStatistics",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets the stream statistics",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getStreamStatistics gets the stream statistics",
                      "timedOut": false,
                      "duration": 128,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.getStreamStatistics();\nchai_1.expect(response.error).to.be.false;",
                      "err": {
                        "message": "C8Error: C8Streams error 404",
                        "estack": "C8Error: C8Streams error 404\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "e7d309ec-595c-4d6a-85a2-b8a928dc0068",
                      "parentUUID": "0b9800c1-f4f0-4a11-9253-9a365703072c",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [
                    "e7d309ec-595c-4d6a-85a2-b8a928dc0068"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 128,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                  "title": "stream.subscriptions",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "stream.resetSubscriptionToPosition",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetSubscriptionToPosition",
                      "timedOut": false,
                      "duration": 1639,
                      "state": "failed",
                      "speed": "slow",
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "let numberOfMessages = 0;\nfunction callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    const array = [\"bmFuZGhh\", \"YWJoaXNoZWs=\", \"dmlwdWw=\", \"c3Vsb20=\", \"cHJhdGlr\"];\n    if (array.includes(payload)) {\n        numberOfMessages++;\n    }\n    ;\n    if (numberOfMessages === 5) {\n        done();\n    }\n}\nstream.consumer(`streamSubscriptionTest`, {\n    onmessage: callback,\n    onopen: () => {\n        stream.producer([\"nandha\", \"abhishek\", \"vipul\", \"sulom\", \"pratik\"], dcName);\n    }\n}, dcName);",
                      "err": {
                        "message": "Error: done() called multiple times",
                        "estack": "Error: done() called multiple times\n    at callback (src/test/28-manipulating-streams.ts:103:13)\n    at WebSocket.consumer.on (src/stream.ts:247:21)\n    at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:719:20)\n    at Receiver.dataMessage (node_modules/ws/lib/receiver.js:414:14)\n    at perMessageDeflate.decompress (node_modules/ws/lib/receiver.js:371:23)\n    at _decompress (node_modules/ws/lib/permessage-deflate.js:307:9)\n    at _inflate.flush (node_modules/ws/lib/permessage-deflate.js:389:7)\n    at afterWrite (_stream_writable.js:485:3)\n    at onwrite (_stream_writable.js:476:7)\n    at InflateRaw.afterTransform (_stream_transform.js:94:3)\n    at Zlib.processCallback (zlib.js:557:8)",
                        "diff": null
                      },
                      "uuid": "0ec110fb-aea0-4dc8-bfe4-e0465447c50a",
                      "parentUUID": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.expireMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.expireMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "4b2bdcfa-788e-4186-b670-d1fe06e26bf9",
                      "parentUUID": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.resetCursor",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetCursor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "a2f1e34a-68eb-42fe-b22f-3f6425719c47",
                      "parentUUID": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipNumberOfMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipNumberOfMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "54e31f46-cb1f-49d2-bb63-e6959058d30a",
                      "parentUUID": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipAllMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipAllMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "73f43c29-12f7-489f-8491-916fd017139b",
                      "parentUUID": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.getSubscriptionList",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.getSubscriptionList",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it(\"gets subscription list\", async () => {\n    const response = await stream.getSubscriptionList();\n    chai_1.expect(response.error).to.be.false;\n});",
                      "err": {},
                      "uuid": "9478f8a3-f13b-4075-95dc-185143fb18b5",
                      "parentUUID": "3843c0ee-6953-475b-8320-f6252fbf9b7e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4b2bdcfa-788e-4186-b670-d1fe06e26bf9",
                    "a2f1e34a-68eb-42fe-b22f-3f6425719c47",
                    "54e31f46-cb1f-49d2-bb63-e6959058d30a",
                    "73f43c29-12f7-489f-8491-916fd017139b",
                    "9478f8a3-f13b-4075-95dc-185143fb18b5"
                  ],
                  "failures": [
                    "0ec110fb-aea0-4dc8-bfe4-e0465447c50a"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 1639,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "09e567ab-386a-48f5-a5ac-e1f57ff60a79",
                  "title": "stream.terminate",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "42fbe715-fb37-468e-b181-7798ed023887",
                      "title": "persistent",
                      "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                      "file": "/lib/async/test/28-manipulating-streams.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "fee42e21-06c2-4171-abab-51ae33040b61",
                          "title": "local",
                          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local \"before each\" hook",
                              "timedOut": false,
                              "duration": 127,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, true);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "a38efbad-541c-48ce-8815-d23b10f238f5",
                              "parentUUID": "fee42e21-06c2-4171-abab-51ae33040b61",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent local stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local terminates persistent local stream",
                              "timedOut": false,
                              "duration": 125,
                              "state": "failed",
                              "speed": null,
                              "pass": false,
                              "fail": true,
                              "pending": false,
                              "context": null,
                              "code": "const response = await stream.terminateStream();\nchai_1.expect(response.error).to.be.false;",
                              "err": {
                                "message": "C8Error: C8Streams error 404",
                                "estack": "C8Error: C8Streams error 404\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                                "diff": null
                              },
                              "uuid": "a52655f2-15f7-47c6-b64e-2a0b81898c29",
                              "parentUUID": "fee42e21-06c2-4171-abab-51ae33040b61",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [],
                          "failures": [
                            "a52655f2-15f7-47c6-b64e-2a0b81898c29"
                          ],
                          "pending": [],
                          "skipped": [],
                          "duration": 125,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        },
                        {
                          "uuid": "67a39a78-0c5d-465a-8c0f-b3d4d4698f9b",
                          "title": "global",
                          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global \"before each\" hook",
                              "timedOut": false,
                              "duration": 126,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, false);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "4faf9173-fc22-4c69-a849-fa4cabf9e6ca",
                              "parentUUID": "67a39a78-0c5d-465a-8c0f-b3d4d4698f9b",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent global stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global terminates persistent global stream",
                              "timedOut": false,
                              "duration": 145,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const response = await stream.terminateStream();\nchai_1.expect(response.error).to.be.false;",
                              "err": {},
                              "uuid": "73df0827-859b-447e-9ae8-939164618f2b",
                              "parentUUID": "67a39a78-0c5d-465a-8c0f-b3d4d4698f9b",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "73df0827-859b-447e-9ae8-939164618f2b"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 145,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 50000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "02e52e75-da7a-404f-bcfd-9fc63eaab286",
                  "title": "stream.websocket",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"before all\" hook",
                      "timedOut": false,
                      "duration": 112,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                      "err": {},
                      "uuid": "80ac6c4f-3d8b-4f4c-ae2a-c5b5d5aa39b3",
                      "parentUUID": "02e52e75-da7a-404f-bcfd-9fc63eaab286",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"after all\" hook",
                      "timedOut": false,
                      "duration": 1,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "stream.closeConnections();",
                      "err": {},
                      "uuid": "7ba02017-32fd-4f44-9470-f0f717299800",
                      "parentUUID": "02e52e75-da7a-404f-bcfd-9fc63eaab286",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "gets data in consumer when sent by producer",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket gets data in consumer when sent by producer",
                      "timedOut": false,
                      "duration": 756,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "function callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    chai_1.expect(payload).to.equal(\"dGVzdA==\");\n    done();\n}\nstream.consumer(`streamSubscription${Date.now()}`, {\n    onmessage: callback,\n    onopen: () => stream.producer(\"test\", dcName)\n}, dcName);",
                      "err": {},
                      "uuid": "841f417a-fe38-4d74-8e4f-94db28b49e15",
                      "parentUUID": "02e52e75-da7a-404f-bcfd-9fc63eaab286",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "841f417a-fe38-4d74-8e4f-94db28b49e15"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 756,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "fc978f2d-9768-43da-89ed-33a4d0788fd8"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "b05f9fc4-a399-4bf7-aa19-ebce75de5101",
          "title": "manipulating spot",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/29-manipulating-spot.js",
          "file": "/lib/async/test/29-manipulating-spot.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating spot \"before all\" hook",
              "timedOut": false,
              "duration": 878,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nlocalLocation = await fabric.getLocalEdgeLocation();\nname = localLocation.name;",
              "err": {},
              "uuid": "a3267077-a0a4-4259-8bd4-d04f71f124a9",
              "parentUUID": "b05f9fc4-a399-4bf7-aa19-ebce75de5101",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating spot \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "48422466-35a8-48ea-bfc5-38c1ed1c4852",
              "parentUUID": "b05f9fc4-a399-4bf7-aa19-ebce75de5101",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "4b662f47-8dc3-4818-a52b-72e7e9efb0fb",
              "title": "spot_region status of a region",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should change the spot_region of a region",
                  "fullTitle": "manipulating spot spot_region status of a region should change the spot_region of a region",
                  "timedOut": false,
                  "duration": 172,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const currentSpotStatus = localLocation.spot_region;\nawait fabric.changeEdgeLocationSpotStatus(name, !currentSpotStatus);\nconst changedLocation = await fabric.getLocalEdgeLocation();\nconst changedSpotStatus = changedLocation.spot_region;\nchai_1.expect(changedLocation).to.equal(!changedSpotStatus);",
                  "err": {
                    "message": "C8Error: forbidden",
                    "estack": "C8Error: forbidden\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "d9a0d092-6538-47e6-baae-3f19946c63b8",
                  "parentUUID": "4b662f47-8dc3-4818-a52b-72e7e9efb0fb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not change the spot_region to false if a fabric's spot primary is that region",
                  "fullTitle": "manipulating spot spot_region status of a region should not change the spot_region to false if a fabric's spot primary is that region",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c8f75ac0-f9fe-409e-bd23-7b91afba4808",
                  "parentUUID": "4b662f47-8dc3-4818-a52b-72e7e9efb0fb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d9a0d092-6538-47e6-baae-3f19946c63b8"
              ],
              "pending": [
                "c8f75ac0-f9fe-409e-bd23-7b91afba4808"
              ],
              "skipped": [],
              "duration": 172,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "a8ada5c0-abfb-4739-a22b-54ae214ef221",
              "title": "spot fabric",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "manipulating spot spot fabric \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.dropFabric(fabricName);",
                  "err": {},
                  "uuid": "8204c298-edd8-42f8-acbc-00a6244c3ebe",
                  "parentUUID": "a8ada5c0-abfb-4739-a22b-54ae214ef221",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should create a fabric with a spot primary region",
                  "fullTitle": "manipulating spot spot fabric should create a fabric with a spot primary region",
                  "timedOut": false,
                  "duration": 1292,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.changeEdgeLocationSpotStatus(name, true);\nconst options = {\n    dcList: name,\n    spotDc: name\n};\nconst response = await fabric.createFabric(fabricName, undefined, options);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "b1d430ad-d599-4871-984d-481e30fb3c44",
                  "parentUUID": "a8ada5c0-abfb-4739-a22b-54ae214ef221",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change the spot primary region of a fabric",
                  "fullTitle": "manipulating spot spot fabric should change the spot primary region of a fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "471a3f96-1f69-4183-a588-cb23c59a4e1a",
                  "parentUUID": "a8ada5c0-abfb-4739-a22b-54ae214ef221",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1d430ad-d599-4871-984d-481e30fb3c44"
              ],
              "failures": [],
              "pending": [
                "471a3f96-1f69-4183-a588-cb23c59a4e1a"
              ],
              "skipped": [],
              "duration": 1292,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "d01f4ff9-d790-43fc-b574-1ec081fb1182",
              "title": "spot collection",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a spot document collection",
                  "fullTitle": "manipulating spot spot collection should create a spot document collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "ce311f14-217d-47c4-b91b-eef5984e93ba",
                  "parentUUID": "d01f4ff9-d790-43fc-b574-1ec081fb1182",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a spot edge collection",
                  "fullTitle": "manipulating spot spot collection should create a spot edge collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c3451709-6f91-46a2-9e72-c64db8c6bb76",
                  "parentUUID": "d01f4ff9-d790-43fc-b574-1ec081fb1182",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "2224f4d5-6134-4cb3-97a3-203b2ec960d0",
                  "title": "mapulating spot collection's region",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/29-manipulating-spot.js",
                  "file": "/lib/async/test/29-manipulating-spot.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should change the spot region of a spot collection to none",
                      "fullTitle": "manipulating spot spot collection mapulating spot collection's region should change the spot region of a spot collection to none",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "19b52b74-cc05-4518-9509-2eee58ce8a4a",
                      "parentUUID": "2224f4d5-6134-4cb3-97a3-203b2ec960d0",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should change the spot region of a spot collection to some other region",
                      "fullTitle": "manipulating spot spot collection mapulating spot collection's region should change the spot region of a spot collection to some other region",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "64dde0c0-dc56-4919-9d11-af5bdd37501f",
                      "parentUUID": "2224f4d5-6134-4cb3-97a3-203b2ec960d0",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "19b52b74-cc05-4518-9509-2eee58ce8a4a",
                    "64dde0c0-dc56-4919-9d11-af5bdd37501f"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "ce311f14-217d-47c4-b91b-eef5984e93ba",
                "c3451709-6f91-46a2-9e72-c64db8c6bb76"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "1c8ab554-be31-490b-a92d-92d49080a056",
          "title": "User Management",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
          "file": "/lib/async/test/30-user-management.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "User Management \"before all\" hook",
              "timedOut": false,
              "duration": 740,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "41300ef0-3a98-4567-b3bb-c2eee0aff2ab",
              "parentUUID": "1c8ab554-be31-490b-a92d-92d49080a056",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "User Management \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "9ae2ae70-fbfd-4b95-9b0f-7c150e433474",
              "parentUUID": "1c8ab554-be31-490b-a92d-92d49080a056",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "468be8b4-e4a3-4814-97fe-1fea94e6669b",
              "title": "fabric.user",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new user instance",
                  "fullTitle": "User Management fabric.user creates a new user instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.user(\"testUser\", \"testUser@test.com\")).to.be.instanceof(user_1.default);",
                  "err": {},
                  "uuid": "7268787b-d98c-457d-8c17-d890f8588dcf",
                  "parentUUID": "468be8b4-e4a3-4814-97fe-1fea94e6669b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7268787b-d98c-457d-8c17-d890f8588dcf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "a86b9183-ce49-4cfa-a047-336abdac8e16",
              "title": "user.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "User Management user.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 127,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await user.deleteUser();",
                  "err": {},
                  "uuid": "652cdc6e-8f92-4196-8e39-58fc900b60de",
                  "parentUUID": "a86b9183-ce49-4cfa-a047-336abdac8e16",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a user",
                  "fullTitle": "User Management user.create creates a user",
                  "timedOut": false,
                  "duration": 138,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nconst response = await user.createUser(\"testPass\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "90338cf7-9eb0-4967-9253-d905509f8f6c",
                  "parentUUID": "a86b9183-ce49-4cfa-a047-336abdac8e16",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "90338cf7-9eb0-4967-9253-d905509f8f6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 138,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "83a4d3f1-048a-423a-ac41-c21af821f98e",
              "title": "fabric.getAllUsers",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Lists all users",
                  "fullTitle": "User Management fabric.getAllUsers Lists all users",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllUsers();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "f5627141-f7b6-4e12-91ea-fac00a6a21b1",
                  "parentUUID": "83a4d3f1-048a-423a-ac41-c21af821f98e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f5627141-f7b6-4e12-91ea-fac00a6a21b1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "7c7d1919-ab94-4193-bd05-1e00149b32fc",
              "title": "user.crud_operations",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "User Management user.crud_operations \"before each\" hook",
                  "timedOut": false,
                  "duration": 136,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nawait user.createUser(\"testPass\");",
                  "err": {},
                  "uuid": "16593647-8df0-4586-9020-19513dee1726",
                  "parentUUID": "7c7d1919-ab94-4193-bd05-1e00149b32fc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "User Management user.crud_operations \"after each\" hook",
                  "timedOut": false,
                  "duration": 127,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await user.deleteUser();\n}\ncatch (error) { }",
                  "err": {},
                  "uuid": "b3048ff0-4816-4215-b31c-4d8eacb7436b",
                  "parentUUID": "7c7d1919-ab94-4193-bd05-1e00149b32fc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [],
              "suites": [
                {
                  "uuid": "9fa6acc2-4fb0-4f2c-83cf-9d8e9da57224",
                  "title": "user.deleteUser",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deletes a user",
                      "fullTitle": "User Management user.crud_operations user.deleteUser Deletes a user",
                      "timedOut": false,
                      "duration": 133,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.deleteUser();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "31c6007b-d655-4bff-8025-621ee47fa3a0",
                      "parentUUID": "9fa6acc2-4fb0-4f2c-83cf-9d8e9da57224",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "31c6007b-d655-4bff-8025-621ee47fa3a0"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 133,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "6f5d7fc8-13f4-4c24-9cca-7468e9eea023",
                  "title": "user.getUserDetails",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Fetches a user",
                      "fullTitle": "User Management user.crud_operations user.getUserDetails Fetches a user",
                      "timedOut": false,
                      "duration": 117,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getUserDeatils();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "7a4064d9-11b3-4b1b-a45a-76da512630b6",
                      "parentUUID": "6f5d7fc8-13f4-4c24-9cca-7468e9eea023",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7a4064d9-11b3-4b1b-a45a-76da512630b6"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 117,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "68e18b16-de7c-4031-bfb1-533e74198434",
                  "title": "user.modifyUser",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.modifyUser Modifies a user",
                      "timedOut": false,
                      "duration": 124,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.modifyUser({\n    active: false\n});\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.active).to.be.false;",
                      "err": {},
                      "uuid": "7602abde-c9df-4322-93f2-37500f4bc0a2",
                      "parentUUID": "68e18b16-de7c-4031-bfb1-533e74198434",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7602abde-c9df-4322-93f2-37500f4bc0a2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 124,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "03b62537-1f56-49b9-8f91-13f5e06196e3",
                  "title": "user.replaceUser",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.replaceUser Modifies a user",
                      "timedOut": false,
                      "duration": 132,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.replaceUser({\n    passwd: \"test_passwordddd\"\n});\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "5768b1af-2bb9-4a6e-b8e8-05475411d1f1",
                      "parentUUID": "03b62537-1f56-49b9-8f91-13f5e06196e3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5768b1af-2bb9-4a6e-b8e8-05475411d1f1"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 132,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                  "title": "User.FabricAccessOperations",
                  "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"before each\" hook",
                      "timedOut": false,
                      "duration": 198,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await fabric.createFabric(testFabricName, [{ username: user.user }], {\n    dcList: dcList\n});\nfabric.useFabric(testFabricName);",
                      "err": {},
                      "uuid": "9af603cb-1735-49e2-9fe5-9580b22d0bfa",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"after each\" hook",
                      "timedOut": false,
                      "duration": 254,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(testFabricName);",
                      "err": {},
                      "uuid": "9a8f7ba1-f59b-4da2-b7a4-921f9ede3c39",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "Lists the accessible databases and their permissions ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions ",
                      "timedOut": false,
                      "duration": 146,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).not.exist;",
                      "err": {},
                      "uuid": "47355c82-4d3d-408f-be14-406f559d36ad",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Lists the accessible databases and their permissions with all the collections",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions with all the collections",
                      "timedOut": false,
                      "duration": 122,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases(true);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).to.exist;",
                      "err": {},
                      "uuid": "6f81b818-ae55-4e4c-a1c1-e210b2de8cd1",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a database ",
                      "timedOut": false,
                      "duration": 123,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result).to.be.oneOf([\"rw\", \"ro\", \"none\"]);",
                      "err": {},
                      "uuid": "718823a2-1a0e-4139-9d86-2b6fea1da12d",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 310,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.getCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "20a6c923-dc2b-4efc-99c7-dc64f19ee02b",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a database ",
                      "timedOut": false,
                      "duration": 151,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.clearDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {},
                      "uuid": "f346f1f9-f261-4cad-82d7-88f1d999f617",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 276,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.clearCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {
                        "message": "C8Error: database not found",
                        "estack": "C8Error: database not found\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "c4a3d97f-9354-4f7e-9904-4494e29dc4ae",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 340,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.setCollectionAccessLevel(testFabricName, collectionName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}/${collectionName}`]).eq(\"ro\");",
                      "err": {
                        "message": "C8Error: database not found",
                        "estack": "C8Error: database not found\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "04bec57b-d363-4ca7-a0fe-54de3a802a54",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a database",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a database",
                      "timedOut": false,
                      "duration": 125,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.setDatabaseAccessLevel(testFabricName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}`]).eq(\"ro\");",
                      "err": {},
                      "uuid": "24c2bfb6-80a2-4482-8929-700c85b0b84d",
                      "parentUUID": "acc8421b-a3fe-4c04-a5fa-af57ec20d33f",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "47355c82-4d3d-408f-be14-406f559d36ad",
                    "6f81b818-ae55-4e4c-a1c1-e210b2de8cd1",
                    "718823a2-1a0e-4139-9d86-2b6fea1da12d",
                    "20a6c923-dc2b-4efc-99c7-dc64f19ee02b",
                    "f346f1f9-f261-4cad-82d7-88f1d999f617",
                    "24c2bfb6-80a2-4482-8929-700c85b0b84d"
                  ],
                  "failures": [
                    "c4a3d97f-9354-4f7e-9904-4494e29dc4ae",
                    "04bec57b-d363-4ca7-a0fe-54de3a802a54"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 1593,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "1d59f907-91f7-4636-94fb-dc186c280272",
          "title": "manipulating restql",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
          "file": "/lib/async/test/31-restql.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating restql \"before all\" hook",
              "timedOut": false,
              "duration": 469,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "f2c9f875-9ce4-4a4b-9142-becca0fee434",
              "parentUUID": "1d59f907-91f7-4636-94fb-dc186c280272",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating restql \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "60e895e6-f96f-474c-85fe-ab8f84d03810",
              "parentUUID": "1d59f907-91f7-4636-94fb-dc186c280272",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "494501a3-cf92-487e-8cdd-d9d61eff4469",
              "title": "fabric.saveQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should save a query",
                  "fullTitle": "manipulating restql fabric.saveQuery should save a query",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const queryName = \"testQuery\";\nconst response = await fabric.saveQuery(queryName, {}, \"for coll in _collections return coll\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.name).to.equal(queryName);",
                  "err": {},
                  "uuid": "c6be577d-b382-41c7-bf6e-c94af786ad45",
                  "parentUUID": "494501a3-cf92-487e-8cdd-d9d61eff4469",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6be577d-b382-41c7-bf6e-c94af786ad45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "14c97243-68ff-498c-add1-6af2e4b762f4",
              "title": "fabric.listSavedQueries",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should make a successful API call",
                  "fullTitle": "manipulating restql fabric.listSavedQueries should make a successful API call",
                  "timedOut": false,
                  "duration": 113,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.listSavedQueries();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.length).to.be.at.least(1);",
                  "err": {},
                  "uuid": "44d5f8f9-0fbc-4a94-8e5b-299c5b85abb8",
                  "parentUUID": "14c97243-68ff-498c-add1-6af2e4b762f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44d5f8f9-0fbc-4a94-8e5b-299c5b85abb8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 113,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "26f1cc30-47c0-4d68-b2f4-274d55b3ec6e",
              "title": "fabric.executeSavedQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery \"before all\" hook",
                  "timedOut": false,
                  "duration": 115,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.executeSavedQuery(queryName, {});",
                  "err": {},
                  "uuid": "96043f7b-b584-4707-8e13-546c24fd2b47",
                  "parentUUID": "26f1cc30-47c0-4d68-b2f4-274d55b3ec6e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a saved query",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery should execute a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "0b8c3320-d73e-48fe-b69f-41f86305b492",
                  "parentUUID": "26f1cc30-47c0-4d68-b2f4-274d55b3ec6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b8c3320-d73e-48fe-b69f-41f86305b492"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "380ef42b-e649-4ab6-b747-2c636ef30de9",
              "title": "fabric.deleteSavedQuery",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.deleteSavedQuery should delete a saved query",
                  "timedOut": false,
                  "duration": 120,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.deleteSavedQuery(queryName);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "d5370547-4276-40be-bce1-1cc79d47e083",
                  "parentUUID": "380ef42b-e649-4ab6-b747-2c636ef30de9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5370547-4276-40be-bce1-1cc79d47e083"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 120,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "2414f0a6-50e9-43bf-85e2-aa09cd74cfa0",
              "title": "fabric.createRestqlCursor",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.createRestqlCursor should delete a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "3ddf46db-a090-47eb-8679-e1e6ec8ab7d2",
                  "parentUUID": "2414f0a6-50e9-43bf-85e2-aa09cd74cfa0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "3ddf46db-a090-47eb-8679-e1e6ec8ab7d2"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "6cfa98ae-303a-4bcd-ac52-a75082e3c7f4",
          "title": "Manipulating pipelines",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
          "file": "/lib/async/test/32-pipelines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating pipelines \"before all\" hook",
              "timedOut": false,
              "duration": 461,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nfabric.useFabric(\"_system\");",
              "err": {},
              "uuid": "a8aaaa4e-eb9e-4735-82f0-207d01c064c5",
              "parentUUID": "6cfa98ae-303a-4bcd-ac52-a75082e3c7f4",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating pipelines \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "472e85a8-e481-4042-ae34-011d9a679cfb",
              "parentUUID": "6cfa98ae-303a-4bcd-ac52-a75082e3c7f4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7bc4bf1a-489d-45d0-bcef-5c3d21b49679",
              "title": "fabric.getAllPipelines",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an empty array or an array of all pipelines",
                  "fullTitle": "Manipulating pipelines fabric.getAllPipelines returns an empty array or an array of all pipelines",
                  "timedOut": false,
                  "duration": 245,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dcList = await fabric.getAllEdgeLocations();\nconst regions = helper_1.getDCListString(dcList).split(',');\nconst isEnabled = false;\nconst config = {\n    \"input\": {\n        \"type\": \"c8db\",\n        \"c8db\": {\n            \"name\": \"collection_namepl1\"\n        }\n    },\n    \"output\": {\n        \"type\": \"c8streams\",\n        \"c8streams\": {\n            \"name\": \"stream_namepl1\",\n            \"local\": true\n        }\n    }\n};\nconst result = await fabric.getPipelines();\nconst allPipelines = result.result;\nconst pipelinesCount = allPipelines.length;\nchai_1.expect(allPipelines).to.be.an('array');\nconst pipeline = fabric.pipeline('testPipeline');\nawait pipeline.create(regions, isEnabled, config);\nconst updatedResult = await fabric.getPipelines();\nconst updatedAllPipelines = updatedResult.result;\nconst expectedPipelinesCount = pipelinesCount + 1;\nchai_1.expect(updatedAllPipelines.length).to.equal(expectedPipelinesCount);",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "8699463c-6948-4a98-988e-3988c09b24db",
                  "parentUUID": "7bc4bf1a-489d-45d0-bcef-5c3d21b49679",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "8699463c-6948-4a98-988e-3988c09b24db"
              ],
              "pending": [],
              "skipped": [],
              "duration": 245,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "b6f1d882-8a70-4a10-8654-dc27283eac32",
              "title": "pipeline.create",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.create creates a new pipeline",
                  "timedOut": false,
                  "duration": 272,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dcList = await fabric.getAllEdgeLocations();\nconst regions = helper_1.getDCListString(dcList).split(',');\nconst isEnabled = false;\nconst config = {\n    \"input\": {\n        \"type\": \"c8db\",\n        \"c8db\": {\n            \"name\": \"collection_namepl2\"\n        }\n    },\n    \"output\": {\n        \"type\": \"c8streams\",\n        \"c8streams\": {\n            \"name\": \"stream_namepl2\",\n            \"local\": true\n        }\n    }\n};\nconst pipeline = fabric.pipeline('testPipeline2');\nconst response = await pipeline.create(regions, isEnabled, config);\nchai_1.expect(response.error).to.be.false;",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "6abfed06-f0fc-4ef3-a9a9-8adac73cf8f6",
                  "parentUUID": "b6f1d882-8a70-4a10-8654-dc27283eac32",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6abfed06-f0fc-4ef3-a9a9-8adac73cf8f6"
              ],
              "pending": [],
              "skipped": [],
              "duration": 272,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "caab7128-9b5e-48d7-bb2a-97e0c984a517",
              "title": "pipeline.drop",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes an existing pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.drop deletes an existing pipeline",
                  "timedOut": false,
                  "duration": 119,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const resultObject = await fabric.getPipelines();\nconst allPipelines = resultObject.result;\nconst pipelineName = allPipelines[0].name;\nconst pipelinesCount = allPipelines.length;\nconst pipeline = fabric.pipeline(pipelineName);\nawait pipeline.drop();\nconst updatedResultObject = await fabric.getPipelines();\nconst updatedPipelines = updatedResultObject.result;\nconst updatedPipelinesCount = updatedPipelines.length;\nchai_1.expect(updatedPipelinesCount).to.equal(pipelinesCount - 1);",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "73ceb9e0-410d-423a-8ca9-18bbaea1ec81",
                  "parentUUID": "caab7128-9b5e-48d7-bb2a-97e0c984a517",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "73ceb9e0-410d-423a-8ca9-18bbaea1ec81"
              ],
              "pending": [],
              "skipped": [],
              "duration": 119,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "c37721a4-9ff7-4e2d-9de5-dc7d61416e65",
              "title": "pipeline.details",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetches the details of an existing pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.details fetches the details of an existing pipeline",
                  "timedOut": false,
                  "duration": 122,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const resultObject = await fabric.getPipelines();\nconst allPipelines = resultObject.result;\nconst pipelineName = allPipelines[0].name;\nconst pipeline = fabric.pipeline(pipelineName);\nconst response = await pipeline.details();\nconst result = response.result;\nchai_1.expect(result).to.be.an('object');\nchai_1.expect(result).to.have.property('name');\nchai_1.expect(result).to.have.property('regions');\nchai_1.expect(result).to.have.property('enabled');\nchai_1.expect(result).to.have.property('config');",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "b077789a-7ac9-4e51-a6e5-648b7ca34534",
                  "parentUUID": "c37721a4-9ff7-4e2d-9de5-dc7d61416e65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "b077789a-7ac9-4e51-a6e5-648b7ca34534"
              ],
              "pending": [],
              "skipped": [],
              "duration": 122,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "e552ee15-9349-4347-9e5c-8a8638a91ee4",
              "title": "pipeline.update",
              "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates an existing pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.update updates an existing pipeline",
                  "timedOut": false,
                  "duration": 160,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const resultObject = await fabric.getPipelines();\nconst allPipelines = resultObject.result;\nconst pipelineName = allPipelines[0].name;\nconst pipeline = fabric.pipeline(pipelineName);\nconst response = await pipeline.details();\nconst { regions, enabled: isEnabled, config } = response.result;\nconst toggleEnabled = !isEnabled;\nconst updatedResultObject = await pipeline.update(regions, toggleEnabled, config);\nchai_1.expect(updatedResultObject.error).to.be.false;\nconst updatedPipeline = fabric.pipeline(pipelineName);\nconst detailsObject = await updatedPipeline.details();\nconst { enabled: updatedEnabledValue } = detailsObject.result;\nchai_1.expect(updatedEnabledValue).to.not.equal(isEnabled);\nchai_1.expect(updatedEnabledValue).to.equal(toggleEnabled);",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "603188a4-2af1-472c-8702-7613b65d25b8",
                  "parentUUID": "e552ee15-9349-4347-9e5c-8a8638a91ee4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "603188a4-2af1-472c-8702-7613b65d25b8"
              ],
              "pending": [],
              "skipped": [],
              "duration": 160,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "053f7f8d-9410-4739-98aa-d39ea386294e",
          "title": "fabric.route",
          "fullFile": "/home/sulom/Desktop/Projects/jsC8/lib/async/test/32-pipelines.js",
          "file": "/lib/async/test/32-pipelines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns a Route instance",
              "fullTitle": "fabric.route returns a Route instance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route();\nchai_1.expect(route).to.be.an.instanceof(route_1.Route);",
              "err": {},
              "uuid": "b4ad0c91-0164-4e62-97f2-e17ef04c55d2",
              "parentUUID": "053f7f8d-9410-4739-98aa-d39ea386294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates a route for the given path",
              "fullTitle": "fabric.route creates a route for the given path",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = \"/hi\";\nconst route = fabric.route(path);\nchai_1.expect(route._path).to.equal(path);",
              "err": {},
              "uuid": "4a8d75d1-36c9-4b8c-bc7f-a4f7f6a8d4f7",
              "parentUUID": "053f7f8d-9410-4739-98aa-d39ea386294e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passes the given headers to the new route",
              "fullTitle": "fabric.route passes the given headers to the new route",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route(\"/hello\", { \"x-magic\": \"awesome\" });\nchai_1.expect(route._headers).to.have.property(\"x-magic\", \"awesome\");",
              "err": {},
              "uuid": "66b82abc-1224-4e32-9ac3-9b012618a82a",
              "parentUUID": "053f7f8d-9410-4739-98aa-d39ea386294e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b4ad0c91-0164-4e62-97f2-e17ef04c55d2",
            "4a8d75d1-36c9-4b8c-bc7f-a4f7f6a8d4f7",
            "66b82abc-1224-4e32-9ac3-9b012618a82a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "fddc46c0-2e87-4a00-b3d2-e579a92f5599"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.1.0"
    }
  }
}