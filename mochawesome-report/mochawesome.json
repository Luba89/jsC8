{
  "stats": {
    "suites": 156,
    "tests": 221,
    "passes": 190,
    "pending": 20,
    "failures": 11,
    "start": "2020-02-24T07:01:18.433Z",
    "end": "2020-02-24T07:07:41.917Z",
    "duration": 383484,
    "testsRegistered": 222,
    "passPercent": 94.05940594059405,
    "pendingPercent": 9.00900900900901,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "3160622d-3805-4efd-9613-22c9bd8d050e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "gets subscription list",
          "fullTitle": "gets subscription list",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const response = await stream.getSubscriptionList();\nchai_1.expect(response.error).to.be.false;",
          "err": {},
          "uuid": "ef192cca-cbd5-4812-8234-5eca6139272a",
          "parentUUID": "3160622d-3805-4efd-9613-22c9bd8d050e",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "3401d0c6-330d-4dab-a51d-8901b0ffdcd5",
          "title": "Creating a Fabric",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "ad3963e2-836f-4e7c-9021-f1829b664308",
              "title": "using the factory",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the factory returns a Fabric instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "0b620154-1848-48cb-833e-f6d88ccad6ad",
                  "parentUUID": "ad3963e2-836f-4e7c-9021-f1829b664308",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the factory passes any configs to the connection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 54321);",
                  "err": {},
                  "uuid": "c9de6b35-ccfe-439e-b1f1-0eb7731fbc00",
                  "parentUUID": "ad3963e2-836f-4e7c-9021-f1829b664308",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0b620154-1848-48cb-833e-f6d88ccad6ad",
                "c9de6b35-ccfe-439e-b1f1-0eb7731fbc00"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "dd15f728-ab3e-4902-a877-6d028ee7f323",
              "title": "using the constructor",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the constructor returns a Fabric instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "f6bea1ee-1b7d-4b11-82ad-a0ce9e804f71",
                  "parentUUID": "dd15f728-ab3e-4902-a877-6d028ee7f323",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the constructor passes any configs to the connection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 43210);",
                  "err": {},
                  "uuid": "44e1a39a-ed47-4b42-9e76-2e6184f4d16c",
                  "parentUUID": "dd15f728-ab3e-4902-a877-6d028ee7f323",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f6bea1ee-1b7d-4b11-82ad-a0ce9e804f71",
                "44e1a39a-ed47-4b42-9e76-2e6184f4d16c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "9dbba5f0-9efa-4303-bebe-01b704b32bc9",
          "title": "Configuring the driver",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "72b00b2b-ecb5-4eb5-892a-e2bddbf47bdb",
              "title": "with a string",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the url",
                  "fullTitle": "Configuring the driver with a string sets the url",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "dc3c6d86-11d4-46d8-b5d3-18805490f68d",
                  "parentUUID": "72b00b2b-ecb5-4eb5-892a-e2bddbf47bdb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "dc3c6d86-11d4-46d8-b5d3-18805490f68d"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "2598d34d-f2b6-4daf-b3db-2dc564869c02",
              "title": "with headers",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "applies the headers",
                  "fullTitle": "Configuring the driver with headers applies the headers",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({\n    headers: {\n        \"x-one\": \"1\",\n        \"x-two\": \"2\"\n    }\n});\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-one\", \"1\");\n        chai_1.expect(headers).to.have.property(\"x-two\", \"2\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "d05043b3-a3f6-4eac-9ce3-80e2e45895cc",
                  "parentUUID": "2598d34d-f2b6-4daf-b3db-2dc564869c02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d05043b3-a3f6-4eac-9ce3-80e2e45895cc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "17df862e-0020-43ba-ae0b-4bd1b170cba1",
              "title": "with an c8Version",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the x-c8-version header",
                  "fullTitle": "Configuring the driver with an c8Version sets the x-c8-version header",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({ c8Version: 99999 });\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-c8-version\", \"99999\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "97d662c4-9f46-4862-9f1e-ec544b310422",
                  "parentUUID": "17df862e-0020-43ba-ae0b-4bd1b170cba1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97d662c4-9f46-4862-9f1e-ec544b310422"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "f0b3d0e9-4e74-47c1-aa17-8012d4d640dd",
              "title": "with agentOptions",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Agent = (ptcl) => function (opts) {\n    protocol = ptcl;\n    options = opts;\n    return () => null;\n};\nhttp.Agent = Agent(\"http\");\nhttps.Agent = Agent(\"https\");",
                  "err": {},
                  "uuid": "a55b7f29-8828-42b7-9f4b-226c84b7c487",
                  "parentUUID": "f0b3d0e9-4e74-47c1-aa17-8012d4d640dd",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "ae7c060d-4b33-484e-a5f8-b3d6d4d9468e",
                  "parentUUID": "f0b3d0e9-4e74-47c1-aa17-8012d4d640dd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.Agent = _httpAgent;\nhttps.Agent = _httpsAgent;",
                  "err": {},
                  "uuid": "4c1b2c3b-5a48-45c9-9c62-3412fa49f82a",
                  "parentUUID": "f0b3d0e9-4e74-47c1-aa17-8012d4d640dd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agentOptions to the agent",
                  "fullTitle": "Configuring the driver with agentOptions passes the agentOptions to the agent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "new connection_1.Connection({ agentOptions: { hello: \"world\" } }); // eslint-disable-line no-new\nchai_1.expect(options).to.have.property(\"hello\", \"world\");",
                  "err": {},
                  "uuid": "2234a261-e5f0-4eb5-89e7-4f70a1c03b65",
                  "parentUUID": "f0b3d0e9-4e74-47c1-aa17-8012d4d640dd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the built-in agent for the protocol",
                  "fullTitle": "Configuring the driver with agentOptions uses the built-in agent for the protocol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// default: http\nnew connection_1.Connection(); // eslint-disable-line no-new\n// expect(protocol).to.equal(\"http\");\nnew connection_1.Connection(\"https://test.macrometa.io\"); // eslint-disable-line no-new\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "deadce77-7262-4568-9c86-b92c4881758f",
                  "parentUUID": "f0b3d0e9-4e74-47c1-aa17-8012d4d640dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2234a261-e5f0-4eb5-89e7-4f70a1c03b65",
                "deadce77-7262-4568-9c86-b92c4881758f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
              "title": "with agent",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agent \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Request = (ptcl) => (opts) => {\n    protocol = ptcl;\n    options = opts;\n    return {\n        on() {\n            return this;\n        },\n        end() {\n            return this;\n        }\n    };\n};\nhttp.request = Request(\"http\");\nhttps.request = Request(\"https\");",
                  "err": {},
                  "uuid": "b8a35845-f949-4e50-9f0f-0e901e5e4afa",
                  "parentUUID": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agent \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "216a8c5d-22d1-4689-87a7-122c981f944d",
                  "parentUUID": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agent \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.request = _httpRequest;\nhttps.request = _httpsRequest;",
                  "err": {},
                  "uuid": "4869f7a1-4d38-4205-b48b-ee48b7ae1fd3",
                  "parentUUID": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agent to the request function",
                  "fullTitle": "Configuring the driver with agent passes the agent to the request function",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: https\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);\nagent = Symbol(\"agent\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);",
                  "err": {},
                  "uuid": "856a95c4-6a05-4a64-a056-c309d3617fa6",
                  "parentUUID": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the request function for the protocol",
                  "fullTitle": "Configuring the driver with agent uses the request function for the protocol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: http\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "28cce8da-152f-4706-8a72-08f8e6ab1543",
                  "parentUUID": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "calls Agent#destroy when the connection is closed",
                  "fullTitle": "Configuring the driver with agent calls Agent#destroy when the connection is closed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = {\n    _destroyed: false,\n    destroy() {\n        this._destroyed = true;\n    }\n};\nconst conn = new connection_1.Connection({ agent });\nchai_1.expect(agent._destroyed).to.equal(false);\nconn.close();\nchai_1.expect(agent._destroyed).to.equal(true);",
                  "err": {},
                  "uuid": "20a64d3b-33e9-4896-a78f-05bcedf5c741",
                  "parentUUID": "54d9bce0-a2c5-4d77-9ff3-b7756e8478d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "856a95c4-6a05-4a64-a056-c309d3617fa6",
                "28cce8da-152f-4706-8a72-08f8e6ab1543",
                "20a64d3b-33e9-4896-a78f-05bcedf5c741"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "c64b42e3-60b9-4a39-acea-933f95cf0338",
          "title": "Manipulating fabrics",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
          "file": "/lib/async/test/01-manipulating-fabrics.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1495,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "d63007be-598d-402d-88c3-996502c3eb10",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1508,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fabric2 = new jsC8_1.Fabric({\n    url: testUrl\n});\nawait fabric2.login(\"guest@macrometa.io\", \"guest\");\nfabric2.useTenant(\"guest\");\ncollection = fabric2.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "cff47b66-c717-4113-bddd-1bd718e0270e",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 1532,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "7da1177f-2abe-4a66-b185-65b1b83b4d5c",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\")",
              "err": {},
              "uuid": "e501ab7b-45c9-45bb-b38c-6b67649e7214",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "f067f332-9eba-48d6-852e-53ccf248d703",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 302,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.drop();",
              "err": {},
              "uuid": "1b50ecc1-4621-4371-b375-98774417f0da",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating fabrics \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "01e23f39-b806-4e24-ab75-b53279abb252",
              "parentUUID": "c64b42e3-60b9-4a39-acea-933f95cf0338",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e5a77a75-7fa5-40d8-ab4c-e372427ba61c",
              "title": "fabric.version",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the version object when no details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when no details are required",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version();\nchai_1.expect(response.server).to.equal(\"C8DB\");",
                  "err": {},
                  "uuid": "48458175-4615-4eef-85bd-fbf2e80af77c",
                  "parentUUID": "e5a77a75-7fa5-40d8-ab4c-e372427ba61c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the version object when details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when details are required",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version(true);\nchai_1.expect(response.server).to.equal(\"C8DB\");\nchai_1.expect(response.details).to.haveOwnProperty(\"architecture\");",
                  "err": {},
                  "uuid": "1eaf761a-8e0e-4eac-86c0-649db99ab806",
                  "parentUUID": "e5a77a75-7fa5-40d8-ab4c-e372427ba61c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "48458175-4615-4eef-85bd-fbf2e80af77c",
                "1eaf761a-8e0e-4eac-86c0-649db99ab806"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 817,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "215850b4-d9c6-46bd-a182-06a935ca9654",
              "title": "fabric.useFabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the fabric name",
                  "fullTitle": "Manipulating fabrics fabric.useFabric updates the fabric name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = \"example\";\nchai_1.expect(fabric.name).to.equal(\"_system\"); // default\nfabric.useFabric(name);\nchai_1.expect(fabric._connection).to.have.property(\"_fabricName\", name);\nchai_1.expect(fabric.name).to.equal(name);",
                  "err": {},
                  "uuid": "4cb7a3c8-c0f4-41bc-8189-4b6d32a46ec7",
                  "parentUUID": "215850b4-d9c6-46bd-a182-06a935ca9654",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns itself",
                  "fullTitle": "Manipulating fabrics fabric.useFabric returns itself",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabric2 = fabric.useFabric(\"nope\");\nchai_1.expect(fabric).to.equal(fabric2);",
                  "err": {},
                  "uuid": "0048d27f-8d6e-40c6-b196-2ef0ec84dab0",
                  "parentUUID": "215850b4-d9c6-46bd-a182-06a935ca9654",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4cb7a3c8-c0f4-41bc-8189-4b6d32a46ec7",
                "0048d27f-8d6e-40c6-b196-2ef0ec84dab0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "1aad3845-01f2-4927-8fab-fbb8c61b6409",
              "title": "fabric.edgeLocations",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gets all the edge locations",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets all the edge locations",
                  "timedOut": false,
                  "duration": 370,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllEdgeLocations();\nchai_1.expect(Array.isArray(response)).to.be.true;\nchai_1.expect(response[0]).to.haveOwnProperty(\"_id\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"name\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"tags\");\nchai_1.expect(response.length).to.be.greaterThan(0);",
                  "err": {},
                  "uuid": "cbdc69ae-a6c5-403a-b3e4-05f7b1a73b81",
                  "parentUUID": "1aad3845-01f2-4927-8fab-fbb8c61b6409",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets local edge location",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets local edge location",
                  "timedOut": false,
                  "duration": 375,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\nchai_1.expect(Array.isArray(response)).to.be.false;\nchai_1.expect(response).to.haveOwnProperty(\"_id\");\nchai_1.expect(response).to.haveOwnProperty(\"name\");\nchai_1.expect(response).to.haveOwnProperty(\"tags\");",
                  "err": {},
                  "uuid": "6a0bbfcd-62f7-43f7-84bf-58c8937ee75d",
                  "parentUUID": "1aad3845-01f2-4927-8fab-fbb8c61b6409",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cbdc69ae-a6c5-403a-b3e4-05f7b1a73b81",
                "6a0bbfcd-62f7-43f7-84bf-58c8937ee75d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 745,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7a914517-5026-42a6-950d-25d796ba2def",
              "title": "fabric.createFabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.createFabric \"after each\" hook",
                  "timedOut": false,
                  "duration": 510,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "805e8b1f-693a-4786-9dfa-a41ca101367f",
                  "parentUUID": "7a914517-5026-42a6-950d-25d796ba2def",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a fabric with the given name",
                  "fullTitle": "Manipulating fabrics fabric.createFabric creates a fabric with the given name",
                  "timedOut": false,
                  "duration": 923,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nconst info = await fabric.get();\nchai_1.expect(info.name).to.equal(name);",
                  "err": {},
                  "uuid": "3331d5fe-3408-491b-a2e1-cf1b2fbbc45e",
                  "parentUUID": "7a914517-5026-42a6-950d-25d796ba2def",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "adds the given users to the fabric",
                  "fullTitle": "Manipulating fabrics fabric.createFabric adds the given users to the fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "95a58802-89d1-48d3-b553-db02a097f170",
                  "parentUUID": "7a914517-5026-42a6-950d-25d796ba2def",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3331d5fe-3408-491b-a2e1-cf1b2fbbc45e"
              ],
              "failures": [],
              "pending": [
                "95a58802-89d1-48d3-b553-db02a097f170"
              ],
              "skipped": [],
              "duration": 923,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "98cf7aea-d688-4b52-a896-86f18157efb5",
              "title": "fabric.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetches the fabric description if the fabric exists",
                  "fullTitle": "Manipulating fabrics fabric.get fetches the fabric description if the fabric exists",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await fabric.get();\nchai_1.expect(info.name).to.equal(fabric.name);\nchai_1.expect(fabric.name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "ab2cfe47-575c-4ae0-9728-7872b846c051",
                  "parentUUID": "98cf7aea-d688-4b52-a896-86f18157efb5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fails if the fabric does not exist",
                  "fullTitle": "Manipulating fabrics fabric.get fails if the fabric does not exist",
                  "timedOut": false,
                  "duration": 411,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"__does_not_exist__\");\ntry {\n    await fabric.get();\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n    return;\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "58669d7c-76a7-4980-b29d-aa98ca8ab79e",
                  "parentUUID": "98cf7aea-d688-4b52-a896-86f18157efb5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ab2cfe47-575c-4ae0-9728-7872b846c051",
                "58669d7c-76a7-4980-b29d-aa98ca8ab79e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 717,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "19e441ed-c51b-44d0-91f8-ab5ca09e7cf5",
              "title": "fabric.listFabrics",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of all fabrics",
                  "fullTitle": "Manipulating fabrics fabric.listFabrics returns a list of all fabrics",
                  "timedOut": false,
                  "duration": 428,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics.indexOf(\"_system\")).to.be.greaterThan(-1);",
                  "err": {},
                  "uuid": "4f500306-126d-48b6-b83f-dcfdaedf1cbf",
                  "parentUUID": "19e441ed-c51b-44d0-91f8-ab5ca09e7cf5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4f500306-126d-48b6-b83f-dcfdaedf1cbf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 428,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e301657e-5ed0-4e50-ae8c-0930de44855f",
              "title": "fabric.listUserFabrics",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of fabrics accessible to the active user",
                  "fullTitle": "Manipulating fabrics fabric.listUserFabrics returns a list of fabrics accessible to the active user",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listUserFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics[0].name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "c6581ca9-139a-402f-9845-069295afaecc",
                  "parentUUID": "e301657e-5ed0-4e50-ae8c-0930de44855f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c6581ca9-139a-402f-9845-069295afaecc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 409,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "bff8ddb6-3bf5-4124-b5cc-c7b7f413f5c7",
              "title": "fabric.dropFabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric \"before each\" hook",
                  "timedOut": false,
                  "duration": 515,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});",
                  "err": {},
                  "uuid": "3f22752d-5d5e-48f3-8523-d3ee91ae8a91",
                  "parentUUID": "bff8ddb6-3bf5-4124-b5cc-c7b7f413f5c7",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given fabric from the server",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric deletes the given fabric from the server",
                  "timedOut": false,
                  "duration": 577,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.dropFabric(name);\nlet temp = new jsC8_1.Fabric().useFabric(name);\ntry {\n    await temp.get();\n}\ncatch (e) {\n    return;\n}\nfinally {\n    temp.close();\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "558ad462-2212-456e-911f-2e8c812fc13b",
                  "parentUUID": "bff8ddb6-3bf5-4124-b5cc-c7b7f413f5c7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "558ad462-2212-456e-911f-2e8c812fc13b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 577,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "384a6509-effe-438f-9ed2-092a8cf91b19",
              "title": "fabric.truncate",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"before each\" hook",
                  "timedOut": false,
                  "duration": 2924,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create();\n        await collection.save({ _key: \"example\" });\n    }),\n    ...systemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create({ isSystem: true });\n        await collection.save({ _key: \"example\" });\n    })\n]);",
                  "err": {},
                  "uuid": "1e4751ff-0db5-42bd-9cb1-e37fe1421b04",
                  "parentUUID": "384a6509-effe-438f-9ed2-092a8cf91b19",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"after each\" hook",
                  "timedOut": false,
                  "duration": 509,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "90c8e196-6aba-4182-9c26-3ee50baea9b8",
                  "parentUUID": "384a6509-effe-438f-9ed2-092a8cf91b19",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "removes all documents from all non-system collections in the fabric",
                  "fullTitle": "Manipulating fabrics fabric.truncate removes all documents from all non-system collections in the fabric",
                  "timedOut": false,
                  "duration": 6193,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.truncate();\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    }),\n    ...systemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    })\n]);",
                  "err": {},
                  "uuid": "869b20e8-e362-4473-97d1-d420a6032bcb",
                  "parentUUID": "384a6509-effe-438f-9ed2-092a8cf91b19",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally truncates system collections if explicitly passed false",
                  "fullTitle": "Manipulating fabrics fabric.truncate additionally truncates system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "7a69b14c-f80d-46e7-ad46-a282bacd7de3",
                  "parentUUID": "384a6509-effe-438f-9ed2-092a8cf91b19",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "869b20e8-e362-4473-97d1-d420a6032bcb"
              ],
              "failures": [],
              "pending": [
                "7a69b14c-f80d-46e7-ad46-a282bacd7de3"
              ],
              "skipped": [],
              "duration": 6193,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "210833a0-b4d6-48d9-a261-41f060f6b690",
              "title": "fabric.validateQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate correct query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate correct query",
                  "timedOut": false,
                  "duration": 394,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.validateQuery(\"for doc in docs return doc\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "fbdbdb44-aeb7-40e7-b0e8-754092134a34",
                  "parentUUID": "210833a0-b4d6-48d9-a261-41f060f6b690",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate incorrect query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate incorrect query",
                  "timedOut": false,
                  "duration": 312,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    const response = await fabric.validateQuery(\"forrrr doc in docs return doc\");\n    chai_1.expect(response.error).to.be.true;\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n}",
                  "err": {},
                  "uuid": "fcc4d618-e3a4-443d-a287-0b3073cfae55",
                  "parentUUID": "210833a0-b4d6-48d9-a261-41f060f6b690",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fbdbdb44-aeb7-40e7-b0e8-754092134a34",
                "fcc4d618-e3a4-443d-a287-0b3073cfae55"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 706,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6795e7e3-ae3d-4589-8f81-ef95785238c0",
              "title": "fabric.explainQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should explain query",
                  "fullTitle": "Manipulating fabrics fabric.explainQuery should explain query",
                  "timedOut": false,
                  "duration": 307,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryObject = {\n    query: `for doc in ${collectionName} return doc`,\n    bindVars: {}\n};\nconst response = await fabric.explainQuery(queryObject);\nchai_1.expect(response.error).to.be.false;",
                  "err": {
                    "message": "C8Error: expecting POST /_api/query",
                    "estack": "C8Error: expecting POST /_api/query\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "cd3176c1-2149-4725-8bf3-756ea73cf68f",
                  "parentUUID": "6795e7e3-ae3d-4589-8f81-ef95785238c0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "cd3176c1-2149-4725-8bf3-756ea73cf68f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "5a07eeb9-dc8e-406d-895d-e2408ddaa7a9",
              "title": "fabric.getCurrentQueries",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get currently running queries",
                  "fullTitle": "Manipulating fabrics fabric.getCurrentQueries should get currently running queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "8644f450-6fe3-471d-97fb-92acfbb2d751",
                  "parentUUID": "5a07eeb9-dc8e-406d-895d-e2408ddaa7a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "8644f450-6fe3-471d-97fb-92acfbb2d751"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4146ef92-5a35-4b26-9908-eb01e045f6ca",
              "title": "fabric.clearSlowQueries",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear slow queries",
                  "fullTitle": "Manipulating fabrics fabric.clearSlowQueries should clear slow queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "a463a601-78d5-4798-9faa-bdfa8632b405",
                  "parentUUID": "4146ef92-5a35-4b26-9908-eb01e045f6ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "a463a601-78d5-4798-9faa-bdfa8632b405"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0d5c1c19-a7fd-48ec-94c5-dd7ff5deb8f4",
              "title": "fabric.terminateRunningQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should terminate running query",
                  "fullTitle": "Manipulating fabrics fabric.terminateRunningQuery should terminate running query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "5fce2680-0f73-4d6b-b0cb-5cc59c3d732b",
                  "parentUUID": "0d5c1c19-a7fd-48ec-94c5-dd7ff5deb8f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "5fce2680-0f73-4d6b-b0cb-5cc59c3d732b"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "3b0308fa-d14c-4483-b968-1b649fa97872",
          "title": "Accessing collections",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
          "file": "/lib/async/test/02-accessing-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing collections \"before all\" hook",
              "timedOut": false,
              "duration": 3072,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\nconst collections = await fabric.listCollections(false);\nbuiltinSystemCollections = collections.map((c) => c.name);",
              "err": {},
              "uuid": "0a6c5a24-fd59-4f11-9f21-9c3c91db4ce5",
              "parentUUID": "3b0308fa-d14c-4483-b968-1b649fa97872",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing collections \"after all\" hook",
              "timedOut": false,
              "duration": 511,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "60c084ae-02ae-4c71-8bf0-ac439a62dec7",
              "parentUUID": "3b0308fa-d14c-4483-b968-1b649fa97872",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "df03161e-e70b-499a-998e-3502139ce02c",
              "title": "fabric.collection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a DocumentCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.collection returns a DocumentCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = fabric.collection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.DocumentCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "3d4d26c3-991b-4f66-a28d-83c49e4ace26",
                  "parentUUID": "df03161e-e70b-499a-998e-3502139ce02c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d4d26c3-991b-4f66-a28d-83c49e4ace26"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "421b6f45-b7af-442c-8864-54dd6d9c04f3",
              "title": "fabric.edgeCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an EdgeCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.edgeCollection returns an EdgeCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"tomato\";\nlet collection = fabric.edgeCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.EdgeCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "4edb6167-7eed-4579-ab7a-7db1f9b2abc3",
                  "parentUUID": "421b6f45-b7af-442c-8864-54dd6d9c04f3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4edb6167-7eed-4579-ab7a-7db1f9b2abc3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "675e0d52-57c2-4518-b1f0-7087eb9a2345",
              "title": "fabric.listCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"before all\" hook",
                  "timedOut": false,
                  "duration": 1222,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).create())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).create({ isSystem: true })\n    // )\n]);",
                  "err": {},
                  "uuid": "48fc307d-789a-4a79-90ad-c0907a279e7e",
                  "parentUUID": "675e0d52-57c2-4518-b1f0-7087eb9a2345",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"after all\" hook",
                  "timedOut": false,
                  "duration": 712,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).drop())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).drop({ isSystem: true })\n    // )\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "9e2caecf-53e0-446b-b79c-15c67c4c698d",
                  "parentUUID": "675e0d52-57c2-4518-b1f0-7087eb9a2345",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all non-system collections",
                  "fullTitle": "Accessing collections fabric.listCollections fetches information about all non-system collections",
                  "timedOut": false,
                  "duration": 411,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections()\n    .then(collections => {\n    chai_1.expect(collections.length).to.equal(nonSystemCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(nonSystemCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ed20fb65-de3d-4f2f-be1a-b73a69ab4a72",
                  "parentUUID": "675e0d52-57c2-4518-b1f0-7087eb9a2345",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.listCollections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections(false)\n    .then(collections => {\n    let allCollectionNames = nonSystemCollectionNames\n        // .concat(systemCollectionNames)\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(collections.length).to.be.at.least(allCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(allCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a0c541e9-e9e1-4fb1-8ec0-54302ae4a024",
                  "parentUUID": "675e0d52-57c2-4518-b1f0-7087eb9a2345",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed20fb65-de3d-4f2f-be1a-b73a69ab4a72",
                "a0c541e9-e9e1-4fb1-8ec0-54302ae4a024"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 720,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "d8cf5722-54ad-412b-ae39-4ba21cefacfc",
              "title": "fabric.collections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"before all\" hook",
                  "timedOut": false,
                  "duration": 1213,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "85dd4c2a-83be-405c-bed6-1ffbbc2ff52c",
                  "parentUUID": "d8cf5722-54ad-412b-ae39-4ba21cefacfc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"after all\" hook",
                  "timedOut": false,
                  "duration": 1229,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).drop()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).drop())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7b2e95ba-fbf9-4343-ac5b-a7f54ec85cc5",
                  "parentUUID": "d8cf5722-54ad-412b-ae39-4ba21cefacfc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates DocumentCollection and EdgeCollection instances",
                  "fullTitle": "Accessing collections fabric.collections creates DocumentCollection and EdgeCollection instances",
                  "timedOut": false,
                  "duration": 425,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections()\n    .then(collections => {\n    let documentCollections = collections\n        .filter((c) => c instanceof collection_1.DocumentCollection)\n        .sort();\n    let edgeCollections = collections\n        .filter((c) => c instanceof collection_1.EdgeCollection)\n        .sort();\n    chai_1.expect(documentCollections.length).to.equal(documentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(documentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.equal(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8e43fb70-f603-4297-807f-b52db83cdb12",
                  "parentUUID": "d8cf5722-54ad-412b-ae39-4ba21cefacfc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.collections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections(false)\n    .then(collections => {\n    let documentCollections = collections.filter((c) => c instanceof collection_1.DocumentCollection);\n    let edgeCollections = collections.filter((c) => c instanceof collection_1.EdgeCollection);\n    let allDocumentCollectionNames = documentCollectionNames\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(documentCollections.length).to.be.at.least(allDocumentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(allDocumentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.be.at.least(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f3331865-be49-4b19-842b-204963cadb25",
                  "parentUUID": "d8cf5722-54ad-412b-ae39-4ba21cefacfc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8e43fb70-f603-4297-807f-b52db83cdb12",
                "f3331865-be49-4b19-842b-204963cadb25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 834,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "df8618d7-f566-40f1-ad28-94d95bf8190b",
          "title": "Accessing graphs",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
          "file": "/lib/async/test/03-accessing-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing graphs \"before all\" hook",
              "timedOut": false,
              "duration": 2553,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "b4785160-95b4-4e08-a25d-2b9764f49bdc",
              "parentUUID": "df8618d7-f566-40f1-ad28-94d95bf8190b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing graphs \"after all\" hook",
              "timedOut": false,
              "duration": 397,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "fa154d49-9bd6-47e2-830b-a4d19377a0f2",
              "parentUUID": "df8618d7-f566-40f1-ad28-94d95bf8190b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "14bb89f0-f22a-4a58-9c85-8aaa8c4e7deb",
              "title": "fabric.graph",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Graph instance",
                  "fullTitle": "Accessing graphs fabric.graph returns a Graph instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet graph = fabric.graph(name);\nchai_1.expect(graph).to.be.an.instanceof(graph_1.Graph);\nchai_1.expect(graph)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "64a6cb28-76a8-4793-b0bf-eb083e1675a0",
                  "parentUUID": "14bb89f0-f22a-4a58-9c85-8aaa8c4e7deb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64a6cb28-76a8-4793-b0bf-eb083e1675a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "9dedba69-9de2-46d4-a915-4be1c1d90c53",
              "title": "fabric.listGraphs",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 1850,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        })),\n        isSmart: true,\n        options: {\n            numberOfShards: 1,\n            smartGraphAttribute: \"test\"\n        },\n        orphanCollections: []\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "46a96e6f-cde2-4823-a2bf-168f1ea5685d",
                  "parentUUID": "9dedba69-9de2-46d4-a915-4be1c1d90c53",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 1423,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "1211be99-24b4-4d99-8628-882729da1056",
                  "parentUUID": "9dedba69-9de2-46d4-a915-4be1c1d90c53",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all graphs",
                  "fullTitle": "Accessing graphs fabric.listGraphs fetches information about all graphs",
                  "timedOut": false,
                  "duration": 418,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listGraphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g._key).sort()).to.eql(graphNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "bd19f4e2-6702-4d98-a9f3-9779fc6a9f71",
                  "parentUUID": "9dedba69-9de2-46d4-a915-4be1c1d90c53",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bd19f4e2-6702-4d98-a9f3-9779fc6a9f71"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 418,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "1fe2af52-5d12-4cb8-aae8-04aa5bb3fb24",
              "title": "fabric.graphs",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 1329,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        }))\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "0256f9ee-103c-441e-9433-e5a0b15c2c32",
                  "parentUUID": "1fe2af52-5d12-4cb8-aae8-04aa5bb3fb24",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 1429,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "ad1e1985-50a0-4497-95cd-b343bccad44b",
                  "parentUUID": "1fe2af52-5d12-4cb8-aae8-04aa5bb3fb24",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates Graph instances",
                  "fullTitle": "Accessing graphs fabric.graphs creates Graph instances",
                  "timedOut": false,
                  "duration": 413,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .graphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g.name).sort()).to.eql(graphNames);\n    graphs.forEach((graph) => chai_1.expect(graph).to.be.an.instanceof(graph_1.Graph));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "159d7d5d-1a9e-46e2-9459-90a97eff0e05",
                  "parentUUID": "1fe2af52-5d12-4cb8-aae8-04aa5bb3fb24",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "159d7d5d-1a9e-46e2-9459-90a97eff0e05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 413,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "080ce7d9-f983-4b4e-938e-34d3eabb1651",
          "title": "Transactions",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/04-transactions.js",
          "file": "/lib/async/test/04-transactions.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Transactions \"before all\" hook",
              "timedOut": false,
              "duration": 1513,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "88bde966-02b1-46e1-8001-a5e8b8622f4a",
              "parentUUID": "080ce7d9-f983-4b4e-938e-34d3eabb1651",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Transactions \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "19aeac41-5e58-404d-9539-28864d2e3931",
              "parentUUID": "080ce7d9-f983-4b4e-938e-34d3eabb1651",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3a3aef7f-4189-4912-b9ae-f5ad83d3636f",
              "title": "fabric.transaction",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/04-transactions.js",
              "file": "/lib/async/test/04-transactions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a transaction and return the result",
                  "fullTitle": "Transactions fabric.transaction should execute a transaction and return the result",
                  "timedOut": false,
                  "duration": 370,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await fabric.transaction([], \"function (params) {return params;}\", \"test\");\nchai_1.expect(result).to.equal(\"test\");",
                  "err": {},
                  "uuid": "79b18991-fa05-43a9-bfce-3a460ddf629e",
                  "parentUUID": "3a3aef7f-4189-4912-b9ae-f5ad83d3636f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "79b18991-fa05-43a9-bfce-3a460ddf629e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 370,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "216a1f8a-8414-4d93-bb03-6b3ad8f81aad",
          "title": "C8QL queries",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/05-c8ql-queries.js",
          "file": "/lib/async/test/05-c8ql-queries.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL queries \"before all\" hook",
              "timedOut": false,
              "duration": 2641,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "26d76dfb-98ab-4110-8f99-0c11cd1e9d6f",
              "parentUUID": "216a1f8a-8414-4d93-bb03-6b3ad8f81aad",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL queries \"after all\" hook",
              "timedOut": false,
              "duration": 509,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "9fa287d9-99c9-41bc-a3aa-4c6e55e7fdfc",
              "parentUUID": "216a1f8a-8414-4d93-bb03-6b3ad8f81aad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
              "title": "fabric.query",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 403,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\")\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "9f4f33f9-3967-4629-a7c8-4ce1ed14c01c",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error",
                  "timedOut": false,
                  "duration": 405,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR i IN no RETURN i\")\n    .then(() => {\n    chai_1.expect.fail();\n    done();\n})\n    .catch(err => {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n    done();\n});",
                  "err": {},
                  "uuid": "2d4f21fb-065c-482f-adbf-4828135ea8e8",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error (async await)",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error (async await)",
                  "timedOut": false,
                  "duration": 374,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.query(\"FOR i IN no RETURN i\");\n    chai_1.expect.fail();\n}\ncatch (err) {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n}",
                  "err": {},
                  "uuid": "61c1bf93-7326-4c18-97c8-c1934f1de737",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 444,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "99edba33-c96c-4069-adf5-6d851bce47ed",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 411,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", undefined, {\n    batchSize: 2,\n    count: true\n})\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "149e459d-83ba-4e91-95b4-88087496f12e",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports AQB queries",
                  "fullTitle": "C8QL queries fabric.query supports AQB queries",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ toC8QL: () => \"RETURN 42\" })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(42);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a80fba32-2eec-4a3d-a3d4-1906cfe34887",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports query objects",
                  "fullTitle": "C8QL queries fabric.query supports query objects",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN 1337\", bindVars: {} })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(1337);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "573f37ce-1fa7-4b28-b2c9-bf02bbfdf6ce",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries",
                  "fullTitle": "C8QL queries fabric.query supports compact queries",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN @potato\", bindVars: { potato: \"tomato\" } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(\"tomato\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "47420515-4a83-41a8-80c4-45cadcb89319",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 510,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ed89be41-bd00-426d-a6d1-251211a95eba",
                  "parentUUID": "2cbd61e5-9d1a-440c-8147-af416a83e1ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9f4f33f9-3967-4629-a7c8-4ce1ed14c01c",
                "2d4f21fb-065c-482f-adbf-4828135ea8e8",
                "61c1bf93-7326-4c18-97c8-c1934f1de737",
                "99edba33-c96c-4069-adf5-6d851bce47ed",
                "149e459d-83ba-4e91-95b4-88087496f12e",
                "a80fba32-2eec-4a3d-a3d4-1906cfe34887",
                "573f37ce-1fa7-4b28-b2c9-bf02bbfdf6ce",
                "47420515-4a83-41a8-80c4-45cadcb89319",
                "ed89be41-bd00-426d-a6d1-251211a95eba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3772,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "60075beb-c6ed-478d-b056-7348cc35c033",
              "title": "c8ql",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "correctly handles simple parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles simple parameters",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let values = [\n    0,\n    42,\n    -1,\n    null,\n    undefined,\n    true,\n    false,\n    \"\",\n    \"string\",\n    [1, 2, 3],\n    { a: \"b\" }\n];\nlet query = jsC8_1.c8ql `\n        A ${values[0]} B ${values[1]} C ${values[2]} D ${values[3]} E ${values[4]} F ${values[5]}\n        G ${values[6]} H ${values[7]} I ${values[8]} J ${values[9]} K ${values[10]} EOF\n      `;\nchai_1.expect(query.query).to.equal(`\n        A @value0 B @value1 C @value2 D @value3 E @value4 F @value5\n        G @value6 H @value7 I @value8 J @value9 K @value10 EOF\n      `);\nlet bindVarNames = Object.keys(query.bindVars).sort((a, b) => (+a.substr(5) > +b.substr(5) ? 1 : -1));\nchai_1.expect(bindVarNames).to.eql([\n    \"value0\",\n    \"value1\",\n    \"value2\",\n    \"value3\",\n    \"value4\",\n    \"value5\",\n    \"value6\",\n    \"value7\",\n    \"value8\",\n    \"value9\",\n    \"value10\"\n]);\nchai_1.expect(bindVarNames.map(k => query.bindVars[k])).to.eql(values);",
                  "err": {},
                  "uuid": "3b9bca88-0645-449d-a8cc-73f9f0e922e7",
                  "parentUUID": "60075beb-c6ed-478d-b056-7348cc35c033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles jsC8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles jsC8 collection parameters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(\"potato\");\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"potato\");",
                  "err": {},
                  "uuid": "52a91853-178e-40c6-9490-89374b0c48e0",
                  "parentUUID": "60075beb-c6ed-478d-b056-7348cc35c033",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles C8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles C8 collection parameters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "class C8Collection {\n    constructor() {\n        this.isC8Collection = true;\n        this.name = \"tomato\";\n    }\n}\nlet collection = new C8Collection();\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"tomato\");",
                  "err": {},
                  "uuid": "921f2ed4-3f2b-44e3-b96e-0166362ea4aa",
                  "parentUUID": "60075beb-c6ed-478d-b056-7348cc35c033",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b9bca88-0645-449d-a8cc-73f9f0e922e7",
                "52a91853-178e-40c6-9490-89374b0c48e0",
                "921f2ed4-3f2b-44e3-b96e-0166362ea4aa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "cba31348-c262-4f5a-9fbe-8b3918665db5",
          "title": "Route API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
          "file": "/lib/async/test/07-routes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Route API \"before all\" hook",
              "timedOut": false,
              "duration": 2149,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\ncollection = fabric.collection(`c${Date.now()}`);\nawait collection.create();",
              "err": {},
              "uuid": "2a5c32b7-08e0-42f4-8654-111b8df1da19",
              "parentUUID": "cba31348-c262-4f5a-9fbe-8b3918665db5",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Route API \"before each\" hook",
              "timedOut": false,
              "duration": 296,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.truncate();",
              "err": {},
              "uuid": "ddb688e3-64f7-4c11-8cdb-ae66ee971722",
              "parentUUID": "cba31348-c262-4f5a-9fbe-8b3918665db5",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Route API \"after all\" hook",
              "timedOut": false,
              "duration": 405,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "e87188a4-cee3-458a-a584-07933428db6c",
              "parentUUID": "cba31348-c262-4f5a-9fbe-8b3918665db5",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "6964b9b9-5e3f-4fbf-9cfb-8c19b3ed5a59",
              "title": "route.route",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should concat path",
                  "fullTitle": "Route API route.route should concat path",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const route = fabric.route(\"/api\").route(\"/version\");\nchai_1.expect(route).to.have.property(\"_path\", \"/api/version\");",
                  "err": {},
                  "uuid": "fc4f3280-d683-458a-bdd6-81e968c92235",
                  "parentUUID": "6964b9b9-5e3f-4fbf-9cfb-8c19b3ed5a59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fc4f3280-d683-458a-bdd6-81e968c92235"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a6ca89a9-d80f-4b91-a12b-9289397ff5bc",
              "title": "route.post",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.post should passes body",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${collection.name}`)\n    .post({ foo: \"bar\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "99d3c10f-163d-4fd6-a348-0feb25f775c3",
                  "parentUUID": "a6ca89a9-d80f-4b91-a12b-9289397ff5bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99d3c10f-163d-4fd6-a348-0feb25f775c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 308,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "24a986a1-c1ba-4bc4-ae42-b76974253dbc",
              "title": "route.put",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.put \"before each\" hook",
                  "timedOut": false,
                  "duration": 307,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "ba5936a2-ceda-4181-a466-0bd2a9351df5",
                  "parentUUID": "24a986a1-c1ba-4bc4-ae42-b76974253dbc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.put should passes body",
                  "timedOut": false,
                  "duration": 308,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .put({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b295120d-d6eb-44dc-9ff8-5407040ae8d5",
                  "parentUUID": "24a986a1-c1ba-4bc4-ae42-b76974253dbc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b295120d-d6eb-44dc-9ff8-5407040ae8d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 308,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ed2748bb-b572-498f-b400-5779f9371b8f",
              "title": "route.patch",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.patch \"before each\" hook",
                  "timedOut": false,
                  "duration": 308,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "611b1d98-ebc2-46f4-b69a-20ae86913654",
                  "parentUUID": "ed2748bb-b572-498f-b400-5779f9371b8f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.patch should passes body",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .patch({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "477242ab-e42a-4175-afd9-d2543ae4e0f8",
                  "parentUUID": "ed2748bb-b572-498f-b400-5779f9371b8f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "477242ab-e42a-4175-afd9-d2543ae4e0f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 309,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c1e23384-fae6-46e6-b68f-eeda4dacbb30",
              "title": "route.delete",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.delete \"before each\" hook",
                  "timedOut": false,
                  "duration": 307,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8508aefe-0b21-47e3-b7d0-fbd9e0dbbcc4",
                  "parentUUID": "c1e23384-fae6-46e6-b68f-eeda4dacbb30",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.delete should be executed using the route path",
                  "timedOut": false,
                  "duration": 319,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .delete()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "523513bf-05d3-4793-83d0-ed1a7862757f",
                  "parentUUID": "c1e23384-fae6-46e6-b68f-eeda4dacbb30",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "523513bf-05d3-4793-83d0-ed1a7862757f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 319,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0c3cbdb6-0341-460b-8146-2868f875a769",
              "title": "route.head",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.head \"before each\" hook",
                  "timedOut": false,
                  "duration": 258,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "24c046b4-b6c3-4aed-934d-be452fe88ca8",
                  "parentUUID": "0c3cbdb6-0341-460b-8146-2868f875a769",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.head should be executed using the route path",
                  "timedOut": false,
                  "duration": 255,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .head()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"statusCode\", 200);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "563997aa-7859-4624-a564-a95d46154c04",
                  "parentUUID": "0c3cbdb6-0341-460b-8146-2868f875a769",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "563997aa-7859-4624-a564-a95d46154c04"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 255,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "6da2303f-3936-43ba-bd3e-55a5c17ec689",
          "title": "Cursor API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
          "file": "/lib/async/test/08-cursors.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Cursor API \"before all\" hook",
              "timedOut": false,
              "duration": 1635,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "216dc811-bae3-4b60-bdaa-907f21679157",
              "parentUUID": "6da2303f-3936-43ba-bd3e-55a5c17ec689",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Cursor API \"before each\" hook",
              "timedOut": false,
              "duration": 363,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cursor = await fabric.query(c8qlQuery);",
              "err": {},
              "uuid": "7c951196-bfdc-4b9c-a7db-a1a67aa2ed6c",
              "parentUUID": "6da2303f-3936-43ba-bd3e-55a5c17ec689",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Cursor API \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "4728b99f-0f21-4d2d-b8c9-472c3bb8cde3",
              "parentUUID": "6da2303f-3936-43ba-bd3e-55a5c17ec689",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "232705b0-452a-4ca0-acc3-125235968bf1",
              "title": "cursor.all",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an Array of all results",
                  "fullTitle": "Cursor API cursor.all returns an Array of all results",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(vals => {\n    chai_1.expect(vals).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "91d79d51-a94a-4701-86bd-38ad0edd5e85",
                  "parentUUID": "232705b0-452a-4ca0-acc3-125235968bf1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "91d79d51-a94a-4701-86bd-38ad0edd5e85"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8c0feed9-bde4-45fa-85b3-68ce6189da6c",
              "title": "cursor.next",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the next result of the Cursor",
                  "fullTitle": "Cursor API cursor.next returns the next result of the Cursor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.equal(0);\n    return cursor.next();\n})\n    .then(val => {\n    chai_1.expect(val).to.equal(1);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "24233592-4431-4adf-8cfb-3da7a0f17386",
                  "parentUUID": "8c0feed9-bde4-45fa-85b3-68ce6189da6c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "24233592-4431-4adf-8cfb-3da7a0f17386"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
              "title": "cursor.hasNext",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the Cursor has more results",
                  "fullTitle": "Cursor API cursor.hasNext returns true if the Cursor has more results",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(cursor.hasNext()).to.equal(true);\ncursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.be.a(\"number\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "27221fd5-9f0f-4226-a35d-4d959f75ecb2",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the Cursor is empty",
                  "fullTitle": "Cursor API cursor.hasNext returns false if the Cursor is empty",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(() => {\n    chai_1.expect(cursor.hasNext()).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "239c7280-e211-44b5-873e-d515bfa3dfe3",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true after first batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns true after first batch is consumed",
                  "timedOut": false,
                  "duration": 415,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(c8qlQuery, {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor.next();\n    chai_1.expect(cursor._result.length).to.equal(0);\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8591475c-cb18-4039-9c4c-95289f953581",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last batch is consumed",
                  "timedOut": false,
                  "duration": 822,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(\"FOR i In 0..1 RETURN i\", {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "74a75766-916c-4f21-8859-35db24f9ada8",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(\"FOR i In 0..1 RETURN i\")\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(2);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(1);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e59dae20-87f2-4390-9c9e-9896940c7b10",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 404 after timeout",
                  "fullTitle": "Cursor API cursor.hasNext returns 404 after timeout",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "97de8db3-080a-431c-a8c4-8fbfb10a3944",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed (with large amount of results)",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed (with large amount of results)",
                  "timedOut": true,
                  "duration": 20001,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const EXPECTED_LENGTH = 100000;\nconst loadMore = function (cursor, totalLength) {\n    cursor\n        .next()\n        .then(() => {\n        totalLength++;\n        chai_1.expect(cursor.hasNext()).to.equal(totalLength !== EXPECTED_LENGTH);\n        if (cursor.hasNext()) {\n            loadMore(cursor, totalLength);\n        }\n        else {\n            done();\n        }\n    })\n        .catch(done);\n};\nfabric.query(`FOR i In 1..${EXPECTED_LENGTH} RETURN i`)\n    .then(cursor => loadMore(cursor, 0))\n    .catch(done);",
                  "err": {
                    "message": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js)",
                    "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js)",
                    "diff": null
                  },
                  "uuid": "f1220385-a9a0-46ce-82da-e43cf5301293",
                  "parentUUID": "2d9d4fe1-c050-4f7f-ac80-78bf105f43f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27221fd5-9f0f-4226-a35d-4d959f75ecb2",
                "239c7280-e211-44b5-873e-d515bfa3dfe3",
                "8591475c-cb18-4039-9c4c-95289f953581",
                "74a75766-916c-4f21-8859-35db24f9ada8",
                "e59dae20-87f2-4390-9c9e-9896940c7b10"
              ],
              "failures": [
                "f1220385-a9a0-46ce-82da-e43cf5301293"
              ],
              "pending": [
                "97de8db3-080a-431c-a8c4-8fbfb10a3944"
              ],
              "skipped": [],
              "duration": 21650,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "1755c084-75b4-4be1-99e6-ab332a456ac0",
              "title": "cursor.each",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes the callback for each value",
                  "fullTitle": "Cursor API cursor.each invokes the callback for each value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each(value => {\n    results.push(value);\n})\n    .then(() => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a0bc21a3-b746-4748-8d64-b0ac42d3d7c9",
                  "parentUUID": "1755c084-75b4-4be1-99e6-ab332a456ac0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "aborts if the callback returns false",
                  "fullTitle": "Cursor API cursor.each aborts if the callback returns false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each((value) => {\n    results.push(value);\n    if (value === 5)\n        return false;\n    return;\n})\n    .then(() => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f0d38d97-464d-400c-8e1c-f0ee12cf3e5b",
                  "parentUUID": "1755c084-75b4-4be1-99e6-ab332a456ac0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a0bc21a3-b746-4748-8d64-b0ac42d3d7c9",
                "f0d38d97-464d-400c-8e1c-f0ee12cf3e5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "9fc93fb2-71a9-4c5b-938e-28db425bf318",
              "title": "cursor.every",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the callback returns a truthy value for every item",
                  "fullTitle": "Cursor API cursor.every returns true if the callback returns a truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    if (results.indexOf(value) !== -1)\n        return false;\n    results.push(value);\n    return true;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "64f36e28-c851-4186-aad6-40468ac3e46a",
                  "parentUUID": "9fc93fb2-71a9-4c5b-938e-28db425bf318",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the callback returns a non-truthy value for any item",
                  "fullTitle": "Cursor API cursor.every returns false if the callback returns a non-truthy value for any item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    results.push(value);\n    return value < 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e7cb9410-3e63-441a-990d-815e85b8113d",
                  "parentUUID": "9fc93fb2-71a9-4c5b-938e-28db425bf318",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64f36e28-c851-4186-aad6-40468ac3e46a",
                "e7cb9410-3e63-441a-990d-815e85b8113d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "147d6275-d4dc-4c47-a8c3-453eb98b7a5e",
              "title": "cursor.some",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns false if the callback returns a non-truthy value for every item",
                  "fullTitle": "Cursor API cursor.some returns false if the callback returns a non-truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    if (results.indexOf(value) !== -1)\n        return true;\n    results.push(value);\n    return false;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "05dea7c3-a1d1-4008-8c5b-da68ca1234c6",
                  "parentUUID": "147d6275-d4dc-4c47-a8c3-453eb98b7a5e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if the callback returns a truthy value for any item",
                  "fullTitle": "Cursor API cursor.some returns true if the callback returns a truthy value for any item",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    results.push(value);\n    return value >= 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "9f02a694-9fb9-4349-ba51-c226a830dce2",
                  "parentUUID": "147d6275-d4dc-4c47-a8c3-453eb98b7a5e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "05dea7c3-a1d1-4008-8c5b-da68ca1234c6",
                "9f02a694-9fb9-4349-ba51-c226a830dce2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "e48cf8ba-7bd4-4b5a-ba0a-dcdcde1b3cf6",
              "title": "cursor.map",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "maps all result values over the callback",
                  "fullTitle": "Cursor API cursor.map maps all result values over the callback",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .map(value => value * 2)\n    .then(results => {\n    chai_1.expect(results).to.eql(c8qlResult.map(value => value * 2));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8da48e67-da88-4df1-91a7-b923ab9f3ebe",
                  "parentUUID": "e48cf8ba-7bd4-4b5a-ba0a-dcdcde1b3cf6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8da48e67-da88-4df1-91a7-b923ab9f3ebe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "0826d669-2074-4b1f-b9ae-abe2a770eef6",
              "title": "cursor.reduce",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "reduces the result values with the callback",
                  "fullTitle": "Cursor API cursor.reduce reduces the result values with the callback",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .reduce((a, b) => a + b)\n    .then(result => {\n    chai_1.expect(result).to.eql(c8qlResult.reduce((a, b) => a + b));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "bb9f8499-0566-4d5b-a5db-998f34a2f779",
                  "parentUUID": "0826d669-2074-4b1f-b9ae-abe2a770eef6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb9f8499-0566-4d5b-a5db-998f34a2f779"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "23b9eeb1-5d4d-4781-bcda-69cd787f86c4",
              "title": "cursor.delete",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the cursor",
                  "fullTitle": "Cursor API cursor.delete should delete the cursor",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "eb6930d6-984d-423f-b468-044ae58372cf",
                  "parentUUID": "23b9eeb1-5d4d-4781-bcda-69cd787f86c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "eb6930d6-984d-423f-b468-044ae58372cf"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "cb813a19-c7e1-449c-9d73-dd0b80c4bde0",
          "title": "Collection metadata",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
          "file": "/lib/async/test/09-collection-metadata.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Collection metadata \"before all\" hook",
              "timedOut": false,
              "duration": 3055,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "8b1054d2-e345-4ba3-9c20-ee04cbdb50b2",
              "parentUUID": "cb813a19-c7e1-449c-9d73-dd0b80c4bde0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Collection metadata \"after all\" hook",
              "timedOut": false,
              "duration": 563,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(dbName);",
              "err": {},
              "uuid": "f0b93e27-6509-4598-968b-e577ed9863b3",
              "parentUUID": "cb813a19-c7e1-449c-9d73-dd0b80c4bde0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9699b8f3-3d2f-4d30-9c04-a3df71c341aa",
              "title": "collection.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.get should return information about a collection",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await collection.get();\nchai_1.expect(info).to.have.property(\"name\", collectionName);\nchai_1.expect(info).to.have.property(\"isSystem\", false);\nchai_1.expect(info).to.have.property(\"status\", 3); // loaded\nchai_1.expect(info).to.have.property(\"type\", 2); // document collection",
                  "err": {},
                  "uuid": "9c60b42a-b620-4df9-90ec-7650a8eaa40e",
                  "parentUUID": "9699b8f3-3d2f-4d30-9c04-a3df71c341aa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw if collection does not exist",
                  "fullTitle": "Collection metadata collection.get should throw if collection does not exist",
                  "timedOut": false,
                  "duration": 511,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.collection(\"no\").get();\n}\ncatch (e) {\n    chai_1.expect(e).to.have.property(\"errorNum\", collection_1.COLLECTION_NOT_FOUND);\n    return;\n}\nchai_1.expect.fail(\"should throw\");",
                  "err": {},
                  "uuid": "73e3608f-cd1a-417e-8a2c-d3f9322b25a4",
                  "parentUUID": "9699b8f3-3d2f-4d30-9c04-a3df71c341aa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c60b42a-b620-4df9-90ec-7650a8eaa40e",
                "73e3608f-cd1a-417e-8a2c-d3f9322b25a4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 920,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e1dc05ae-5981-4147-861f-c4897f60336a",
              "title": "collection.exists",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if collection exists",
                  "fullTitle": "Collection metadata collection.exists should return true if collection exists",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.exists();\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "84393284-49df-4193-bf0f-21620b7ee4ab",
                  "parentUUID": "e1dc05ae-5981-4147-861f-c4897f60336a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if collection does not exist",
                  "fullTitle": "Collection metadata collection.exists should return false if collection does not exist",
                  "timedOut": false,
                  "duration": 411,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric.collection(\"no\").exists();\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "dcdfaefb-b20d-44e1-b6f4-05bec7f16d99",
                  "parentUUID": "e1dc05ae-5981-4147-861f-c4897f60336a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "84393284-49df-4193-bf0f-21620b7ee4ab",
                "dcdfaefb-b20d-44e1-b6f4-05bec7f16d99"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 818,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "221fcc88-753a-44ea-84b1-6d64a0f48d50",
              "title": "collection.properties",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return properties of a collection",
                  "fullTitle": "Collection metadata collection.properties should return properties of a collection",
                  "timedOut": false,
                  "duration": 409,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .properties()\n    .then(properties => {\n    chai_1.expect(properties).to.have.property(\"name\", collectionName);\n    chai_1.expect(properties).to.have.property(\"waitForSync\", false);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "5e9fca76-6f21-4e6b-81e3-efedbdd5b594",
                  "parentUUID": "221fcc88-753a-44ea-84b1-6d64a0f48d50",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5e9fca76-6f21-4e6b-81e3-efedbdd5b594"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 409,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "92715a2a-5655-4c92-a163-2dd757977fc3",
              "title": "collection.count",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.count should return information about a collection",
                  "timedOut": false,
                  "duration": 355,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .count()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", collectionName);\n    chai_1.expect(info).to.have.property(\"count\", 0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "56170765-08c3-41ba-9814-2dc510be774d",
                  "parentUUID": "92715a2a-5655-4c92-a163-2dd757977fc3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "56170765-08c3-41ba-9814-2dc510be774d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 355,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "7f939d32-2f8b-4ff0-a03e-79b7026d595c",
          "title": "Manipulating collections",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
          "file": "/lib/async/test/10-manipulating-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating collections \"before all\" hook",
              "timedOut": false,
              "duration": 2692,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "adf7c348-87f1-4556-b9a8-6c7bdcdec7b6",
              "parentUUID": "7f939d32-2f8b-4ff0-a03e-79b7026d595c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating collections \"before each\" hook",
              "timedOut": false,
              "duration": 507,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`collection${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "1f9c4196-d234-4f5d-8dd3-7b8a18cb14e7",
              "parentUUID": "7f939d32-2f8b-4ff0-a03e-79b7026d595c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating collections \"after all\" hook",
              "timedOut": false,
              "duration": 406,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "3dddf154-cb4c-4796-8696-32ababe05300",
              "parentUUID": "7f939d32-2f8b-4ff0-a03e-79b7026d595c",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating collections \"after each\" hook",
              "timedOut": false,
              "duration": 815,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .get()\n    .then(() => {\n    collection\n        .drop()\n        .then(() => void done())\n        .catch(done);\n})\n    .catch(() => void done());",
              "err": {},
              "uuid": "214c8b73-fc61-4681-9699-c5b7bff66f3b",
              "parentUUID": "7f939d32-2f8b-4ff0-a03e-79b7026d595c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "37239df2-717b-4331-a517-06ce91d05c62",
              "title": "collection.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new document collection",
                  "timedOut": false,
                  "duration": 906,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "39bd7cfe-9dbc-4c4b-a086-aef93a30de6a",
                  "parentUUID": "37239df2-717b-4331-a517-06ce91d05c62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local document collection",
                  "timedOut": false,
                  "duration": 819,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "6340ea7e-828b-41de-8881-8601bf0dc787",
                  "parentUUID": "37239df2-717b-4331-a517-06ce91d05c62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new edge collection",
                  "timedOut": false,
                  "duration": 844,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "5ccb71f4-e876-4088-bc0d-40053dce6035",
                  "parentUUID": "37239df2-717b-4331-a517-06ce91d05c62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local edge collection",
                  "timedOut": false,
                  "duration": 920,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "de83d037-8122-4044-80dd-0386054dfcf5",
                  "parentUUID": "37239df2-717b-4331-a517-06ce91d05c62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39bd7cfe-9dbc-4c4b-a086-aef93a30de6a",
                "6340ea7e-828b-41de-8881-8601bf0dc787",
                "5ccb71f4-e876-4088-bc0d-40053dce6035",
                "de83d037-8122-4044-80dd-0386054dfcf5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3489,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e9826eb0-d3cc-412c-b7d5-a56a9001f752",
              "title": "collection.rename",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should rename a collection",
                  "fullTitle": "Manipulating collections collection.rename should rename a collection",
                  "timedOut": false,
                  "duration": 922,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(\"/_admin/server/role\")\n    .get()\n    .then(res => {\n    if (res.body.role !== \"SINGLE\")\n        return;\n    const name = `renamecollection${Date.now()}`;\n    return collection.rename(name).then(info => {\n        chai_1.expect(info).to.have.property(\"name\", name);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "75efedc3-3ca8-4dae-a79b-6546abfee61d",
                  "parentUUID": "e9826eb0-d3cc-412c-b7d5-a56a9001f752",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75efedc3-3ca8-4dae-a79b-6546abfee61d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 922,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "701f6dd3-d51a-4b29-953d-d922cbf8d917",
              "title": "collection.truncate",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should truncate a non-empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should truncate a non-empty collection",
                  "timedOut": false,
                  "duration": 2970,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.save({}).then(() => {\n    return collection\n        .truncate()\n        .then(() => {\n        collection.count().then(info => {\n            chai_1.expect(info).to.have.property(\"name\", collection.name);\n            chai_1.expect(info).to.have.property(\"count\", 0);\n        });\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "bc14364f-f5a4-4929-a791-fa4689f2bae6",
                  "parentUUID": "701f6dd3-d51a-4b29-953d-d922cbf8d917",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow truncating a empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should allow truncating a empty collection",
                  "timedOut": false,
                  "duration": 772,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.truncate().then(() => {\n    return collection\n        .count()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"count\", 0);\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "2c571390-b3b6-4d37-98bc-4cb6d0b356c5",
                  "parentUUID": "701f6dd3-d51a-4b29-953d-d922cbf8d917",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bc14364f-f5a4-4929-a791-fa4689f2bae6",
                "2c571390-b3b6-4d37-98bc-4cb6d0b356c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3742,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e62493cc-c36c-4a3f-9c7c-ab4fd3c8db07",
              "title": "collection.drop",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop a collection",
                  "fullTitle": "Manipulating collections collection.drop should drop a collection",
                  "timedOut": false,
                  "duration": 767,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.drop().then(() => {\n    return collection\n        .get()\n        .then(done)\n        .catch(err => {\n        chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n        void done();\n    });\n});",
                  "err": {},
                  "uuid": "e624b6e5-94dc-41f8-b03c-5a181aa21f57",
                  "parentUUID": "e62493cc-c36c-4a3f-9c7c-ab4fd3c8db07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e624b6e5-94dc-41f8-b03c-5a181aa21f57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 767,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6f69b433-13dd-4f82-a7fb-d2a43e59cc66",
              "title": "collection.onChange",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the message on collection change",
                  "fullTitle": "Manipulating collections collection.onChange should get the message on collection change",
                  "timedOut": false,
                  "duration": 2158,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const callbackObj = {\n    onopen: () => {\n        collection.save({ name: \"Anthony\", lastname: \"Gonsalvis\" });\n    },\n    onmessage: (msg) => {\n        console.log(\"msg=>\", msg);\n        done();\n    },\n    onerror: (err) => {\n        console.log(\"Connection Error->\", err);\n        chai_1.expect.fail(\"Websocket connection error\");\n    },\n    onclose: () => console.log(\"Websoket connection closed\")\n};\ncollection.onChange(callbackObj, testUrl.substring(8));",
                  "err": {},
                  "uuid": "63ed74b0-2a38-45c1-95f1-4b47dbea0b3f",
                  "parentUUID": "6f69b433-13dd-4f82-a7fb-d2a43e59cc66",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63ed74b0-2a38-45c1-95f1-4b47dbea0b3f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2158,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "2cf0f6eb-c45a-43eb-ad5a-fc47d5890c94",
          "title": "Managing indexes",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
          "file": "/lib/async/test/11-managing-indexes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Managing indexes \"before all\" hook",
              "timedOut": false,
              "duration": 2867,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "b064641f-d12a-4df9-882e-696df0cacfde",
              "parentUUID": "2cf0f6eb-c45a-43eb-ad5a-fc47d5890c94",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Managing indexes \"after all\" hook",
              "timedOut": false,
              "duration": 511,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "54943eb3-0d53-4d4a-bf70-6118bf0826fe",
              "parentUUID": "2cf0f6eb-c45a-43eb-ad5a-fc47d5890c94",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f04194ca-41db-40db-ae98-46c262d96b80",
              "title": "collection.createIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a index of given type",
                  "fullTitle": "Managing indexes collection.createIndex should create a index of given type",
                  "timedOut": false,
                  "duration": 386,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createIndex({\n    type: \"hash\",\n    fields: [\"value0\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value0\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f513acc7-98ad-47ca-9cc5-2648e173560f",
                  "parentUUID": "f04194ca-41db-40db-ae98-46c262d96b80",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f513acc7-98ad-47ca-9cc5-2648e173560f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 386,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "0aef6883-0ad2-415d-b620-efa5e0930fdb",
              "title": "collection.createHashIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a hash index",
                  "fullTitle": "Managing indexes collection.createHashIndex should create a hash index",
                  "timedOut": false,
                  "duration": 432,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f4a09218-33b4-4df7-9df6-863fa5e9501b",
                  "parentUUID": "0aef6883-0ad2-415d-b620-efa5e0930fdb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4a09218-33b4-4df7-9df6-863fa5e9501b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 432,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "145537f0-b4fc-4d88-a685-8a6cdec214cb",
              "title": "collection.createSkipList",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a skiplist index",
                  "fullTitle": "Managing indexes collection.createSkipList should create a skiplist index",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createSkipList([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"skiplist\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "96abe994-de76-4c83-aa03-e3300a2b6554",
                  "parentUUID": "145537f0-b4fc-4d88-a685-8a6cdec214cb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96abe994-de76-4c83-aa03-e3300a2b6554"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 407,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "18944efc-5520-48c8-a560-3ab8958bf246",
              "title": "collection.createPersistentIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a persistent index",
                  "fullTitle": "Managing indexes collection.createPersistentIndex should create a persistent index",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createPersistentIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"persistent\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7bb91ee3-9e0a-4e84-92f3-bb8177fdfb5b",
                  "parentUUID": "18944efc-5520-48c8-a560-3ab8958bf246",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7bb91ee3-9e0a-4e84-92f3-bb8177fdfb5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 410,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "88937f73-5c61-487e-9d8d-ebddb38f4b8d",
              "title": "collection.createGeoIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a geo1 index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo1 index for one field",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "6ff57b49-7027-4f8d-bb49-5d2d5b0a960f",
                  "parentUUID": "88937f73-5c61-487e-9d8d-ebddb38f4b8d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo2 index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo2 index for two fields",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "ef93f224-11db-4542-bdc4-066e48d09614",
                  "parentUUID": "88937f73-5c61-487e-9d8d-ebddb38f4b8d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for one field",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "ac75e51d-9def-4217-9cf4-d410596a43ee",
                  "parentUUID": "88937f73-5c61-487e-9d8d-ebddb38f4b8d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for two fields",
                  "timedOut": false,
                  "duration": 408,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value1\", \"value2\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value1\", \"value2\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "542b7c51-10b7-4ec0-a6b9-24f47f774636",
                  "parentUUID": "88937f73-5c61-487e-9d8d-ebddb38f4b8d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac75e51d-9def-4217-9cf4-d410596a43ee",
                "542b7c51-10b7-4ec0-a6b9-24f47f774636"
              ],
              "failures": [],
              "pending": [
                "6ff57b49-7027-4f8d-bb49-5d2d5b0a960f",
                "ef93f224-11db-4542-bdc4-066e48d09614"
              ],
              "skipped": [],
              "duration": 815,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ee3b1edb-9e6f-49cd-9393-99d125d6cfc1",
              "title": "collection.createFulltextIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a fulltext index",
                  "fullTitle": "Managing indexes collection.createFulltextIndex should create a fulltext index",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createFulltextIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"fulltext\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4fcd1643-e37b-4838-8088-4d1edfa5d4be",
                  "parentUUID": "ee3b1edb-9e6f-49cd-9393-99d125d6cfc1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fcd1643-e37b-4838-8088-4d1edfa5d4be"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 407,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4357b898-64fe-4d8f-bca0-bc4b49408485",
              "title": "collection.index",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a index",
                  "fullTitle": "Managing indexes collection.index should return information about a index",
                  "timedOut": false,
                  "duration": 925,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.index(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        chai_1.expect(index).to.have.property(\"type\", info.type);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "9da2d551-21cf-4962-8d4c-f52fe32bbc12",
                  "parentUUID": "4357b898-64fe-4d8f-bca0-bc4b49408485",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9da2d551-21cf-4962-8d4c-f52fe32bbc12"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 925,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "70b63e46-1210-46b7-a164-bb44e13a0c89",
              "title": "collection.indexes",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a list of indexes",
                  "fullTitle": "Managing indexes collection.indexes should return a list of indexes",
                  "timedOut": false,
                  "duration": 920,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(index => {\n    return collection.indexes().then(indexes => {\n        chai_1.expect(indexes).to.be.instanceof(Array);\n        chai_1.expect(indexes).to.not.be.empty;\n        chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(1);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "fa6f995b-ce9d-450d-9633-cdebe85b6ffc",
                  "parentUUID": "70b63e46-1210-46b7-a164-bb44e13a0c89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa6f995b-ce9d-450d-9633-cdebe85b6ffc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 920,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b94d5504-afbe-410f-9cdb-ae27a356f3f0",
              "title": "collection.dropIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop existing index",
                  "fullTitle": "Managing indexes collection.dropIndex should drop existing index",
                  "timedOut": false,
                  "duration": 1224,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.dropIndex(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        return collection.indexes().then(indexes => {\n            chai_1.expect(indexes).to.be.instanceof(Array);\n            chai_1.expect(indexes).to.not.be.empty;\n            chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(0);\n        });\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "fd2204cd-9a35-4064-a17c-43f66b3d9540",
                  "parentUUID": "b94d5504-afbe-410f-9cdb-ae27a356f3f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd2204cd-9a35-4064-a17c-43f66b3d9540"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1224,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "f3d56788-2a36-48c7-8ca6-811465173b1e",
          "title": "DocumentCollection API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
          "file": "/lib/async/test/14-document-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "DocumentCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 1810,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "f614c535-5b89-48eb-abe1-cb53663e63d6",
              "parentUUID": "f3d56788-2a36-48c7-8ca6-811465173b1e",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "DocumentCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 510,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "499a1d2c-fea3-4216-934d-f39c643c4fc7",
              "parentUUID": "f3d56788-2a36-48c7-8ca6-811465173b1e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "DocumentCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 294,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "d64ba04f-3dcd-40d7-8f03-616f985d3d9a",
              "parentUUID": "f3d56788-2a36-48c7-8ca6-811465173b1e",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "DocumentCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 306,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "4c4996d4-f595-4581-bfbd-9a03dcc8b051",
              "parentUUID": "f3d56788-2a36-48c7-8ca6-811465173b1e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "2f5a0623-1e64-4678-8657-221773365563",
              "title": "documentCollection.document",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 327,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "3625f6c5-7f33-46f6-ac93-819d3392c72c",
                  "parentUUID": "2f5a0623-1e64-4678-8657-221773365563",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.document returns a document in the collection",
                  "timedOut": false,
                  "duration": 256,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "bb6ab4f5-0ed8-4645-8b89-8f4b5bbd8d68",
                  "parentUUID": "2f5a0623-1e64-4678-8657-221773365563",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "DocumentCollection API documentCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 309,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "a6cddf78-c466-4b68-b3d6-08ecf5e19e8c",
                  "parentUUID": "2f5a0623-1e64-4678-8657-221773365563",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb6ab4f5-0ed8-4645-8b89-8f4b5bbd8d68",
                "a6cddf78-c466-4b68-b3d6-08ecf5e19e8c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 565,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4d81df35-26f7-4aa8-8494-7d4bc7bd7b47",
              "title": "documentCollection.documentExists",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 349,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "8c9119c6-e7e6-44a3-83d7-76f4684246e4",
                  "parentUUID": "4d81df35-26f7-4aa8-8494-7d4bc7bd7b47",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the document exists",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns true if the document exists",
                  "timedOut": false,
                  "duration": 256,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "1ce5bf21-a2e8-4a16-983d-e76c84a70dbe",
                  "parentUUID": "4d81df35-26f7-4aa8-8494-7d4bc7bd7b47",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the document does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the document does not exist",
                  "timedOut": false,
                  "duration": 256,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"does-not-exist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "206c29cd-9522-48ca-b84c-02b303828682",
                  "parentUUID": "4d81df35-26f7-4aa8-8494-7d4bc7bd7b47",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the collection does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the collection does not exist",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric\n    .collection(\"doesnotexist\")\n    .documentExists(\"lol\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "36e2c0ee-eb46-4ca1-a1d0-2c14fab1965d",
                  "parentUUID": "4d81df35-26f7-4aa8-8494-7d4bc7bd7b47",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ce5bf21-a2e8-4a16-983d-e76c84a70dbe",
                "206c29cd-9522-48ca-b84c-02b303828682",
                "36e2c0ee-eb46-4ca1-a1d0-2c14fab1965d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 818,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ae2d1946-6860-4d5c-9692-0d4830980bef",
              "title": "documentCollection.save",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.save creates a document in the collection",
                  "timedOut": false,
                  "duration": 615,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2cf2ad8e-1e73-4083-ab90-7e0d7659a54a",
                  "parentUUID": "ae2d1946-6860-4d5c-9692-0d4830980bef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "DocumentCollection API documentCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 623,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c5c6d5f3-298f-4670-9a4a-240096296254",
                  "parentUUID": "ae2d1946-6860-4d5c-9692-0d4830980bef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the document if opts.returnNew is set",
                  "fullTitle": "DocumentCollection API documentCollection.save returns the document if opts.returnNew is set",
                  "timedOut": false,
                  "duration": 310,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = { returnNew: true };\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4a9e305c-6ec9-4b65-9487-9d987fc17af8",
                  "parentUUID": "ae2d1946-6860-4d5c-9692-0d4830980bef",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "interprets opts as returnNew if it is a boolean",
                  "fullTitle": "DocumentCollection API documentCollection.save interprets opts as returnNew if it is a boolean",
                  "timedOut": false,
                  "duration": 437,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = true;\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c2b460ad-0c7e-4c58-aa0d-736f169f65da",
                  "parentUUID": "ae2d1946-6860-4d5c-9692-0d4830980bef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2cf2ad8e-1e73-4083-ab90-7e0d7659a54a",
                "c5c6d5f3-298f-4670-9a4a-240096296254",
                "4a9e305c-6ec9-4b65-9487-9d987fc17af8",
                "c2b460ad-0c7e-4c58-aa0d-736f169f65da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1985,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "9b6dbdfd-146f-4f81-a752-1880826b2206",
              "title": "documentCollection.replace",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given document",
                  "fullTitle": "DocumentCollection API documentCollection.replace replaces the given document",
                  "timedOut": false,
                  "duration": 922,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "69e35a39-1484-467b-96b2-801635a2a850",
                  "parentUUID": "9b6dbdfd-146f-4f81-a752-1880826b2206",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69e35a39-1484-467b-96b2-801635a2a850"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 922,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "73686fca-f925-4049-b162-ad52fc025860",
              "title": "documentCollection.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "DocumentCollection API documentCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 929,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "49873499-c586-4822-917a-dc68f9149a5f",
                  "parentUUID": "73686fca-f925-4049-b162-ad52fc025860",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "DocumentCollection API documentCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 905,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "69221bd7-8dd3-4065-8849-905d722266b4",
                  "parentUUID": "73686fca-f925-4049-b162-ad52fc025860",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "49873499-c586-4822-917a-dc68f9149a5f",
                "69221bd7-8dd3-4065-8849-905d722266b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1834,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "84ed3d8e-1cca-426f-a8c4-e765c3b2e376",
              "title": "documentCollection.remove",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 308,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "259fc64f-b851-4031-a93b-a490896602c6",
                  "parentUUID": "84ed3d8e-1cca-426f-a8c4-e765c3b2e376",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given document",
                  "fullTitle": "DocumentCollection API documentCollection.remove deletes the given document",
                  "timedOut": false,
                  "duration": 614,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.document(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "dcf1be77-1dee-4b6e-ba49-5685fa79e05d",
                  "parentUUID": "84ed3d8e-1cca-426f-a8c4-e765c3b2e376",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dcf1be77-1dee-4b6e-ba49-5685fa79e05d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 614,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "81598936-aabc-458b-beaa-c1a22263f388",
          "title": "EdgeCollection API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
          "file": "/lib/async/test/15-edge-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "EdgeCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 2572,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "d020b8db-5504-4f44-b275-6f4d7375eff5",
              "parentUUID": "81598936-aabc-458b-beaa-c1a22263f388",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "EdgeCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 410,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.edgeCollection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "f617c8df-8b96-46a0-8bb1-ded8bcae568b",
              "parentUUID": "81598936-aabc-458b-beaa-c1a22263f388",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "EdgeCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 410,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "38a52285-fc82-45b7-853f-d0b8d4f50afb",
              "parentUUID": "81598936-aabc-458b-beaa-c1a22263f388",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "EdgeCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 408,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "225bdbaf-f5d8-4fd0-b175-76387373c8f1",
              "parentUUID": "81598936-aabc-458b-beaa-c1a22263f388",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3e4cf1c2-fe89-40a6-a996-f4eb52d197a5",
              "title": "edgeCollection.edge",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.edge \"before each\" hook",
                  "timedOut": false,
                  "duration": 510,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "4eb497d9-57d1-43a1-b8ed-c4bfd3a7a3a5",
                  "parentUUID": "3e4cf1c2-fe89-40a6-a996-f4eb52d197a5",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.edge returns an edge in the collection",
                  "timedOut": false,
                  "duration": 513,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "795ceaef-cbc9-4533-9580-5dcd052d29e3",
                  "parentUUID": "3e4cf1c2-fe89-40a6-a996-f4eb52d197a5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.edge does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 513,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "fdea8bf1-89c8-472a-9f4b-e2039f73bbb2",
                  "parentUUID": "3e4cf1c2-fe89-40a6-a996-f4eb52d197a5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "795ceaef-cbc9-4533-9580-5dcd052d29e3",
                "fdea8bf1-89c8-472a-9f4b-e2039f73bbb2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1026,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c2624824-3e56-412f-957b-1d9d2c38972b",
              "title": "edgeCollection.document",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 418,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "1431be1c-29fa-48bb-ae73-bcdde1a3da9e",
                  "parentUUID": "c2624824-3e56-412f-957b-1d9d2c38972b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.document returns an edge in the collection",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "9429beaf-055c-40c6-bd94-914037e69479",
                  "parentUUID": "c2624824-3e56-412f-957b-1d9d2c38972b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 403,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "2f2c3e6f-6d9e-498a-ae59-ec07872d7492",
                  "parentUUID": "c2624824-3e56-412f-957b-1d9d2c38972b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9429beaf-055c-40c6-bd94-914037e69479",
                "2f2c3e6f-6d9e-498a-ae59-ec07872d7492"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 813,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e524f207-697f-4b04-befa-87065112d6c8",
              "title": "edgeCollection.documentExists",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 613,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "834ec45d-70c8-4ca3-85c8-baf1d81947d5",
                  "parentUUID": "e524f207-697f-4b04-befa-87065112d6c8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the edge exists",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns true if the edge exists",
                  "timedOut": false,
                  "duration": 458,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "81c46924-bce0-4c9c-a75a-839996b2b1a1",
                  "parentUUID": "e524f207-697f-4b04-befa-87065112d6c8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the edge does not exist",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns false if the edge does not exist",
                  "timedOut": false,
                  "duration": 512,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"doesnotexist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "e17ade08-1e29-4eb7-82e9-653ec553e8f3",
                  "parentUUID": "e524f207-697f-4b04-befa-87065112d6c8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "81c46924-bce0-4c9c-a75a-839996b2b1a1",
                "e17ade08-1e29-4eb7-82e9-653ec553e8f3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 970,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c20e1efe-eb1e-4fc8-a13d-766b4a2ea912",
              "title": "edgeCollection.save",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.save creates an edge in the collection",
                  "timedOut": false,
                  "duration": 817,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "35a84c4d-2a3f-4551-8f47-aa788be640f8",
                  "parentUUID": "c20e1efe-eb1e-4fc8-a13d-766b4a2ea912",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "EdgeCollection API edgeCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = {\n    chicken: \"chicken\",\n    _key: \"banana\",\n    _from: \"d/1\",\n    _to: \"d/2\"\n};\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.equals(data._key);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._key).to.equal(data._key);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "4537617d-56a8-4a2d-96f4-db0372a7a62d",
                  "parentUUID": "c20e1efe-eb1e-4fc8-a13d-766b4a2ea912",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes _from and _to as positional arguments",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes _from and _to as positional arguments",
                  "timedOut": false,
                  "duration": 917,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "ad7dc42a-d76c-4a9a-be6d-ac43580e352d",
                  "parentUUID": "c20e1efe-eb1e-4fc8-a13d-766b4a2ea912",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object",
                  "timedOut": false,
                  "duration": 788,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "0778f8b3-cbef-46fb-b7a8-0a97bd18d7dc",
                  "parentUUID": "c20e1efe-eb1e-4fc8-a13d-766b4a2ea912",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object with positional _from and _to",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object with positional _from and _to",
                  "timedOut": false,
                  "duration": 723,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "6a696626-36d4-45e6-9776-88a4d4c41ce7",
                  "parentUUID": "c20e1efe-eb1e-4fc8-a13d-766b4a2ea912",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "35a84c4d-2a3f-4551-8f47-aa788be640f8",
                "4537617d-56a8-4a2d-96f4-db0372a7a62d",
                "ad7dc42a-d76c-4a9a-be6d-ac43580e352d",
                "0778f8b3-cbef-46fb-b7a8-0a97bd18d7dc",
                "6a696626-36d4-45e6-9776-88a4d4c41ce7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4065,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8af13bbb-dc86-4c07-96c5-d73cf4a4f3c4",
              "title": "edgeCollection.traversal",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal \"before each\" hook",
                  "timedOut": false,
                  "duration": 1289,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows = fabric.edgeCollection(\"knows\");\nconst person = fabric.collection(\"person\");\nPromise.all([person.create(), knows.create()])\n    .then(() => Promise.all([\n    person.import([\n        { _key: \"Alice\" },\n        { _key: \"Bob\" },\n        { _key: \"Charlie\" },\n        { _key: \"Dave\" },\n        { _key: \"Eve\" }\n    ]),\n    knows.import([\n        { _from: \"person/Alice\", _to: \"person/Bob\" },\n        { _from: \"person/Bob\", _to: \"person/Charlie\" },\n        { _from: \"person/Bob\", _to: \"person/Dave\" },\n        { _from: \"person/Eve\", _to: \"person/Alice\" },\n        { _from: \"person/Eve\", _to: \"person/Bob\" }\n    ])\n]))\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "8e856574-1243-4331-9e38-25cc82e4b2d7",
                  "parentUUID": "8af13bbb-dc86-4c07-96c5-d73cf4a4f3c4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "executes traversal",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal executes traversal",
                  "timedOut": false,
                  "duration": 342,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows\n    .traversal(\"person/Alice\", { direction: \"outbound\" })\n    .then((result) => {\n    chai_1.expect(result).to.have.property(\"visited\");\n    const visited = result.visited;\n    chai_1.expect(visited).to.have.property(\"vertices\");\n    const vertices = visited.vertices;\n    chai_1.expect(vertices).to.be.instanceOf(Array);\n    chai_1.expect(vertices.length).to.equal(4);\n    const names = vertices.map((d) => d._key);\n    for (const name of [\"Alice\", \"Bob\", \"Charlie\", \"Dave\"]) {\n        chai_1.expect(names).to.contain(name);\n    }\n    chai_1.expect(visited).to.have.property(\"paths\");\n    const paths = visited.paths;\n    chai_1.expect(paths).to.be.instanceOf(Array);\n    chai_1.expect(paths.length).to.equal(4);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "956f79e1-1b8d-4fee-88da-28e76b602042",
                  "parentUUID": "8af13bbb-dc86-4c07-96c5-d73cf4a4f3c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "956f79e1-1b8d-4fee-88da-28e76b602042"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 342,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "242d3bef-9a09-45d1-b4dd-5be8b248dc2e",
              "title": "edgeCollection.replace",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.replace replaces the given edge",
                  "timedOut": false,
                  "duration": 1331,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = { potato: \"tomato\", _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, {\n        sup: \"dawg\",\n        _from: \"d/1\",\n        _to: \"d/2\"\n    });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "beb636cb-77dd-4f2a-abd4-1b67c51fdb88",
                  "parentUUID": "242d3bef-9a09-45d1-b4dd-5be8b248dc2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "beb636cb-77dd-4f2a-abd4-1b67c51fdb88"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1331,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "93f4a1fb-2b6c-4cc4-9adb-ef6fbf1f89b2",
              "title": "edgeCollection.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "EdgeCollection API edgeCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 1021,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).to.have.property(\"empty\", null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e4625e13-f09f-4050-ba64-4ea05948bf71",
                  "parentUUID": "93f4a1fb-2b6c-4cc4-9adb-ef6fbf1f89b2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "EdgeCollection API edgeCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 1129,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "0117d6dc-7514-4581-963f-470705162c30",
                  "parentUUID": "93f4a1fb-2b6c-4cc4-9adb-ef6fbf1f89b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4625e13-f09f-4050-ba64-4ea05948bf71",
                "0117d6dc-7514-4581-963f-470705162c30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2150,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7dc3a19e-9588-4d95-a60b-91893ff3f513",
              "title": "edgeCollection.remove",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 305,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key, _from: \"d/1\", _to: \"d/2\" })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e5f5e59d-2df2-425b-bd4a-8c8a7c82eb96",
                  "parentUUID": "7dc3a19e-9588-4d95-a60b-91893ff3f513",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.remove deletes the given edge",
                  "timedOut": false,
                  "duration": 719,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.edge(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "cad8274b-31c6-48d8-b68b-06a1483e9d67",
                  "parentUUID": "7dc3a19e-9588-4d95-a60b-91893ff3f513",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cad8274b-31c6-48d8-b68b-06a1483e9d67"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 719,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "53429192-c4b6-4049-9644-f8435ee8d291",
          "title": "Graph API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
          "file": "/lib/async/test/16-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Graph API \"before all\" hook",
              "timedOut": false,
              "duration": 2768,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "9aaf99b9-e9ba-4b73-8d16-dac43ed2f25a",
              "parentUUID": "53429192-c4b6-4049-9644-f8435ee8d291",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Graph API \"after all\" hook",
              "timedOut": false,
              "duration": 513,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "112ef648-cb61-4019-99ce-68f07ad71a8c",
              "parentUUID": "53429192-c4b6-4049-9644-f8435ee8d291",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "62e1d801-e231-4131-b8c4-a0753bd3dd35",
              "title": "graph.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.get \"before all\" hook",
                  "timedOut": false,
                  "duration": 1838,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "49b9f8bf-0f88-491e-b4cd-347b54716356",
                  "parentUUID": "62e1d801-e231-4131-b8c4-a0753bd3dd35",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.get \"after all\" hook",
                  "timedOut": false,
                  "duration": 1224,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "bc7559de-8417-4090-a538-e142eb6835b8",
                  "parentUUID": "62e1d801-e231-4131-b8c4-a0753bd3dd35",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about the graph",
                  "fullTitle": "Graph API graph.get fetches information about the graph",
                  "timedOut": false,
                  "duration": 416,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "2fdeb621-ece3-4ba2-9c70-2f5a5a5bf2af",
                  "parentUUID": "62e1d801-e231-4131-b8c4-a0753bd3dd35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2fdeb621-ece3-4ba2-9c70-2f5a5a5bf2af"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 416,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "1bec70fd-ef30-4d33-9fcc-ccdbd2017710",
              "title": "graph.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.create \"before all\" hook",
                  "timedOut": false,
                  "duration": 1446,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b3adfd13-86c0-416c-8027-490e75a3d955",
                  "parentUUID": "1bec70fd-ef30-4d33-9fcc-ccdbd2017710",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 792,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric.collection(name).drop()))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a444bfb4-eeff-43a7-a7b8-fe946cbac82a",
                  "parentUUID": "1bec70fd-ef30-4d33-9fcc-ccdbd2017710",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates the graph",
                  "fullTitle": "Graph API graph.create creates the graph",
                  "timedOut": false,
                  "duration": 805,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let graph = fabric.graph(`g${Date.now()}`);\ngraph\n    .create({\n    edgeDefinitions: edgeCollectionNames.map(name => ({\n        collection: name,\n        from: vertexCollectionNames,\n        to: vertexCollectionNames\n    }))\n})\n    .then(() => graph.get())\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "4eda60bf-8078-4237-a4c3-96799828a7d6",
                  "parentUUID": "1bec70fd-ef30-4d33-9fcc-ccdbd2017710",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4eda60bf-8078-4237-a4c3-96799828a7d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 805,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c67eb32e-3df3-4ce3-93eb-a00df32f2dd9",
              "title": "graph.drop",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Graph API graph.drop \"before each\" hook",
                  "timedOut": false,
                  "duration": 1232,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "61ed5e1d-cc6d-4f80-adb5-ef8fc1c94d3b",
                  "parentUUID": "c67eb32e-3df3-4ce3-93eb-a00df32f2dd9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Graph API graph.drop \"after each\" hook",
                  "timedOut": false,
                  "duration": 818,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric\n    .collection(name)\n    .drop()\n    .catch(() => null)))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7f693b0d-fd01-44fa-b358-7666d41351b7",
                  "parentUUID": "c67eb32e-3df3-4ce3-93eb-a00df32f2dd9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "destroys the graph if not passed true",
                  "fullTitle": "Graph API graph.drop destroys the graph if not passed true",
                  "timedOut": false,
                  "duration": 1230,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a4019e54-73d4-43c2-aacb-4d839b730421",
                  "parentUUID": "c67eb32e-3df3-4ce3-93eb-a00df32f2dd9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally drops all of its collections if passed true",
                  "fullTitle": "Graph API graph.drop additionally drops all of its collections if passed true",
                  "timedOut": false,
                  "duration": 1329,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop(true)\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).not.to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "cd3f5425-caff-4299-b3c0-ce8334701f47",
                  "parentUUID": "c67eb32e-3df3-4ce3-93eb-a00df32f2dd9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4019e54-73d4-43c2-aacb-4d839b730421",
                "cd3f5425-caff-4299-b3c0-ce8334701f47"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2559,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "f628def9-3617-490f-8b81-ea5d677fde39",
          "title": "Manipulating graph vertices",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
          "file": "/lib/async/test/17-graph-vertices.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph vertices \"before all\" hook",
              "timedOut": false,
              "duration": 2657,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "baaf939f-2535-4b3a-9543-4f9c6f8dd79b",
              "parentUUID": "f628def9-3617-490f-8b81-ea5d677fde39",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph vertices \"before each\" hook",
              "timedOut": false,
              "duration": 1457,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "44fc16cf-bce3-4975-a72d-dacb2de45082",
              "parentUUID": "f628def9-3617-490f-8b81-ea5d677fde39",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph vertices \"after all\" hook",
              "timedOut": false,
              "duration": 511,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "b112d8fc-8c9a-46aa-af68-4ee09ec978c6",
              "parentUUID": "f628def9-3617-490f-8b81-ea5d677fde39",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph vertices \"after each\" hook",
              "timedOut": false,
              "duration": 1020,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "f9ce595e-773c-4493-9b05-a33d8c75e9b9",
              "parentUUID": "f628def9-3617-490f-8b81-ea5d677fde39",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "412a177c-32c8-4eb2-b76a-0a7d1fa1a4a3",
              "title": "graph.vertexCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a GraphVertexCollection instance for the collection",
                  "fullTitle": "Manipulating graph vertices graph.vertexCollection returns a GraphVertexCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = graph.vertexCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(graph_1.GraphVertexCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "0c143feb-5166-42b0-b3ee-b0e25116b303",
                  "parentUUID": "412a177c-32c8-4eb2-b76a-0a7d1fa1a4a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0c143feb-5166-42b0-b3ee-b0e25116b303"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "d41bf846-9431-4467-9810-4703e9b1c66b",
              "title": "graph.addVertexCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"before each\" hook",
                  "timedOut": false,
                  "duration": 389,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`coll${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "649d53e6-cebf-4c7a-83ea-c7e4e73d4bba",
                  "parentUUID": "d41bf846-9431-4467-9810-4703e9b1c66b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"after each\" hook",
                  "timedOut": false,
                  "duration": 503,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "6c505c75-4eed-4e0e-ae7c-6134f955c7e7",
                  "parentUUID": "d41bf846-9431-4467-9810-4703e9b1c66b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "adds the given vertex collection to the graph",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection adds the given vertex collection to the graph",
                  "timedOut": false,
                  "duration": 336,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).to.contain(vertexCollection.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a6a7f4d5-07ea-41ad-ad30-23b065715be6",
                  "parentUUID": "d41bf846-9431-4467-9810-4703e9b1c66b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6a7f4d5-07ea-41ad-ad30-23b065715be6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 336,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "57d02a3d-415c-43d6-b97e-8ae03919feff",
              "title": "graph.removeVertexCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection \"before each\" hook",
                  "timedOut": false,
                  "duration": 791,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`xc${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => graph.addVertexCollection(vertexCollection.name))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4d7f61de-8b1f-47fe-8a9a-43dcf5a1487b",
                  "parentUUID": "57d02a3d-415c-43d6-b97e-8ae03919feff",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes the given vertex collection from the graph",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection removes the given vertex collection from the graph",
                  "timedOut": false,
                  "duration": 875,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "9e8651ea-c621-424e-a562-60ae40bf631a",
                  "parentUUID": "57d02a3d-415c-43d6-b97e-8ae03919feff",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "destroys the collection if explicitly passed true",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection destroys the collection if explicitly passed true",
                  "timedOut": false,
                  "duration": 925,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name, true)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), err => {\n    chai_1.expect(err).to.be.an.instanceof(error_1.C8Error);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8fb47a23-d3bb-4b6e-8866-aae21eca51c7",
                  "parentUUID": "57d02a3d-415c-43d6-b97e-8ae03919feff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9e8651ea-c621-424e-a562-60ae40bf631a",
                "8fb47a23-d3bb-4b6e-8866-aae21eca51c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1800,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "c03ab93a-827d-44c5-b280-6f048cbea655",
          "title": "Manipulating graph edges",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
          "file": "/lib/async/test/18-graph-edges.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph edges \"before all\" hook",
              "timedOut": false,
              "duration": 2562,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);",
              "err": {},
              "uuid": "68c608a4-2491-4a52-bda7-9cfb601ffa2e",
              "parentUUID": "c03ab93a-827d-44c5-b280-6f048cbea655",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph edges \"before each\" hook",
              "timedOut": false,
              "duration": 414,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(graphName);\ngraph\n    .create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "5d1e9c95-ddcb-42dd-ac1f-b64d6753adda",
              "parentUUID": "c03ab93a-827d-44c5-b280-6f048cbea655",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph edges \"after all\" hook",
              "timedOut": false,
              "duration": 398,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "076b121d-f3dd-45fc-ba3e-f40d1ff04a3b",
              "parentUUID": "c03ab93a-827d-44c5-b280-6f048cbea655",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph edges \"after each\" hook",
              "timedOut": false,
              "duration": 409,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "72e1bdad-26d7-415b-8006-30ac077b9316",
              "parentUUID": "c03ab93a-827d-44c5-b280-6f048cbea655",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "53bd9c1b-ddd3-4d68-9ecf-f9b1f1efee37",
              "title": "graph.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about the graph",
                  "fullTitle": "Manipulating graph edges graph.get should return information about the graph",
                  "timedOut": false,
                  "duration": 369,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "23a8be8e-c416-447f-84ba-94eaa282eabf",
                  "parentUUID": "53bd9c1b-ddd3-4d68-9ecf-f9b1f1efee37",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "23a8be8e-c416-447f-84ba-94eaa282eabf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 369,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e24bcd8d-7f79-4c4b-8bd0-60135a4824c3",
              "title": "graph.edgeCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should contain edge collection",
                  "fullTitle": "Manipulating graph edges graph.edgeCollections should contain edge collection",
                  "timedOut": false,
                  "duration": 368,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .edgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info.map((c) => c.name)).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "02487382-c5d3-4c7b-8295-758b5161ce60",
                  "parentUUID": "e24bcd8d-7f79-4c4b-8bd0-60135a4824c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "02487382-c5d3-4c7b-8295-758b5161ce60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 368,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f68b7cf0-1035-452f-a773-4d6e17cae955",
              "title": "graph.listEdgeCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all edge collection names",
                  "fullTitle": "Manipulating graph edges graph.listEdgeCollections should return all edge collection names",
                  "timedOut": false,
                  "duration": 386,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listEdgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b01632e0-09c5-4882-ae2b-2c7a09a585d3",
                  "parentUUID": "f68b7cf0-1035-452f-a773-4d6e17cae955",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b01632e0-09c5-4882-ae2b-2c7a09a585d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 386,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "d1698ff2-ff5a-4b82-840b-d83b0f491c4f",
              "title": "graph.listVertexCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all vertex collection names",
                  "fullTitle": "Manipulating graph edges graph.listVertexCollections should return all vertex collection names",
                  "timedOut": false,
                  "duration": 413,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listVertexCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a6ddf2cd-f23d-4673-8fa7-40a8fdaae3c7",
                  "parentUUID": "d1698ff2-ff5a-4b82-840b-d83b0f491c4f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6ddf2cd-f23d-4673-8fa7-40a8fdaae3c7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 413,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "57bc7139-f5f4-4cb0-9f0e-e6ec843830ec",
              "title": "graph.addEdgeDefinition",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add an edgeDefinition to the graph",
                  "fullTitle": "Manipulating graph edges graph.addEdgeDefinition should add an edgeDefinition to the graph",
                  "timedOut": false,
                  "duration": 419,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addEdgeDefinition({\n    collection: \"works_in\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(2);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"works_in\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"works_in\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c960aa63-1620-4d8e-bd16-fbdcea98d3f8",
                  "parentUUID": "57bc7139-f5f4-4cb0-9f0e-e6ec843830ec",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c960aa63-1620-4d8e-bd16-fbdcea98d3f8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 419,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3595e673-38b2-44f0-8652-8a333016c4ef",
              "title": "graph.replaceEdgeDefinition",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should replace an existing edgeDefinition in the graph",
                  "fullTitle": "Manipulating graph edges graph.replaceEdgeDefinition should replace an existing edgeDefinition in the graph",
                  "timedOut": false,
                  "duration": 411,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .replaceEdgeDefinition(\"knows\", {\n    collection: \"knows\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4c246598-fdc9-4269-9960-984c6de905d1",
                  "parentUUID": "3595e673-38b2-44f0-8652-8a333016c4ef",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4c246598-fdc9-4269-9960-984c6de905d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 411,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "ebd76365-a15d-493c-96c1-5e16a86d4861",
              "title": "graph.removeEdgeDefinition",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove an edgeDefinition from the graph",
                  "fullTitle": "Manipulating graph edges graph.removeEdgeDefinition should remove an edgeDefinition from the graph",
                  "timedOut": false,
                  "duration": 512,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeEdgeDefinition(\"knows\")\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "57c11e38-322e-4171-9b17-6abc01cc407b",
                  "parentUUID": "ebd76365-a15d-493c-96c1-5e16a86d4861",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57c11e38-322e-4171-9b17-6abc01cc407b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 512,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "a936cf65-7abc-43c2-af4e-d74602e16029",
          "title": "GraphVertexCollection API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
          "file": "/lib/async/test/19-graph-vertex-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "GraphVertexCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 3088,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\nconst graph = fabric.graph(`testgraph${Date.now()}`);\nawait graph.create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n});\ncollection = graph.vertexCollection(\"person\");",
              "err": {},
              "uuid": "aebcf127-8e58-48bf-a12d-43f331955c62",
              "parentUUID": "a936cf65-7abc-43c2-af4e-d74602e16029",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "GraphVertexCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 510,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .truncate()\n    .then(() => done())\n    .catch(done);",
              "err": {},
              "uuid": "7d0f259b-ea29-41e2-b840-ca4c2f851446",
              "parentUUID": "a936cf65-7abc-43c2-af4e-d74602e16029",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "GraphVertexCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 509,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "230809b0-acba-4908-8ba0-5466aa61b9da",
              "parentUUID": "a936cf65-7abc-43c2-af4e-d74602e16029",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "018a57db-c6da-468e-ba09-2d272b34cbe5",
              "title": "graphVertexCollection.vertex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex \"before each\" hook",
                  "timedOut": false,
                  "duration": 366,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "e426b46b-3d6d-492a-9583-ea8224172769",
                  "parentUUID": "018a57db-c6da-468e-ba09-2d272b34cbe5",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 411,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "e6a60644-fcc4-4e3d-9c30-ba868af4b83c",
                  "parentUUID": "018a57db-c6da-468e-ba09-2d272b34cbe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 408,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "81c8797f-56b9-4104-8317-cec3a80c1eb1",
                  "parentUUID": "018a57db-c6da-468e-ba09-2d272b34cbe5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6a60644-fcc4-4e3d-9c30-ba868af4b83c",
                "81c8797f-56b9-4104-8317-cec3a80c1eb1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 819,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c3ccfae9-85c1-484a-821f-551536017390",
              "title": "graphVertexCollection.document",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 413,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "062e6be2-6810-44da-b16c-f6d3d11cc5e0",
                  "parentUUID": "c3ccfae9-85c1-484a-821f-551536017390",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 555,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "a3afc26a-739e-4af8-bce3-9fb961098425",
                  "parentUUID": "c3ccfae9-85c1-484a-821f-551536017390",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 1129,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "88963009-829a-41ef-a54c-65918c112fe8",
                  "parentUUID": "c3ccfae9-85c1-484a-821f-551536017390",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a3afc26a-739e-4af8-bce3-9fb961098425",
                "88963009-829a-41ef-a54c-65918c112fe8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1684,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "568da0db-a7b2-4376-a35f-98cbc67f819a",
              "title": "graphVertexCollection.save",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save creates a vertex in the collection",
                  "timedOut": false,
                  "duration": 811,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "06b20280-3af9-48a9-8ae2-940bfdfc75b6",
                  "parentUUID": "568da0db-a7b2-4376-a35f-98cbc67f819a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d8950992-e7a8-4b16-a68a-465ffb898edc",
                  "parentUUID": "568da0db-a7b2-4376-a35f-98cbc67f819a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "06b20280-3af9-48a9-8ae2-940bfdfc75b6",
                "d8950992-e7a8-4b16-a68a-465ffb898edc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1631,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7fc1ba7f-c137-488a-8135-5364f3b85969",
              "title": "graphVertexCollection.replace",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.replace replaces the given vertex",
                  "timedOut": false,
                  "duration": 1332,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c76234e9-888f-4b41-bb58-1d4f053f80da",
                  "parentUUID": "7fc1ba7f-c137-488a-8135-5364f3b85969",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c76234e9-888f-4b41-bb58-1d4f053f80da"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1332,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a470e1b2-bea3-46af-aad5-923b789e98a6",
              "title": "graphVertexCollection.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update updates the given vertex",
                  "timedOut": false,
                  "duration": 1228,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "916a0111-0fac-41af-b77b-30c70cc6286a",
                  "parentUUID": "a470e1b2-bea3-46af-aad5-923b789e98a6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 1330,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "4a23fc50-f80f-447e-bb3d-0ac79d7c53c5",
                  "parentUUID": "a470e1b2-bea3-46af-aad5-923b789e98a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "916a0111-0fac-41af-b77b-30c70cc6286a",
                "4a23fc50-f80f-447e-bb3d-0ac79d7c53c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2558,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "36a9eb38-55f7-4735-98c7-cffc988c5e4c",
              "title": "graphVertexCollection.remove",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 411,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b008783e-fb6f-4428-ac60-2921bce77edd",
                  "parentUUID": "36a9eb38-55f7-4735-98c7-cffc988c5e4c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove deletes the given vertex",
                  "timedOut": false,
                  "duration": 820,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.vertex(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c87e0451-8297-440f-8f0b-8c4d897ff4bf",
                  "parentUUID": "36a9eb38-55f7-4735-98c7-cffc988c5e4c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c87e0451-8297-440f-8f0b-8c4d897ff4bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 820,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "f5cc4ff6-2d3d-4440-9eae-00f9d052fc88",
          "title": "Join Path",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/21-util-joinpath.js",
          "file": "/lib/async/test/21-util-joinpath.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "joinPath 1",
              "fullTitle": "Join Path joinPath 1",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"../../u1/u2\";\nvar path = \"/security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"../../u1/u2/security/authenticate\");",
              "err": {},
              "uuid": "0bec2849-9554-4591-826e-852e02bff3ae",
              "parentUUID": "f5cc4ff6-2d3d-4440-9eae-00f9d052fc88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 2",
              "fullTitle": "Join Path joinPath 2",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/u1/security/authenticate\");",
              "err": {},
              "uuid": "ccade5c6-4828-4c3c-a117-d1e5db17676c",
              "parentUUID": "f5cc4ff6-2d3d-4440-9eae-00f9d052fc88",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 3",
              "fullTitle": "Join Path joinPath 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/security/authenticate\");",
              "err": {},
              "uuid": "ccac1496-5993-478f-9dac-356887275aea",
              "parentUUID": "f5cc4ff6-2d3d-4440-9eae-00f9d052fc88",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bec2849-9554-4591-826e-852e02bff3ae",
            "ccade5c6-4828-4c3c-a117-d1e5db17676c",
            "ccac1496-5993-478f-9dac-356887275aea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "0409fe79-1e6a-41d7-b520-46d3b354a10e",
          "title": "Helper.getFullStreamPath",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output when there is no extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is no extra url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog\");",
              "err": {},
              "uuid": "1ca07bfd-d8ee-4587-a261-82cfabea8418",
              "parentUUID": "0409fe79-1e6a-41d7-b520-46d3b354a10e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns correct output when there is extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is extra url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\", \"/compaction\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog/compaction\");",
              "err": {},
              "uuid": "d5eeebad-dc46-4258-8922-544fe384ee9c",
              "parentUUID": "0409fe79-1e6a-41d7-b520-46d3b354a10e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1ca07bfd-d8ee-4587-a261-82cfabea8418",
            "d5eeebad-dc46-4258-8922-544fe384ee9c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "47b5e6c6-274f-4e0c-b96d-789abf16c89c",
          "title": "Helper.getDCListString",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output",
              "fullTitle": "Helper.getDCListString returns correct output",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(helper_1.getDCListString(response)).to.equal('dev-ap-southeast-1,dev-ap-southeast-2');",
              "err": {},
              "uuid": "0cc94ff6-02f7-4279-aa43-014b26edce14",
              "parentUUID": "47b5e6c6-274f-4e0c-b96d-789abf16c89c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0cc94ff6-02f7-4279-aa43-014b26edce14"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "0899c109-0234-49a0-80e0-d8ab47297ec0",
          "title": "C8QL Stream queries",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/23-c8ql-queries-stream.js",
          "file": "/lib/async/test/23-c8ql-queries-stream.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL Stream queries \"before all\" hook",
              "timedOut": false,
              "duration": 1849,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "f5ed2942-0b30-44b9-b31a-cd34e24385e8",
              "parentUUID": "0899c109-0234-49a0-80e0-d8ab47297ec0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL Stream queries \"after all\" hook",
              "timedOut": false,
              "duration": 305,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "3f2ee78e-c476-42d8-98f4-e5be45d8bf1d",
              "parentUUID": "0899c109-0234-49a0-80e0-d8ab47297ec0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8c44c859-c2fc-49c5-8e92-17370242524d",
              "title": "fabric.query",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL Stream queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 295,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\", {}, { options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6920b6dd-409c-430c-8e20-de21d050dc7a",
                  "parentUUID": "8c44c859-c2fc-49c5-8e92-17370242524d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL Stream queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 }, { options: { stream: true } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "3fa25e9b-3c42-4e15-98cf-582052a5e5d8",
                  "parentUUID": "8c44c859-c2fc-49c5-8e92-17370242524d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL Stream queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 308,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", {}, {\n    batchSize: 2,\n    count: true,\n    options: { stream: true }\n})\n    .then(cursor => {\n    let count = cursor.count;\n    chai_1.expect(count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 10",
                    "estack": "AssertionError: expected undefined to equal 10\n    at fabric.query.then.cursor (src/test/23-c8ql-queries-stream.ts:70:28)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "17e3d2ed-e08b-432f-9caf-04b67e02493e",
                  "parentUUID": "8c44c859-c2fc-49c5-8e92-17370242524d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL Stream queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 300,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true, options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 10",
                    "estack": "AssertionError: expected undefined to equal 10\n    at fabric.query.then.cursor (src/test/23-c8ql-queries-stream.ts:84:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "d12e453b-1855-437f-bd60-8fe57d9e0efe",
                  "parentUUID": "8c44c859-c2fc-49c5-8e92-17370242524d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6920b6dd-409c-430c-8e20-de21d050dc7a",
                "3fa25e9b-3c42-4e15-98cf-582052a5e5d8"
              ],
              "failures": [
                "17e3d2ed-e08b-432f-9caf-04b67e02493e",
                "d12e453b-1855-437f-bd60-8fe57d9e0efe"
              ],
              "pending": [],
              "skipped": [],
              "duration": 1208,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "c062f323-7203-42f4-a69f-5b7c56a5c792",
              "title": "with some data",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can do writes and reads",
                  "fullTitle": "C8QL Stream queries with some data can do writes and reads",
                  "timedOut": false,
                  "duration": 306,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(cname);\nlet readQ = jsC8_1.c8ql `FOR doc in ${collection} RETURN doc`;\nlet writeQ = jsC8_1.c8ql `FOR i in 1..1000 LET y = SLEEP(1) INSERT {forbidden: i} INTO ${collection}`;\nconst opts = { batchSize: 500, ttl: 5, options: { stream: true } };\n// 900s lock timeout + 5s ttl\nlet readCursor = fabric.query(readQ, opts);\nlet writeCursor = fabric.query(writeQ, opts);\n// the read cursor should always win\nPromise.race([readCursor, writeCursor])\n    .then(c => {\n    // therefore no document should have been written here\n    return c.every((d) => !d.hasOwnProperty(\"forbidden\"));\n})\n    .then(isOk => {\n    chai_1.expect(isOk).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: collection or view not found: name: MyTestCollection",
                    "estack": "C8Error: collection or view not found: name: MyTestCollection\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "bd35493f-ec18-46d7-8b65-e05e41728fa9",
                  "parentUUID": "c062f323-7203-42f4-a69f-5b7c56a5c792",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "bd35493f-ec18-46d7-8b65-e05e41728fa9"
              ],
              "pending": [],
              "skipped": [],
              "duration": 306,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "4d3b0526-e3e6-41a5-ac11-b8babfdeacb2",
          "title": "Manipulating streams",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
          "file": "/lib/async/test/28-manipulating-streams.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating streams \"before all\" hook",
              "timedOut": false,
              "duration": 1637,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "9568492c-f729-4d79-a747-6cf1e509783c",
              "parentUUID": "4d3b0526-e3e6-41a5-ac11-b8babfdeacb2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating streams \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "095d1001-9680-4002-925d-0ef41e86a842",
              "parentUUID": "4d3b0526-e3e6-41a5-ac11-b8babfdeacb2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "45d56f73-4cac-42ac-8c4e-3062345e722e",
              "title": "fabric.stream",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a new Stream instance",
                  "fullTitle": "Manipulating streams fabric.stream returns a new Stream instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.stream(\"testStream\", true)).to.be.instanceof(stream_1.Stream);",
                  "err": {},
                  "uuid": "f8c58cd5-5fbb-4c11-bafd-b90e40250ed7",
                  "parentUUID": "45d56f73-4cac-42ac-8c4e-3062345e722e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets all streams",
                  "fullTitle": "Manipulating streams fabric.stream gets all streams",
                  "timedOut": false,
                  "duration": 372,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getStreams();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "cb3f3710-9cbf-4262-983c-3cb4e562a068",
                  "parentUUID": "45d56f73-4cac-42ac-8c4e-3062345e722e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears backlog",
                  "timedOut": false,
                  "duration": 445,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.clearBacklog();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "9b4e2c05-eb47-4941-841e-219284a47a34",
                  "parentUUID": "45d56f73-4cac-42ac-8c4e-3062345e722e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears subscription backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears subscription backlog",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "0e584e33-8e9c-4e56-97b7-156a59040b47",
                  "parentUUID": "45d56f73-4cac-42ac-8c4e-3062345e722e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "unsubscribes to a subscription",
                  "fullTitle": "Manipulating streams fabric.stream unsubscribes to a subscription",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "5e68059c-e906-4207-b62e-6fc56ed56492",
                  "parentUUID": "45d56f73-4cac-42ac-8c4e-3062345e722e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f8c58cd5-5fbb-4c11-bafd-b90e40250ed7",
                "cb3f3710-9cbf-4262-983c-3cb4e562a068",
                "9b4e2c05-eb47-4941-841e-219284a47a34"
              ],
              "failures": [],
              "pending": [
                "0e584e33-8e9c-4e56-97b7-156a59040b47",
                "5e68059c-e906-4207-b62e-6fc56ed56492"
              ],
              "skipped": [],
              "duration": 817,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "53cd979b-8b0b-4b47-bd0c-d569b4049daf",
              "title": "stream.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "104b68f2-075c-41b7-93ec-7a096bdba4eb",
                  "title": "persistent",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "creates a persistent local stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent local stream",
                      "timedOut": false,
                      "duration": 408,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, true);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "f8ae441b-2b60-4149-a72c-77c3e42be3a8",
                      "parentUUID": "104b68f2-075c-41b7-93ec-7a096bdba4eb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "creates a persistent global stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent global stream",
                      "timedOut": false,
                      "duration": 409,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, false);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "818cfe48-2bc0-4798-9157-8ca9e2699579",
                      "parentUUID": "104b68f2-075c-41b7-93ec-7a096bdba4eb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "f8ae441b-2b60-4149-a72c-77c3e42be3a8",
                    "818cfe48-2bc0-4798-9157-8ca9e2699579"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 817,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "c5fb18ef-6f4d-44a3-a9ae-b1d51ac6c2dd",
              "title": "stream.manipulate",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 407,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream = fabric.stream(`testStream${Date.now()}`, false);\nawait stream.createStream();",
                  "err": {},
                  "uuid": "5b3c7f8b-fb99-4a24-a202-93249d323ac7",
                  "parentUUID": "c5fb18ef-6f4d-44a3-a9ae-b1d51ac6c2dd",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 512,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                  "err": {},
                  "uuid": "3abe954d-d3c1-4593-baba-97d440616ab9",
                  "parentUUID": "c5fb18ef-6f4d-44a3-a9ae-b1d51ac6c2dd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream.closeConnections();",
                  "err": {},
                  "uuid": "c8a7816c-07c6-47cf-803d-084bf067a2a9",
                  "parentUUID": "c5fb18ef-6f4d-44a3-a9ae-b1d51ac6c2dd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "stream.expireMessagesOnAllSubscriptions",
                  "fullTitle": "Manipulating streams stream.manipulate stream.expireMessagesOnAllSubscriptions",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "4673a4ec-cc53-44c3-b38f-b25b5ad14bba",
                  "parentUUID": "c5fb18ef-6f4d-44a3-a9ae-b1d51ac6c2dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "97311986-8a73-48e5-b482-c23d46e78606",
                  "title": "stream.getBacklog",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets estimated backlog for offline stream",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getBacklog gets estimated backlog for offline stream",
                      "timedOut": false,
                      "duration": 10369,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.backlog();\nconsole.log(response.error);\nchai_1.expect(response.error).to.be.false;",
                      "err": {
                        "message": "C8Error: C8Streams error 500",
                        "estack": "C8Error: C8Streams error 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "0f1064f2-d9f4-4264-b3be-0cf7ec4c0f1e",
                      "parentUUID": "97311986-8a73-48e5-b482-c23d46e78606",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [
                    "0f1064f2-d9f4-4264-b3be-0cf7ec4c0f1e"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 10369,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "b701058d-92c6-45ba-9bfb-f2f93c32f173",
                  "title": "stream.getStreamStatistics",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets the stream statistics",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getStreamStatistics gets the stream statistics",
                      "timedOut": false,
                      "duration": 379,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.getStreamStatistics();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "5b7b3387-4f7d-4a7b-a72a-1f7dced3a548",
                      "parentUUID": "b701058d-92c6-45ba-9bfb-f2f93c32f173",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "5b7b3387-4f7d-4a7b-a72a-1f7dced3a548"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 379,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                  "title": "stream.subscriptions",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "stream.resetSubscriptionToPosition",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetSubscriptionToPosition",
                      "timedOut": true,
                      "duration": 50001,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "let numberOfMessages = 0;\nfunction callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    const array = [\"bmFuZGhh\", \"YWJoaXNoZWs=\", \"dmlwdWw=\", \"c3Vsb20=\", \"cHJhdGlr\"];\n    if (array.includes(payload)) {\n        numberOfMessages++;\n    }\n    ;\n    if (numberOfMessages === 5) {\n        done();\n    }\n}\nstream.consumer(`streamSubscriptionTest`, {\n    onmessage: callback,\n    onopen: () => {\n        stream.producer([\"nandha\", \"abhishek\", \"vipul\", \"sulom\", \"pratik\"], dcName);\n    }\n}, dcName);",
                      "err": {
                        "message": "Error: Timeout of 50000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js)",
                        "estack": "Error: Timeout of 50000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js)",
                        "diff": null
                      },
                      "uuid": "642c7ea4-f4ab-4b0e-bb31-751883e9858c",
                      "parentUUID": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.expireMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.expireMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "490e15c1-1178-4e65-94a2-cd301d5f28c8",
                      "parentUUID": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.resetCursor",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetCursor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "80e5339a-9b38-4594-9136-95e5b08210f2",
                      "parentUUID": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipNumberOfMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipNumberOfMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "060e3917-39d0-484f-8c39-0cb11c5c8d0f",
                      "parentUUID": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipAllMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipAllMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "82a8bbbd-8e76-4725-83ff-9cebeaf6cdfd",
                      "parentUUID": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.getSubscriptionList",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.getSubscriptionList",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it(\"gets subscription list\", async () => {\n    const response = await stream.getSubscriptionList();\n    chai_1.expect(response.error).to.be.false;\n});",
                      "err": {},
                      "uuid": "93e61515-66b2-42f7-936f-86e84fba834c",
                      "parentUUID": "7c68c60f-3fb2-4722-a413-7e1f87ccb248",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "490e15c1-1178-4e65-94a2-cd301d5f28c8",
                    "80e5339a-9b38-4594-9136-95e5b08210f2",
                    "060e3917-39d0-484f-8c39-0cb11c5c8d0f",
                    "82a8bbbd-8e76-4725-83ff-9cebeaf6cdfd",
                    "93e61515-66b2-42f7-936f-86e84fba834c"
                  ],
                  "failures": [
                    "642c7ea4-f4ab-4b0e-bb31-751883e9858c"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 50001,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "ebc9fc40-db3d-4c5a-94c0-8c33007e132a",
                  "title": "stream.terminate",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "e8999019-243d-4c32-8761-5d0545a691d5",
                      "title": "persistent",
                      "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                      "file": "/lib/async/test/28-manipulating-streams.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "d6b23c0c-e7af-4632-9de3-d32e177cf3bc",
                          "title": "local",
                          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local \"before each\" hook",
                              "timedOut": false,
                              "duration": 479,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, true);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "e2ab1e1e-bf63-446d-8a4a-3ac599e20a4b",
                              "parentUUID": "d6b23c0c-e7af-4632-9de3-d32e177cf3bc",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent local stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local terminates persistent local stream",
                              "timedOut": false,
                              "duration": 385,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const response = await stream.terminateStream();\nchai_1.expect(response.error).to.be.false;",
                              "err": {},
                              "uuid": "5dcac8d7-f513-4343-8700-dec102977170",
                              "parentUUID": "d6b23c0c-e7af-4632-9de3-d32e177cf3bc",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "5dcac8d7-f513-4343-8700-dec102977170"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 385,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        },
                        {
                          "uuid": "82baa342-552e-4918-9d2c-7e3a84007f50",
                          "title": "global",
                          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global \"before each\" hook",
                              "timedOut": false,
                              "duration": 379,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, false);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "5a1239ab-9dcf-4901-9e06-57ee718fe402",
                              "parentUUID": "82baa342-552e-4918-9d2c-7e3a84007f50",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent global stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global terminates persistent global stream",
                              "timedOut": false,
                              "duration": 469,
                              "state": "failed",
                              "speed": null,
                              "pass": false,
                              "fail": true,
                              "pending": false,
                              "context": null,
                              "code": "const response = await stream.terminateStream();\nchai_1.expect(response.error).to.be.false;",
                              "err": {
                                "message": "C8Error: C8Streams error 404",
                                "estack": "C8Error: C8Streams error 404\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                                "diff": null
                              },
                              "uuid": "6ab66476-c096-4453-b240-28decfdde7ac",
                              "parentUUID": "82baa342-552e-4918-9d2c-7e3a84007f50",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [],
                          "failures": [
                            "6ab66476-c096-4453-b240-28decfdde7ac"
                          ],
                          "pending": [],
                          "skipped": [],
                          "duration": 469,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 50000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "c6f70c22-3778-4254-a0b6-eaa2594eba1b",
                  "title": "stream.websocket",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"before all\" hook",
                      "timedOut": false,
                      "duration": 403,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                      "err": {},
                      "uuid": "82ae0ce6-f91d-4379-843e-8f2cdd9d886e",
                      "parentUUID": "c6f70c22-3778-4254-a0b6-eaa2594eba1b",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"after all\" hook",
                      "timedOut": false,
                      "duration": 1,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "stream.closeConnections();",
                      "err": {},
                      "uuid": "f32eb00a-28e5-4a77-b4e4-591a53a7b065",
                      "parentUUID": "c6f70c22-3778-4254-a0b6-eaa2594eba1b",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "gets data in consumer when sent by producer",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket gets data in consumer when sent by producer",
                      "timedOut": false,
                      "duration": 2768,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "function callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    chai_1.expect(payload).to.equal(\"dGVzdA==\");\n    done();\n}\nstream.consumer(`streamSubscription${Date.now()}`, {\n    onmessage: callback,\n    onopen: () => stream.producer(\"test\", dcName)\n}, dcName);",
                      "err": {},
                      "uuid": "4aaea9bb-e60a-41fe-8847-75f9471e439b",
                      "parentUUID": "c6f70c22-3778-4254-a0b6-eaa2594eba1b",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4aaea9bb-e60a-41fe-8847-75f9471e439b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 2768,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "4673a4ec-cc53-44c3-b38f-b25b5ad14bba"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "1ba50037-d011-46da-bd7f-5fe7d46d1cc0",
          "title": "manipulating spot",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
          "file": "/lib/async/test/29-manipulating-spot.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating spot \"before all\" hook",
              "timedOut": false,
              "duration": 1485,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nlocalLocation = await fabric.getLocalEdgeLocation();\nname = localLocation.name;",
              "err": {},
              "uuid": "ce44e972-089c-4865-a344-e37ef071647d",
              "parentUUID": "1ba50037-d011-46da-bd7f-5fe7d46d1cc0",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating spot \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "a3336732-7043-4075-a839-7b59ea3c1bb8",
              "parentUUID": "1ba50037-d011-46da-bd7f-5fe7d46d1cc0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "e7ae8440-ed04-48a3-a490-4ad7780afd4e",
              "title": "spot_region status of a region",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should change the spot_region of a region",
                  "fullTitle": "manipulating spot spot_region status of a region should change the spot_region of a region",
                  "timedOut": false,
                  "duration": 579,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const currentSpotStatus = localLocation.spot_region;\nawait fabric.changeEdgeLocationSpotStatus(name, !currentSpotStatus);\nconst changedLocation = await fabric.getLocalEdgeLocation();\nconst changedSpotStatus = changedLocation.spot_region;\nchai_1.expect(changedLocation).to.equal(!changedSpotStatus);",
                  "err": {
                    "message": "AssertionError: expected { Object (_id, _key, ...) } to equal true",
                    "estack": "AssertionError: expected { Object (_id, _key, ...) } to equal true\n    at Context.it (src/test/29-manipulating-spot.ts:35:34)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "748556fd-57be-4334-8167-cd5e089d5145",
                  "parentUUID": "e7ae8440-ed04-48a3-a490-4ad7780afd4e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not change the spot_region to false if a fabric's spot primary is that region",
                  "fullTitle": "manipulating spot spot_region status of a region should not change the spot_region to false if a fabric's spot primary is that region",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "7f135ff3-071d-4422-a227-fe1a127c6836",
                  "parentUUID": "e7ae8440-ed04-48a3-a490-4ad7780afd4e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "748556fd-57be-4334-8167-cd5e089d5145"
              ],
              "pending": [
                "7f135ff3-071d-4422-a227-fe1a127c6836"
              ],
              "skipped": [],
              "duration": 579,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "40ff9372-64f2-47dc-b81f-ebdf4bb877d0",
              "title": "spot fabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "manipulating spot spot fabric \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.dropFabric(fabricName);",
                  "err": {},
                  "uuid": "3ea068ef-b3f0-4956-8178-ab9d126cc628",
                  "parentUUID": "40ff9372-64f2-47dc-b81f-ebdf4bb877d0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should create a fabric with a spot primary region",
                  "fullTitle": "manipulating spot spot fabric should create a fabric with a spot primary region",
                  "timedOut": false,
                  "duration": 689,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.changeEdgeLocationSpotStatus(name, true);\nconst options = {\n    dcList: name,\n    spotDc: name\n};\nconst response = await fabric.createFabric(fabricName, undefined, options);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "bb581224-d494-48f0-82f3-394fb4ccc9cf",
                  "parentUUID": "40ff9372-64f2-47dc-b81f-ebdf4bb877d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change the spot primary region of a fabric",
                  "fullTitle": "manipulating spot spot fabric should change the spot primary region of a fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9c61713f-25b1-4dc2-bfd2-7a1d020423a3",
                  "parentUUID": "40ff9372-64f2-47dc-b81f-ebdf4bb877d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bb581224-d494-48f0-82f3-394fb4ccc9cf"
              ],
              "failures": [],
              "pending": [
                "9c61713f-25b1-4dc2-bfd2-7a1d020423a3"
              ],
              "skipped": [],
              "duration": 689,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "1dfa1302-a7b9-4140-b9e6-8f759a8fb744",
              "title": "spot collection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a spot document collection",
                  "fullTitle": "manipulating spot spot collection should create a spot document collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c3b2ed56-f29b-4856-99cd-1d9c1e118a67",
                  "parentUUID": "1dfa1302-a7b9-4140-b9e6-8f759a8fb744",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a spot edge collection",
                  "fullTitle": "manipulating spot spot collection should create a spot edge collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "1f70b332-c3a0-45fd-9fa2-db07c087d49d",
                  "parentUUID": "1dfa1302-a7b9-4140-b9e6-8f759a8fb744",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "6130aeeb-5259-47b8-bcc4-299165e4939e",
                  "title": "mapulating spot collection's region",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
                  "file": "/lib/async/test/29-manipulating-spot.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should change the spot region of a spot collection to none",
                      "fullTitle": "manipulating spot spot collection mapulating spot collection's region should change the spot region of a spot collection to none",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "c502f1cf-6bb0-4651-a3d3-3dc56dfdff36",
                      "parentUUID": "6130aeeb-5259-47b8-bcc4-299165e4939e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should change the spot region of a spot collection to some other region",
                      "fullTitle": "manipulating spot spot collection mapulating spot collection's region should change the spot region of a spot collection to some other region",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "abfff2c7-3125-44d2-8544-559d5177c580",
                      "parentUUID": "6130aeeb-5259-47b8-bcc4-299165e4939e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "c502f1cf-6bb0-4651-a3d3-3dc56dfdff36",
                    "abfff2c7-3125-44d2-8544-559d5177c580"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "c3b2ed56-f29b-4856-99cd-1d9c1e118a67",
                "1f70b332-c3a0-45fd-9fa2-db07c087d49d"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "9b76d3dc-457d-451f-94b0-61d2d92d4c8f",
          "title": "User Management",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
          "file": "/lib/async/test/30-user-management.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "User Management \"before all\" hook",
              "timedOut": false,
              "duration": 1529,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "c18da603-0a22-413a-94a4-1f17cd496a1f",
              "parentUUID": "9b76d3dc-457d-451f-94b0-61d2d92d4c8f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "User Management \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "8d4e546e-bb7d-4095-9a04-a0b27c93de42",
              "parentUUID": "9b76d3dc-457d-451f-94b0-61d2d92d4c8f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "367bea4a-781d-4244-9858-124a58cfd59c",
              "title": "fabric.user",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new user instance",
                  "fullTitle": "User Management fabric.user creates a new user instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.user(\"testUser\", \"testUser@test.com\")).to.be.instanceof(user_1.default);",
                  "err": {},
                  "uuid": "028e4760-bf1b-48ef-9049-796dac1b6d30",
                  "parentUUID": "367bea4a-781d-4244-9858-124a58cfd59c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "028e4760-bf1b-48ef-9049-796dac1b6d30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "42c76e1c-3fc8-4fa9-be77-9579c203e29e",
              "title": "user.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "User Management user.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 414,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await user.deleteUser();",
                  "err": {},
                  "uuid": "10cabd29-5085-48b3-b824-ff4d2828156b",
                  "parentUUID": "42c76e1c-3fc8-4fa9-be77-9579c203e29e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a user",
                  "fullTitle": "User Management user.create creates a user",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nconst response = await user.createUser(\"testPass\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "0163364c-266b-4be7-9236-36ef4af57b7b",
                  "parentUUID": "42c76e1c-3fc8-4fa9-be77-9579c203e29e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0163364c-266b-4be7-9236-36ef4af57b7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 305,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "0e786dba-a398-46dc-a12f-629336187048",
              "title": "fabric.getAllUsers",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Lists all users",
                  "fullTitle": "User Management fabric.getAllUsers Lists all users",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllUsers();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "dd56023b-55c6-4d6a-83df-ede8e0927b77",
                  "parentUUID": "0e786dba-a398-46dc-a12f-629336187048",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dd56023b-55c6-4d6a-83df-ede8e0927b77"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 305,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "6ea8471c-db29-4dbe-9747-3e2ed6ab32b9",
              "title": "user.crud_operations",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "User Management user.crud_operations \"before each\" hook",
                  "timedOut": false,
                  "duration": 307,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nawait user.createUser(\"testPass\");",
                  "err": {},
                  "uuid": "6723b166-f6bc-4b5d-984b-41330f0d5ba1",
                  "parentUUID": "6ea8471c-db29-4dbe-9747-3e2ed6ab32b9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "User Management user.crud_operations \"after each\" hook",
                  "timedOut": false,
                  "duration": 308,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await user.deleteUser();\n}\ncatch (error) { }",
                  "err": {},
                  "uuid": "76392d41-fab1-449c-aad2-02b6318fbfc2",
                  "parentUUID": "6ea8471c-db29-4dbe-9747-3e2ed6ab32b9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [],
              "suites": [
                {
                  "uuid": "cb15a82c-4a5c-4ae5-8db6-bf40727d91c1",
                  "title": "user.deleteUser",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deletes a user",
                      "fullTitle": "User Management user.crud_operations user.deleteUser Deletes a user",
                      "timedOut": false,
                      "duration": 407,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.deleteUser();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "8f53369a-e6a6-4e3f-9abf-4ba073c57e9f",
                      "parentUUID": "cb15a82c-4a5c-4ae5-8db6-bf40727d91c1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8f53369a-e6a6-4e3f-9abf-4ba073c57e9f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 407,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "b704bd56-9ddd-4592-a19d-a93ab244f2b3",
                  "title": "user.getUserDetails",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Fetches a user",
                      "fullTitle": "User Management user.crud_operations user.getUserDetails Fetches a user",
                      "timedOut": false,
                      "duration": 305,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getUserDeatils();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "492f1876-d3a2-4b7a-b903-be036a08bdf8",
                      "parentUUID": "b704bd56-9ddd-4592-a19d-a93ab244f2b3",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "492f1876-d3a2-4b7a-b903-be036a08bdf8"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 305,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "cedf89bc-3e7b-4f1e-86a1-c847eb7f6644",
                  "title": "user.modifyUser",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.modifyUser Modifies a user",
                      "timedOut": false,
                      "duration": 259,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.modifyUser({\n    active: false\n});\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.active).to.be.false;",
                      "err": {},
                      "uuid": "4b194d71-36a0-47fb-b5e4-060e6e1183ac",
                      "parentUUID": "cedf89bc-3e7b-4f1e-86a1-c847eb7f6644",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "4b194d71-36a0-47fb-b5e4-060e6e1183ac"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 259,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "bee1fa01-7e78-4ab9-99c7-f02b01849912",
                  "title": "user.replaceUser",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.replaceUser Modifies a user",
                      "timedOut": false,
                      "duration": 307,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.replaceUser({\n    passwd: \"test_passwordddd\"\n});\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "11ecba2a-5504-496e-80f5-4aa456157218",
                      "parentUUID": "bee1fa01-7e78-4ab9-99c7-f02b01849912",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "11ecba2a-5504-496e-80f5-4aa456157218"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 307,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                  "title": "User.FabricAccessOperations",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"before each\" hook",
                      "timedOut": false,
                      "duration": 410,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await fabric.createFabric(testFabricName, [{ username: user.user }], {\n    dcList: dcList\n});\nfabric.useFabric(testFabricName);",
                      "err": {},
                      "uuid": "a934c2e7-b460-4fd9-bb8a-7f2db29a2440",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"after each\" hook",
                      "timedOut": false,
                      "duration": 410,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(testFabricName);",
                      "err": {},
                      "uuid": "dacfb5af-b53f-4f93-8276-be36b1fd5ab7",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "Lists the accessible databases and their permissions ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions ",
                      "timedOut": false,
                      "duration": 310,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).not.exist;",
                      "err": {},
                      "uuid": "d6ebb559-c9db-4b20-b246-5995fc6220a8",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Lists the accessible databases and their permissions with all the collections",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions with all the collections",
                      "timedOut": false,
                      "duration": 310,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases(true);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).to.exist;",
                      "err": {},
                      "uuid": "13eb795a-33ff-471c-a65d-b9a8106c9313",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a database ",
                      "timedOut": false,
                      "duration": 306,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result).to.be.oneOf([\"rw\", \"ro\", \"none\"]);",
                      "err": {},
                      "uuid": "f540b3b0-2859-4d9d-8cd4-0a2671857035",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 612,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.getCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "878a9e72-5f56-4b2b-95fe-a31a676be5b6",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a database ",
                      "timedOut": false,
                      "duration": 260,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.clearDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {},
                      "uuid": "57723703-80a4-45eb-a9b1-2a6492674450",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 609,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.clearCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {
                        "message": "C8Error: database not found",
                        "estack": "C8Error: database not found\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "1f0c79ac-edc9-45df-8bad-742e4a9b6992",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 665,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.setCollectionAccessLevel(testFabricName, collectionName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}/${collectionName}`]).eq(\"ro\");",
                      "err": {
                        "message": "C8Error: database not found",
                        "estack": "C8Error: database not found\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "6d1f5e11-eb3b-4775-bebf-307df3bbaa3e",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a database",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a database",
                      "timedOut": false,
                      "duration": 306,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.setDatabaseAccessLevel(testFabricName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}`]).eq(\"ro\");",
                      "err": {},
                      "uuid": "aeae4571-6c9f-4ba8-9b90-35873d372cd0",
                      "parentUUID": "ea8cd9e4-aaac-4517-a608-39cd5b193adb",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d6ebb559-c9db-4b20-b246-5995fc6220a8",
                    "13eb795a-33ff-471c-a65d-b9a8106c9313",
                    "f540b3b0-2859-4d9d-8cd4-0a2671857035",
                    "878a9e72-5f56-4b2b-95fe-a31a676be5b6",
                    "57723703-80a4-45eb-a9b1-2a6492674450",
                    "aeae4571-6c9f-4ba8-9b90-35873d372cd0"
                  ],
                  "failures": [
                    "1f0c79ac-edc9-45df-8bad-742e4a9b6992",
                    "6d1f5e11-eb3b-4775-bebf-307df3bbaa3e"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 3378,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "c2e52089-740e-4585-bc83-06c69f9740a1",
          "title": "manipulating restql",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
          "file": "/lib/async/test/31-restql.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating restql \"before all\" hook",
              "timedOut": false,
              "duration": 1608,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "063a7811-eb46-4d82-9cab-f522b3db6e47",
              "parentUUID": "c2e52089-740e-4585-bc83-06c69f9740a1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating restql \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "d4ee1150-117d-445b-8880-af2b22c548af",
              "parentUUID": "c2e52089-740e-4585-bc83-06c69f9740a1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "5af246ab-a15b-4947-815f-85744e62243a",
              "title": "fabric.saveQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should save a query",
                  "fullTitle": "manipulating restql fabric.saveQuery should save a query",
                  "timedOut": false,
                  "duration": 438,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const queryName = \"testQuery\";\nconst response = await fabric.saveQuery(queryName, {}, \"for coll in _collections return coll\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.name).to.equal(queryName);",
                  "err": {},
                  "uuid": "5c241f43-ee50-4f08-920d-bd9ad97a6640",
                  "parentUUID": "5af246ab-a15b-4947-815f-85744e62243a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5c241f43-ee50-4f08-920d-bd9ad97a6640"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 438,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "5fd714a7-e20c-438c-8536-bdfe94a4e286",
              "title": "fabric.listSavedQueries",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should make a successful API call",
                  "fullTitle": "manipulating restql fabric.listSavedQueries should make a successful API call",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.listSavedQueries();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.length).to.be.at.least(1);",
                  "err": {},
                  "uuid": "840b3ed3-8bdd-4150-99d4-925211684d7c",
                  "parentUUID": "5fd714a7-e20c-438c-8536-bdfe94a4e286",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "840b3ed3-8bdd-4150-99d4-925211684d7c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 410,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "7b199da7-ab10-47e4-8848-47cd0dbdb256",
              "title": "fabric.executeSavedQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery \"before all\" hook",
                  "timedOut": false,
                  "duration": 513,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.executeSavedQuery(queryName, {});",
                  "err": {},
                  "uuid": "03088950-4475-4119-a6ce-6ce6c511ee91",
                  "parentUUID": "7b199da7-ab10-47e4-8848-47cd0dbdb256",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a saved query",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery should execute a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "fcbb2a1f-0d97-4c37-8a4a-8e31d05e4b57",
                  "parentUUID": "7b199da7-ab10-47e4-8848-47cd0dbdb256",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fcbb2a1f-0d97-4c37-8a4a-8e31d05e4b57"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "fb456ec7-bdc5-4365-9c5b-69da60ef045d",
              "title": "fabric.deleteSavedQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.deleteSavedQuery should delete a saved query",
                  "timedOut": false,
                  "duration": 403,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.deleteSavedQuery(queryName);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "140dc740-044b-4526-9f26-b91b37ac46ad",
                  "parentUUID": "fb456ec7-bdc5-4365-9c5b-69da60ef045d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "140dc740-044b-4526-9f26-b91b37ac46ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 403,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "d4e17892-3bc2-487f-a025-d18802dc00ca",
              "title": "fabric.createRestqlCursor",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.createRestqlCursor should delete a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "043a631f-0cd4-4bbd-9e00-d8b7cac6e8de",
                  "parentUUID": "d4e17892-3bc2-487f-a025-d18802dc00ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "043a631f-0cd4-4bbd-9e00-d8b7cac6e8de"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "9d1d16f4-12d7-47c7-b393-5eac5dd91730",
          "title": "fabric.route",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
          "file": "/lib/async/test/31-restql.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns a Route instance",
              "fullTitle": "fabric.route returns a Route instance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route();\nchai_1.expect(route).to.be.an.instanceof(route_1.Route);",
              "err": {},
              "uuid": "21b62ad5-07b6-4503-aaec-ff31b08709f5",
              "parentUUID": "9d1d16f4-12d7-47c7-b393-5eac5dd91730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates a route for the given path",
              "fullTitle": "fabric.route creates a route for the given path",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = \"/hi\";\nconst route = fabric.route(path);\nchai_1.expect(route._path).to.equal(path);",
              "err": {},
              "uuid": "8f0694ee-bfd7-4f27-83c9-5166eaf083c1",
              "parentUUID": "9d1d16f4-12d7-47c7-b393-5eac5dd91730",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passes the given headers to the new route",
              "fullTitle": "fabric.route passes the given headers to the new route",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route(\"/hello\", { \"x-magic\": \"awesome\" });\nchai_1.expect(route._headers).to.have.property(\"x-magic\", \"awesome\");",
              "err": {},
              "uuid": "1c23d62a-c163-4ebc-a6b0-c0ab164029c3",
              "parentUUID": "9d1d16f4-12d7-47c7-b393-5eac5dd91730",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21b62ad5-07b6-4503-aaec-ff31b08709f5",
            "8f0694ee-bfd7-4f27-83c9-5166eaf083c1",
            "1c23d62a-c163-4ebc-a6b0-c0ab164029c3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "ef192cca-cbd5-4812-8234-5eca6139272a"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.1.0"
    }
  }
}