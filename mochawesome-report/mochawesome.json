{
  "stats": {
    "suites": 162,
    "tests": 219,
    "passes": 174,
    "pending": 20,
    "failures": 25,
    "start": "2020-02-20T06:03:07.533Z",
    "end": "2020-02-20T06:06:23.138Z",
    "duration": 195605,
    "testsRegistered": 227,
    "passPercent": 84.05797101449275,
    "pendingPercent": 8.81057268722467,
    "other": 5,
    "hasOther": true,
    "skipped": 8,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "e4d506e6-5d19-4059-9a44-cf64e6620cf3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "gets subscription list",
          "fullTitle": "gets subscription list",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const response = await stream.getSubscriptionList();\nchai_1.expect(response.error).to.be.false;",
          "err": {},
          "uuid": "6e637b85-8feb-4930-b2f5-3cb69e3ecf6f",
          "parentUUID": "e4d506e6-5d19-4059-9a44-cf64e6620cf3",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "40381f1e-37fc-44ba-a302-2e5431764251",
          "title": "Creating a Fabric",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "678fd6b3-f8b0-4ef8-af37-7d658e9ca805",
              "title": "using the factory",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the factory returns a Fabric instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "bddada5c-6b09-44dd-9d69-951b7eb68394",
                  "parentUUID": "678fd6b3-f8b0-4ef8-af37-7d658e9ca805",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the factory passes any configs to the connection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 54321);",
                  "err": {},
                  "uuid": "dd6f974c-81a3-4ecb-8119-06138f29d15d",
                  "parentUUID": "678fd6b3-f8b0-4ef8-af37-7d658e9ca805",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bddada5c-6b09-44dd-9d69-951b7eb68394",
                "dd6f974c-81a3-4ecb-8119-06138f29d15d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "6b93bc68-e06f-4a74-a6fd-a69abdc3ab1e",
              "title": "using the constructor",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Fabric instance",
                  "fullTitle": "Creating a Fabric using the constructor returns a Fabric instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric).to.be.an.instanceof(jsC8_1.Fabric);",
                  "err": {},
                  "uuid": "4bb297da-6ce9-4aeb-9780-31c0f1b10d7c",
                  "parentUUID": "6b93bc68-e06f-4a74-a6fd-a69abdc3ab1e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "passes any configs to the connection",
                  "fullTitle": "Creating a Fabric using the constructor passes any configs to the connection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric._connection).to.have.property(\"_c8Version\", 43210);",
                  "err": {},
                  "uuid": "c9ee7e0a-f097-4b76-9e26-8e47fedcadee",
                  "parentUUID": "6b93bc68-e06f-4a74-a6fd-a69abdc3ab1e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bb297da-6ce9-4aeb-9780-31c0f1b10d7c",
                "c9ee7e0a-f097-4b76-9e26-8e47fedcadee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "7ad7571a-3b56-4b2d-b22f-f07a13ba46a9",
          "title": "Configuring the driver",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
          "file": "/lib/async/test/00-basics.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "86454409-967a-4a9b-9b1d-b6d78ab1773a",
              "title": "with a string",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the url",
                  "fullTitle": "Configuring the driver with a string sets the url",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "5c74286a-aff1-40e5-b40b-4407c65dfa34",
                  "parentUUID": "86454409-967a-4a9b-9b1d-b6d78ab1773a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "5c74286a-aff1-40e5-b40b-4407c65dfa34"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8f18508c-11bf-41b5-b3c7-b5ca82caae02",
              "title": "with headers",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "applies the headers",
                  "fullTitle": "Configuring the driver with headers applies the headers",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({\n    headers: {\n        \"x-one\": \"1\",\n        \"x-two\": \"2\"\n    }\n});\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-one\", \"1\");\n        chai_1.expect(headers).to.have.property(\"x-two\", \"2\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "7b894599-411e-4378-b6bd-f324dbb84d98",
                  "parentUUID": "8f18508c-11bf-41b5-b3c7-b5ca82caae02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b894599-411e-4378-b6bd-f324dbb84d98"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "4caae881-c695-41ab-a8ab-16c25bccb486",
              "title": "with an c8Version",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "sets the x-c8-version header",
                  "fullTitle": "Configuring the driver with an c8Version sets the x-c8-version header",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const conn = new connection_1.Connection({ c8Version: 99999 });\nconn._hosts = [\n    ({ headers }) => {\n        chai_1.expect(headers).to.have.property(\"x-c8-version\", \"99999\");\n        done();\n    }\n];\nconn.request({ headers: {} }, () => { });",
                  "err": {},
                  "uuid": "e59872f3-e9ab-43e0-bf48-d769dde9972e",
                  "parentUUID": "4caae881-c695-41ab-a8ab-16c25bccb486",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e59872f3-e9ab-43e0-bf48-d769dde9972e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "c26ed40a-8169-4889-8d00-f3cda966b8eb",
              "title": "with agentOptions",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Agent = (ptcl) => function (opts) {\n    protocol = ptcl;\n    options = opts;\n    return () => null;\n};\nhttp.Agent = Agent(\"http\");\nhttps.Agent = Agent(\"https\");",
                  "err": {},
                  "uuid": "3118b5c5-46f2-4e90-9c54-879b895c68c5",
                  "parentUUID": "c26ed40a-8169-4889-8d00-f3cda966b8eb",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "776573f7-553a-4903-b7bc-2500800c4cfe",
                  "parentUUID": "c26ed40a-8169-4889-8d00-f3cda966b8eb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agentOptions \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.Agent = _httpAgent;\nhttps.Agent = _httpsAgent;",
                  "err": {},
                  "uuid": "5e96b593-9698-4532-9df5-9c79a22ce178",
                  "parentUUID": "c26ed40a-8169-4889-8d00-f3cda966b8eb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agentOptions to the agent",
                  "fullTitle": "Configuring the driver with agentOptions passes the agentOptions to the agent",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "new connection_1.Connection({ agentOptions: { hello: \"world\" } }); // eslint-disable-line no-new\nchai_1.expect(options).to.have.property(\"hello\", \"world\");",
                  "err": {},
                  "uuid": "b30ee437-d486-416c-b783-2adae9e79d71",
                  "parentUUID": "c26ed40a-8169-4889-8d00-f3cda966b8eb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the built-in agent for the protocol",
                  "fullTitle": "Configuring the driver with agentOptions uses the built-in agent for the protocol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// default: http\nnew connection_1.Connection(); // eslint-disable-line no-new\n// expect(protocol).to.equal(\"http\");\nnew connection_1.Connection(\"https://test.macrometa.io\"); // eslint-disable-line no-new\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "befb2b38-239d-4632-b955-e6d0508afe5f",
                  "parentUUID": "c26ed40a-8169-4889-8d00-f3cda966b8eb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b30ee437-d486-416c-b783-2adae9e79d71",
                "befb2b38-239d-4632-b955-e6d0508afe5f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
              "title": "with agent",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/00-basics.js",
              "file": "/lib/async/test/00-basics.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Configuring the driver with agent \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let Request = (ptcl) => (opts) => {\n    protocol = ptcl;\n    options = opts;\n    return {\n        on() {\n            return this;\n        },\n        end() {\n            return this;\n        }\n    };\n};\nhttp.request = Request(\"http\");\nhttps.request = Request(\"https\");",
                  "err": {},
                  "uuid": "a2686d08-9a51-43e9-944c-548666e50f22",
                  "parentUUID": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Configuring the driver with agent \"before each\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "protocol = undefined;\noptions = undefined;",
                  "err": {},
                  "uuid": "d07e9676-a91e-4b66-a6a0-31b721d0b43f",
                  "parentUUID": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Configuring the driver with agent \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "http.request = _httpRequest;\nhttps.request = _httpsRequest;",
                  "err": {},
                  "uuid": "0472a9b2-ca6e-4e29-bec2-516cccae74e3",
                  "parentUUID": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "passes the agent to the request function",
                  "fullTitle": "Configuring the driver with agent passes the agent to the request function",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: https\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);\nagent = Symbol(\"agent\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(options).to.have.property(\"agent\", agent);",
                  "err": {},
                  "uuid": "12189654-eab2-4849-9104-c57d29ce4aa3",
                  "parentUUID": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the request function for the protocol",
                  "fullTitle": "Configuring the driver with agent uses the request function for the protocol",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = Symbol(\"agent\");\nlet conn;\nconn = new connection_1.Connection({ agent }); // default: http\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");\nconn = new connection_1.Connection({ agent, url: \"https://test.macrometa.io\" });\nconn.request({ headers: {} }, () => { });\nchai_1.expect(protocol).to.equal(\"https\");",
                  "err": {},
                  "uuid": "f92a6902-a643-4b9c-8588-47633b7ef714",
                  "parentUUID": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "calls Agent#destroy when the connection is closed",
                  "fullTitle": "Configuring the driver with agent calls Agent#destroy when the connection is closed",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const agent = {\n    _destroyed: false,\n    destroy() {\n        this._destroyed = true;\n    }\n};\nconst conn = new connection_1.Connection({ agent });\nchai_1.expect(agent._destroyed).to.equal(false);\nconn.close();\nchai_1.expect(agent._destroyed).to.equal(true);",
                  "err": {},
                  "uuid": "6eeaf7c1-7ae7-499d-ab1f-8a2dde6804ad",
                  "parentUUID": "8840c11a-795b-43f1-ae98-731ca6ec8efe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "12189654-eab2-4849-9104-c57d29ce4aa3",
                "f92a6902-a643-4b9c-8588-47633b7ef714",
                "6eeaf7c1-7ae7-499d-ab1f-8a2dde6804ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "adc38215-809e-4dda-8a18-62cc7382f69d",
          "title": "Manipulating fabrics",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
          "file": "/lib/async/test/01-manipulating-fabrics.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 1425,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "a00b21d9-efd3-41e7-942f-d46314b26ec1",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating fabrics \"before all\" hook",
              "timedOut": false,
              "duration": 906,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const fabric2 = new jsC8_1.Fabric({\n    url: testUrl\n});\nawait fabric2.login(\"guest@macrometa.io\", \"guest\");\nfabric2.useTenant(\"guest\");\ncollection = fabric2.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "f59dc761-53b9-452b-9149-25d068c03184",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 642,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "e099ea13-c71b-443e-af8c-a10ada1bea03",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating fabrics \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\")",
              "err": {},
              "uuid": "9a429125-162a-4ffe-844c-454f2be6b9b1",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "c45194dc-e47c-44b4-90b5-cfd74001119f",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating fabrics \"after all\" hook",
              "timedOut": false,
              "duration": 193,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.drop();",
              "err": {},
              "uuid": "6d44a4c4-e163-4f72-b537-4a239328af97",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating fabrics \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "b4803f90-9a53-41cc-8cd7-1b2c3e328ba0",
              "parentUUID": "adc38215-809e-4dda-8a18-62cc7382f69d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "8adb8db8-ffbd-4817-8f89-5827de0af8a1",
              "title": "fabric.version",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return the version object when no details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when no details are required",
                  "timedOut": false,
                  "duration": 118,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version();\nchai_1.expect(response.server).to.equal(\"C8\");",
                  "err": {
                    "message": "AssertionError: expected 'C8DB' to equal 'C8'",
                    "estack": "AssertionError: expected 'C8DB' to equal 'C8'\n    at Context.it (src/test/01-manipulating-fabrics.ts:55:34)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- C8DB\n+ C8\n"
                  },
                  "uuid": "c3e56480-6bda-4886-904b-ae22914585d6",
                  "parentUUID": "8adb8db8-ffbd-4817-8f89-5827de0af8a1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return the version object when details are required",
                  "fullTitle": "Manipulating fabrics fabric.version should return the version object when details are required",
                  "timedOut": false,
                  "duration": 112,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.version(true);\nchai_1.expect(response.server).to.equal(\"C8\");\nchai_1.expect(response.details).to.haveOwnProperty(\"C8DB\");",
                  "err": {
                    "message": "AssertionError: expected 'C8DB' to equal 'C8'",
                    "estack": "AssertionError: expected 'C8DB' to equal 'C8'\n    at Context.it (src/test/01-manipulating-fabrics.ts:59:34)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- C8DB\n+ C8\n"
                  },
                  "uuid": "793a59d7-93bb-4169-ae0f-960b9f58e62f",
                  "parentUUID": "8adb8db8-ffbd-4817-8f89-5827de0af8a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "c3e56480-6bda-4886-904b-ae22914585d6",
                "793a59d7-93bb-4169-ae0f-960b9f58e62f"
              ],
              "pending": [],
              "skipped": [],
              "duration": 230,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "cf1b6bbc-733f-4ea2-9a20-eabbe9a44997",
              "title": "fabric.useFabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the fabric name",
                  "fullTitle": "Manipulating fabrics fabric.useFabric updates the fabric name",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const name = \"example\";\nchai_1.expect(fabric.name).to.equal(\"_system\"); // default\nfabric.useFabric(name);\nchai_1.expect(fabric._connection).to.have.property(\"_fabricName\", name);\nchai_1.expect(fabric.name).to.equal(name);",
                  "err": {},
                  "uuid": "7b37c48b-4687-4354-945d-4cf4c7621874",
                  "parentUUID": "cf1b6bbc-733f-4ea2-9a20-eabbe9a44997",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns itself",
                  "fullTitle": "Manipulating fabrics fabric.useFabric returns itself",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabric2 = fabric.useFabric(\"nope\");\nchai_1.expect(fabric).to.equal(fabric2);",
                  "err": {},
                  "uuid": "6ccb1b00-122a-4baf-860f-d2de54b8a211",
                  "parentUUID": "cf1b6bbc-733f-4ea2-9a20-eabbe9a44997",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b37c48b-4687-4354-945d-4cf4c7621874",
                "6ccb1b00-122a-4baf-860f-d2de54b8a211"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a6db52ea-13c8-4a82-b23b-d7805e1aeab3",
              "title": "fabric.edgeLocations",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "gets all the edge locations",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets all the edge locations",
                  "timedOut": false,
                  "duration": 1031,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllEdgeLocations();\nchai_1.expect(Array.isArray(response)).to.be.true;\nchai_1.expect(response[0]).to.haveOwnProperty(\"_id\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"name\");\nchai_1.expect(response[0]).to.haveOwnProperty(\"tags\");\nchai_1.expect(response.length).to.be.greaterThan(0);",
                  "err": {},
                  "uuid": "4e6f44e4-870e-41bb-be52-5905d9d63efd",
                  "parentUUID": "a6db52ea-13c8-4a82-b23b-d7805e1aeab3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets local edge location",
                  "fullTitle": "Manipulating fabrics fabric.edgeLocations gets local edge location",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\nchai_1.expect(Array.isArray(response)).to.be.false;\nchai_1.expect(response).to.haveOwnProperty(\"_id\");\nchai_1.expect(response).to.haveOwnProperty(\"name\");\nchai_1.expect(response).to.haveOwnProperty(\"tags\");",
                  "err": {},
                  "uuid": "e8e76b70-e10a-46f3-9aac-3dd375958293",
                  "parentUUID": "a6db52ea-13c8-4a82-b23b-d7805e1aeab3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e6f44e4-870e-41bb-be52-5905d9d63efd",
                "e8e76b70-e10a-46f3-9aac-3dd375958293"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1149,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a91b0ff4-7c18-4d28-9f91-dce9511f08c3",
              "title": "fabric.createFabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.createFabric \"after each\" hook",
                  "timedOut": false,
                  "duration": 215,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "08b68ff6-59f4-49b0-8ed9-43075eb67435",
                  "parentUUID": "a91b0ff4-7c18-4d28-9f91-dce9511f08c3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a fabric with the given name",
                  "fullTitle": "Manipulating fabrics fabric.createFabric creates a fabric with the given name",
                  "timedOut": false,
                  "duration": 510,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nconst info = await fabric.get();\nchai_1.expect(info.name).to.equal(name);",
                  "err": {},
                  "uuid": "0a587b16-c262-46f2-a848-2250647f5574",
                  "parentUUID": "a91b0ff4-7c18-4d28-9f91-dce9511f08c3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "adds the given users to the fabric",
                  "fullTitle": "Manipulating fabrics fabric.createFabric adds the given users to the fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "fe653acf-cb95-47f6-bdce-a55d4cc38778",
                  "parentUUID": "a91b0ff4-7c18-4d28-9f91-dce9511f08c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0a587b16-c262-46f2-a848-2250647f5574"
              ],
              "failures": [],
              "pending": [
                "fe653acf-cb95-47f6-bdce-a55d4cc38778"
              ],
              "skipped": [],
              "duration": 510,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "54d4f259-0a41-48e4-af6d-c32df1470c04",
              "title": "fabric.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetches the fabric description if the fabric exists",
                  "fullTitle": "Manipulating fabrics fabric.get fetches the fabric description if the fabric exists",
                  "timedOut": false,
                  "duration": 715,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await fabric.get();\nchai_1.expect(info.name).to.equal(fabric.name);\nchai_1.expect(fabric.name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "07eb99e4-6b7f-41fa-8c41-ac95dbbca3ab",
                  "parentUUID": "54d4f259-0a41-48e4-af6d-c32df1470c04",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "fails if the fabric does not exist",
                  "fullTitle": "Manipulating fabrics fabric.get fails if the fabric does not exist",
                  "timedOut": false,
                  "duration": 715,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"__does_not_exist__\");\ntry {\n    await fabric.get();\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n    return;\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "ec54c4f0-7408-4af2-b9d8-cb620a6534ff",
                  "parentUUID": "54d4f259-0a41-48e4-af6d-c32df1470c04",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "07eb99e4-6b7f-41fa-8c41-ac95dbbca3ab",
                "ec54c4f0-7408-4af2-b9d8-cb620a6534ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1430,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "60920fd9-84d6-4906-8592-6fbc7769f9ab",
              "title": "fabric.listFabrics",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of all fabrics",
                  "fullTitle": "Manipulating fabrics fabric.listFabrics returns a list of all fabrics",
                  "timedOut": false,
                  "duration": 478,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics.indexOf(\"_system\")).to.be.greaterThan(-1);",
                  "err": {},
                  "uuid": "ccc9b845-a77b-4ec7-aae8-9655a3c91afa",
                  "parentUUID": "60920fd9-84d6-4906-8592-6fbc7769f9ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ccc9b845-a77b-4ec7-aae8-9655a3c91afa"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 478,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e456fa34-23a1-4b62-bbd6-be26c4a2e468",
              "title": "fabric.listUserFabrics",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a list of fabrics accessible to the active user",
                  "fullTitle": "Manipulating fabrics fabric.listUserFabrics returns a list of fabrics accessible to the active user",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const fabrics = await fabric.listUserFabrics();\nchai_1.expect(fabrics).to.be.an.instanceof(Array);\nchai_1.expect(fabrics[0].name).to.equal(\"_system\");",
                  "err": {},
                  "uuid": "33b627e5-1aad-4eae-b91d-6c5d5a1364ad",
                  "parentUUID": "e456fa34-23a1-4b62-bbd6-be26c4a2e468",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "33b627e5-1aad-4eae-b91d-6c5d5a1364ad"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 122,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "59f21e94-71d9-4a30-b8f7-8a18b9b8e417",
              "title": "fabric.dropFabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric \"before each\" hook",
                  "timedOut": false,
                  "duration": 407,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});",
                  "err": {},
                  "uuid": "76d5109f-3761-40d5-9388-a741ee0077af",
                  "parentUUID": "59f21e94-71d9-4a30-b8f7-8a18b9b8e417",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given fabric from the server",
                  "fullTitle": "Manipulating fabrics fabric.dropFabric deletes the given fabric from the server",
                  "timedOut": false,
                  "duration": 608,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.dropFabric(name);\nlet temp = new jsC8_1.Fabric().useFabric(name);\ntry {\n    await temp.get();\n}\ncatch (e) {\n    return;\n}\nfinally {\n    temp.close();\n}\nchai_1.expect.fail(\"should not succeed\");",
                  "err": {},
                  "uuid": "a4e6fc92-b042-4d96-bc3d-84f67b258e10",
                  "parentUUID": "59f21e94-71d9-4a30-b8f7-8a18b9b8e417",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4e6fc92-b042-4d96-bc3d-84f67b258e10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 608,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "61e945fb-e964-4f12-ad7d-10fa0c81ea85",
              "title": "fabric.truncate",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"before each\" hook",
                  "timedOut": false,
                  "duration": 1153,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.createFabric(name, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(name);\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create();\n        await collection.save({ _key: \"example\" });\n    }),\n    ...systemCollections.map(async (name) => {\n        let collection = fabric.collection(name);\n        await collection.create({ isSystem: true });\n        await collection.save({ _key: \"example\" });\n    })\n]);",
                  "err": {},
                  "uuid": "e89933f8-48a7-46b4-912e-42b131c6d5af",
                  "parentUUID": "61e945fb-e964-4f12-ad7d-10fa0c81ea85",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating fabrics fabric.truncate \"after each\" hook",
                  "timedOut": false,
                  "duration": 154,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(name);",
                  "err": {},
                  "uuid": "729d31b0-459c-4e54-a6c6-d6b09652a5bf",
                  "parentUUID": "61e945fb-e964-4f12-ad7d-10fa0c81ea85",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "removes all documents from all non-system collections in the fabric",
                  "fullTitle": "Manipulating fabrics fabric.truncate removes all documents from all non-system collections in the fabric",
                  "timedOut": false,
                  "duration": 4573,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.truncate();\nawait Promise.all([\n    ...nonSystemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    }),\n    ...systemCollections.map(async (name) => {\n        try {\n            await fabric.collection(name).document(\"example\");\n            chai_1.expect.fail(\"Expected document to be destroyed\");\n        }\n        catch (e) {\n            chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n            chai_1.expect(e.code).eq(404);\n            return;\n        }\n    })\n]);",
                  "err": {},
                  "uuid": "d59ee258-da0d-42fe-b6f6-cfb1c3bbf35b",
                  "parentUUID": "61e945fb-e964-4f12-ad7d-10fa0c81ea85",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally truncates system collections if explicitly passed false",
                  "fullTitle": "Manipulating fabrics fabric.truncate additionally truncates system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9297f497-32df-48d5-844b-a1d07ba1ce56",
                  "parentUUID": "61e945fb-e964-4f12-ad7d-10fa0c81ea85",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d59ee258-da0d-42fe-b6f6-cfb1c3bbf35b"
              ],
              "failures": [],
              "pending": [
                "9297f497-32df-48d5-844b-a1d07ba1ce56"
              ],
              "skipped": [],
              "duration": 4573,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "63b0dfb0-ff6d-4f18-b64e-9f57fe8a13f1",
              "title": "fabric.validateQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should validate correct query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate correct query",
                  "timedOut": false,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.validateQuery(\"for doc in docs return doc\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "b73f23df-2fa1-4d1a-8d08-d5790416df92",
                  "parentUUID": "63b0dfb0-ff6d-4f18-b64e-9f57fe8a13f1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should validate incorrect query",
                  "fullTitle": "Manipulating fabrics fabric.validateQuery should validate incorrect query",
                  "timedOut": false,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    const response = await fabric.validateQuery(\"forrrr doc in docs return doc\");\n    chai_1.expect(response.error).to.be.true;\n}\ncatch (e) {\n    chai_1.expect(e).to.be.an.instanceof(error_1.C8Error);\n}",
                  "err": {},
                  "uuid": "e60eee85-be2c-4d24-be9d-fef5d8d8a366",
                  "parentUUID": "63b0dfb0-ff6d-4f18-b64e-9f57fe8a13f1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b73f23df-2fa1-4d1a-8d08-d5790416df92",
                "e60eee85-be2c-4d24-be9d-fef5d8d8a366"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 266,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "7b1f7996-c35a-4867-aaef-a8961b0fa9e6",
              "title": "fabric.explainQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should explain query",
                  "fullTitle": "Manipulating fabrics fabric.explainQuery should explain query",
                  "timedOut": false,
                  "duration": 307,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const queryObject = {\n    query: `for doc in ${collectionName} return doc`,\n    bindVars: {}\n};\nconst response = await fabric.explainQuery(queryObject);\nchai_1.expect(response.error).to.be.false;",
                  "err": {
                    "message": "C8Error: expecting POST /_api/query",
                    "estack": "C8Error: expecting POST /_api/query\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "65c26c2b-7772-4f25-b6c6-df0073fa80db",
                  "parentUUID": "7b1f7996-c35a-4867-aaef-a8961b0fa9e6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "65c26c2b-7772-4f25-b6c6-df0073fa80db"
              ],
              "pending": [],
              "skipped": [],
              "duration": 307,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c382d68d-8926-4e07-bce9-debec9ae365d",
              "title": "fabric.getCurrentQueries",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get currently running queries",
                  "fullTitle": "Manipulating fabrics fabric.getCurrentQueries should get currently running queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "35c4afdf-d10f-44b7-ba5e-b075cd25e036",
                  "parentUUID": "c382d68d-8926-4e07-bce9-debec9ae365d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "35c4afdf-d10f-44b7-ba5e-b075cd25e036"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f2b3d623-bb24-4582-81b4-8a97e3a4d2dd",
              "title": "fabric.clearSlowQueries",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should clear slow queries",
                  "fullTitle": "Manipulating fabrics fabric.clearSlowQueries should clear slow queries",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "38bd7a06-05db-4cfe-8582-ce560bee9a21",
                  "parentUUID": "f2b3d623-bb24-4582-81b4-8a97e3a4d2dd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "38bd7a06-05db-4cfe-8582-ce560bee9a21"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a3b1d45a-d640-4a4d-a0dc-54e7647ff5ff",
              "title": "fabric.terminateRunningQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/01-manipulating-fabrics.js",
              "file": "/lib/async/test/01-manipulating-fabrics.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should terminate running query",
                  "fullTitle": "Manipulating fabrics fabric.terminateRunningQuery should terminate running query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "fc909e19-41cc-4049-bfb5-b907f6670937",
                  "parentUUID": "a3b1d45a-d640-4a4d-a0dc-54e7647ff5ff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "fc909e19-41cc-4049-bfb5-b907f6670937"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "44890bc6-99ad-46e6-8036-23f80edc9a4a",
          "title": "Accessing collections",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
          "file": "/lib/async/test/02-accessing-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing collections \"before all\" hook",
              "timedOut": false,
              "duration": 3001,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\nconst collections = await fabric.listCollections(false);\nbuiltinSystemCollections = collections.map((c) => c.name);",
              "err": {},
              "uuid": "68cb81b0-3c49-49a2-827c-2776561f3fa1",
              "parentUUID": "44890bc6-99ad-46e6-8036-23f80edc9a4a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing collections \"after all\" hook",
              "timedOut": false,
              "duration": 198,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "25d60b99-d5ca-4439-ba03-872bb361fb12",
              "parentUUID": "44890bc6-99ad-46e6-8036-23f80edc9a4a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1ba61998-cab4-47ca-b0e2-ae0b9febe719",
              "title": "fabric.collection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a DocumentCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.collection returns a DocumentCollection instance for the collection",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = fabric.collection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.DocumentCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "6387efbf-285c-4969-81b6-b6bda9562a11",
                  "parentUUID": "1ba61998-cab4-47ca-b0e2-ae0b9febe719",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6387efbf-285c-4969-81b6-b6bda9562a11"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "ae2f4d5a-9154-4826-8ade-b33a7260101b",
              "title": "fabric.edgeCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an EdgeCollection instance for the collection",
                  "fullTitle": "Accessing collections fabric.edgeCollection returns an EdgeCollection instance for the collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"tomato\";\nlet collection = fabric.edgeCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(collection_1.EdgeCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "64ec6fab-ba51-4939-9a90-173035738492",
                  "parentUUID": "ae2f4d5a-9154-4826-8ade-b33a7260101b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "64ec6fab-ba51-4939-9a90-173035738492"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "3a73aa4b-3852-460c-a8d0-51d32850501b",
              "title": "fabric.listCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"before all\" hook",
                  "timedOut": false,
                  "duration": 1166,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).create())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).create({ isSystem: true })\n    // )\n]);",
                  "err": {},
                  "uuid": "02d5bdda-9540-4daf-bd06-6bfd150cbfdb",
                  "parentUUID": "3a73aa4b-3852-460c-a8d0-51d32850501b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.listCollections \"after all\" hook",
                  "timedOut": false,
                  "duration": 1462,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...nonSystemCollectionNames.map(name => fabric.collection(name).drop())\n    // ...systemCollectionNames.map(name =>\n    //   fabric.collection(name).drop({ isSystem: true })\n    // )\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "23ed112b-7184-40de-9444-cf916f05b873",
                  "parentUUID": "3a73aa4b-3852-460c-a8d0-51d32850501b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all non-system collections",
                  "fullTitle": "Accessing collections fabric.listCollections fetches information about all non-system collections",
                  "timedOut": false,
                  "duration": 749,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections()\n    .then(collections => {\n    chai_1.expect(collections.length).to.equal(nonSystemCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(nonSystemCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c257af9f-9829-44fe-9461-7aac6fe523b9",
                  "parentUUID": "3a73aa4b-3852-460c-a8d0-51d32850501b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.listCollections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 287,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listCollections(false)\n    .then(collections => {\n    let allCollectionNames = nonSystemCollectionNames\n        // .concat(systemCollectionNames)\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(collections.length).to.be.at.least(allCollectionNames.length);\n    chai_1.expect(collections.map((c) => c.name).sort()).to.eql(allCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "98f07ed6-c929-43f3-ac89-0f1c1866e106",
                  "parentUUID": "3a73aa4b-3852-460c-a8d0-51d32850501b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c257af9f-9829-44fe-9461-7aac6fe523b9",
                "98f07ed6-c929-43f3-ac89-0f1c1866e106"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1036,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "c2f63b76-a33f-44fb-b2f1-8b9ca63e6580",
              "title": "fabric.collections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/02-accessing-collections.js",
              "file": "/lib/async/test/02-accessing-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"before all\" hook",
                  "timedOut": false,
                  "duration": 2019,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "0e7a21e7-fa3b-45be-beeb-064c1f779e13",
                  "parentUUID": "c2f63b76-a33f-44fb-b2f1-8b9ca63e6580",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing collections fabric.collections \"after all\" hook",
                  "timedOut": false,
                  "duration": 434,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...documentCollectionNames.map(name => fabric.collection(name).drop()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).drop())\n])\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "2f6fb370-4c0d-4b42-81c8-86fd43d0b57c",
                  "parentUUID": "c2f63b76-a33f-44fb-b2f1-8b9ca63e6580",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates DocumentCollection and EdgeCollection instances",
                  "fullTitle": "Accessing collections fabric.collections creates DocumentCollection and EdgeCollection instances",
                  "timedOut": false,
                  "duration": 431,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections()\n    .then(collections => {\n    let documentCollections = collections\n        .filter((c) => c instanceof collection_1.DocumentCollection)\n        .sort();\n    let edgeCollections = collections\n        .filter((c) => c instanceof collection_1.EdgeCollection)\n        .sort();\n    chai_1.expect(documentCollections.length).to.equal(documentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(documentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.equal(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "981fbe7d-77fb-42e6-977a-8afc59200324",
                  "parentUUID": "c2f63b76-a33f-44fb-b2f1-8b9ca63e6580",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "includes system collections if explicitly passed false",
                  "fullTitle": "Accessing collections fabric.collections includes system collections if explicitly passed false",
                  "timedOut": false,
                  "duration": 599,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .collections(false)\n    .then(collections => {\n    let documentCollections = collections.filter((c) => c instanceof collection_1.DocumentCollection);\n    let edgeCollections = collections.filter((c) => c instanceof collection_1.EdgeCollection);\n    let allDocumentCollectionNames = documentCollectionNames\n        .concat(builtinSystemCollections)\n        .sort();\n    chai_1.expect(documentCollections.length).to.be.at.least(allDocumentCollectionNames.length);\n    chai_1.expect(documentCollections.map((c) => c.name).sort()).to.eql(allDocumentCollectionNames);\n    chai_1.expect(edgeCollections.length).to.be.at.least(edgeCollectionNames.length);\n    chai_1.expect(edgeCollections.map((c) => c.name).sort()).to.eql(edgeCollectionNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "094ecc18-9172-431e-8788-5fd738ac5c15",
                  "parentUUID": "c2f63b76-a33f-44fb-b2f1-8b9ca63e6580",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "981fbe7d-77fb-42e6-977a-8afc59200324",
                "094ecc18-9172-431e-8788-5fd738ac5c15"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1030,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "307402af-c6b1-4201-a127-bc9c17acd84e",
          "title": "Accessing graphs",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
          "file": "/lib/async/test/03-accessing-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Accessing graphs \"before all\" hook",
              "timedOut": false,
              "duration": 2126,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "acca9edd-c507-480c-91c7-35c5f2ccb061",
              "parentUUID": "307402af-c6b1-4201-a127-bc9c17acd84e",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Accessing graphs \"after all\" hook",
              "timedOut": false,
              "duration": 162,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "e62e0f59-1d60-4a42-8331-835a3258c508",
              "parentUUID": "307402af-c6b1-4201-a127-bc9c17acd84e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "901ad02f-380e-4bc4-9cad-0877174e7e07",
              "title": "fabric.graph",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a Graph instance",
                  "fullTitle": "Accessing graphs fabric.graph returns a Graph instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet graph = fabric.graph(name);\nchai_1.expect(graph).to.be.an.instanceof(graph_1.Graph);\nchai_1.expect(graph)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "1044276f-37a5-4f34-930f-9637a107cc39",
                  "parentUUID": "901ad02f-380e-4bc4-9cad-0877174e7e07",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1044276f-37a5-4f34-930f-9637a107cc39"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "ab66f762-c9fb-42e0-9bf8-8a90302c3e08",
              "title": "fabric.listGraphs",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 1154,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        })),\n        isSmart: true,\n        options: {\n            numberOfShards: 1,\n            smartGraphAttribute: \"test\"\n        },\n        orphanCollections: []\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e6a4be08-8e49-4dbf-8861-908141797d1c",
                  "parentUUID": "ab66f762-c9fb-42e0-9bf8-8a90302c3e08",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.listGraphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 716,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "6281f27e-3d65-4ce2-9372-5d7443ec2f2f",
                  "parentUUID": "ab66f762-c9fb-42e0-9bf8-8a90302c3e08",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about all graphs",
                  "fullTitle": "Accessing graphs fabric.listGraphs fetches information about all graphs",
                  "timedOut": false,
                  "duration": 196,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .listGraphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g._key).sort()).to.eql(graphNames);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "018dbbd9-8bc5-4670-917b-d6e430d050db",
                  "parentUUID": "ab66f762-c9fb-42e0-9bf8-8a90302c3e08",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "018dbbd9-8bc5-4670-917b-d6e430d050db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 196,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            },
            {
              "uuid": "93022bf0-9e78-4e40-971d-e3269046a6f0",
              "title": "fabric.graphs",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/03-accessing-graphs.js",
              "file": "/lib/async/test/03-accessing-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"before all\" hook",
                  "timedOut": false,
                  "duration": 675,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([\n    ...vertexCollectionNames.map(name => fabric.collection(name).create()),\n    ...edgeCollectionNames.map(name => fabric.edgeCollection(name).create())\n])\n    .then(() => Promise.all([\n    ...graphNames.map(name => fabric.graph(name).create({\n        edgeDefinitions: edgeCollectionNames.map(name => ({\n            collection: name,\n            from: vertexCollectionNames,\n            to: vertexCollectionNames\n        }))\n    }))\n]))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "15dce6f9-149c-4d78-9431-5319133d037a",
                  "parentUUID": "93022bf0-9e78-4e40-971d-e3269046a6f0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Accessing graphs fabric.graphs \"after all\" hook",
                  "timedOut": false,
                  "duration": 685,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all(graphNames.map(name => fabric.graph(name).drop()))\n    .then(() => Promise.all(vertexCollectionNames\n    .concat(edgeCollectionNames)\n    .map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "58a47fce-bfa7-4f42-8f6e-f868a3c8b66c",
                  "parentUUID": "93022bf0-9e78-4e40-971d-e3269046a6f0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates Graph instances",
                  "fullTitle": "Accessing graphs fabric.graphs creates Graph instances",
                  "timedOut": false,
                  "duration": 122,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .graphs()\n    .then(graphs => {\n    chai_1.expect(graphs.length).to.equal(graphNames.length);\n    chai_1.expect(graphs.map((g) => g.name).sort()).to.eql(graphNames);\n    graphs.forEach((graph) => chai_1.expect(graph).to.be.an.instanceof(graph_1.Graph));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b77a401d-9570-426f-95f3-692f67d4543b",
                  "parentUUID": "93022bf0-9e78-4e40-971d-e3269046a6f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b77a401d-9570-426f-95f3-692f67d4543b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 122,
              "root": false,
              "rootEmpty": false,
              "_timeout": 600000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 600000
        },
        {
          "uuid": "f8af6a35-e379-4c47-8da3-2d277902c8c7",
          "title": "Transactions",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/04-transactions.js",
          "file": "/lib/async/test/04-transactions.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Transactions \"before all\" hook",
              "timedOut": false,
              "duration": 813,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "8fc2e75f-f09b-49e4-a2c6-f40a0d17afb4",
              "parentUUID": "f8af6a35-e379-4c47-8da3-2d277902c8c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Transactions \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "4d3d1b40-4165-4c87-adee-70aa222a1dd2",
              "parentUUID": "f8af6a35-e379-4c47-8da3-2d277902c8c7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "101e9fa1-c638-4a35-8c3f-067fd9d32f1d",
              "title": "fabric.transaction",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/04-transactions.js",
              "file": "/lib/async/test/04-transactions.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a transaction and return the result",
                  "fullTitle": "Transactions fabric.transaction should execute a transaction and return the result",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const result = await fabric.transaction([], \"function (params) {return params;}\", \"test\");\nchai_1.expect(result).to.equal(\"test\");",
                  "err": {},
                  "uuid": "df3ed872-5b18-4fb2-a9a5-b1cb50d7dce1",
                  "parentUUID": "101e9fa1-c638-4a35-8c3f-067fd9d32f1d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "df3ed872-5b18-4fb2-a9a5-b1cb50d7dce1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "c8863ab2-718f-4e38-9b97-2a1cd904d6c8",
          "title": "C8QL queries",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/05-c8ql-queries.js",
          "file": "/lib/async/test/05-c8ql-queries.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL queries \"before all\" hook",
              "timedOut": false,
              "duration": 1125,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "509234fd-38bc-4d14-8535-829f84dc00aa",
              "parentUUID": "c8863ab2-718f-4e38-9b97-2a1cd904d6c8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL queries \"after all\" hook",
              "timedOut": false,
              "duration": 145,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "7cf0a295-bd84-48c3-90ab-0535c484b875",
              "parentUUID": "c8863ab2-718f-4e38-9b97-2a1cd904d6c8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "73868b42-9aa6-4439-837c-dbb0935e008e",
              "title": "fabric.query",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 203,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\")\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "951a4c89-adad-46f5-899e-bb324043195c",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR i IN no RETURN i\")\n    .then(() => {\n    chai_1.expect.fail();\n    done();\n})\n    .catch(err => {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n    done();\n});",
                  "err": {},
                  "uuid": "bccb21e9-e1ee-4c93-8008-18f2345ed1ab",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "throws an exception on error (async await)",
                  "fullTitle": "C8QL queries fabric.query throws an exception on error (async await)",
                  "timedOut": false,
                  "duration": 202,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.query(\"FOR i IN no RETURN i\");\n    chai_1.expect.fail();\n}\ncatch (err) {\n    chai_1.expect(err).is.instanceof(error_1.C8Error);\n    chai_1.expect(err).to.have.property(\"statusCode\", 404);\n    chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n}",
                  "err": {},
                  "uuid": "bd3cd47f-b042-4c5e-abc5-a23ef179d9b3",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 179,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b03d1261-a148-47ff-98bc-ad66985567ba",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 231,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", undefined, {\n    batchSize: 2,\n    count: true\n})\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "cdfb994c-62f9-42c8-a07c-bd576103663e",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports AQB queries",
                  "fullTitle": "C8QL queries fabric.query supports AQB queries",
                  "timedOut": false,
                  "duration": 198,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ toC8QL: () => \"RETURN 42\" })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(42);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a9875cd6-5fb8-4a39-b1e6-55a88834da14",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports query objects",
                  "fullTitle": "C8QL queries fabric.query supports query objects",
                  "timedOut": false,
                  "duration": 117,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN 1337\", bindVars: {} })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(1337);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "dd11c168-ce8e-4783-8833-01d76623b0ee",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries",
                  "fullTitle": "C8QL queries fabric.query supports compact queries",
                  "timedOut": false,
                  "duration": 190,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query({ query: \"RETURN @potato\", bindVars: { potato: \"tomato\" } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(\"tomato\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "5f7fdf48-3f72-48a8-b2fa-c1eba429411b",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "d20fb4d5-92cd-4d76-84d3-141a06d9a482",
                  "parentUUID": "73868b42-9aa6-4439-837c-dbb0935e008e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "951a4c89-adad-46f5-899e-bb324043195c",
                "bccb21e9-e1ee-4c93-8008-18f2345ed1ab",
                "bd3cd47f-b042-4c5e-abc5-a23ef179d9b3",
                "b03d1261-a148-47ff-98bc-ad66985567ba",
                "cdfb994c-62f9-42c8-a07c-bd576103663e",
                "a9875cd6-5fb8-4a39-b1e6-55a88834da14",
                "dd11c168-ce8e-4783-8833-01d76623b0ee",
                "5f7fdf48-3f72-48a8-b2fa-c1eba429411b",
                "d20fb4d5-92cd-4d76-84d3-141a06d9a482"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1831,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "76320e6c-6667-4af6-bdff-2c4629e7e587",
              "title": "c8ql",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/05-c8ql-queries.js",
              "file": "/lib/async/test/05-c8ql-queries.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "correctly handles simple parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles simple parameters",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let values = [\n    0,\n    42,\n    -1,\n    null,\n    undefined,\n    true,\n    false,\n    \"\",\n    \"string\",\n    [1, 2, 3],\n    { a: \"b\" }\n];\nlet query = jsC8_1.c8ql `\n        A ${values[0]} B ${values[1]} C ${values[2]} D ${values[3]} E ${values[4]} F ${values[5]}\n        G ${values[6]} H ${values[7]} I ${values[8]} J ${values[9]} K ${values[10]} EOF\n      `;\nchai_1.expect(query.query).to.equal(`\n        A @value0 B @value1 C @value2 D @value3 E @value4 F @value5\n        G @value6 H @value7 I @value8 J @value9 K @value10 EOF\n      `);\nlet bindVarNames = Object.keys(query.bindVars).sort((a, b) => (+a.substr(5) > +b.substr(5) ? 1 : -1));\nchai_1.expect(bindVarNames).to.eql([\n    \"value0\",\n    \"value1\",\n    \"value2\",\n    \"value3\",\n    \"value4\",\n    \"value5\",\n    \"value6\",\n    \"value7\",\n    \"value8\",\n    \"value9\",\n    \"value10\"\n]);\nchai_1.expect(bindVarNames.map(k => query.bindVars[k])).to.eql(values);",
                  "err": {},
                  "uuid": "63766c92-2428-4e5d-8e44-c79494c75e88",
                  "parentUUID": "76320e6c-6667-4af6-bdff-2c4629e7e587",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles jsC8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles jsC8 collection parameters",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(\"potato\");\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"potato\");",
                  "err": {},
                  "uuid": "2792277c-dae1-482c-aa54-8276b9dacde2",
                  "parentUUID": "76320e6c-6667-4af6-bdff-2c4629e7e587",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "correctly handles C8 collection parameters",
                  "fullTitle": "C8QL queries c8ql correctly handles C8 collection parameters",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "class C8Collection {\n    constructor() {\n        this.isC8Collection = true;\n        this.name = \"tomato\";\n    }\n}\nlet collection = new C8Collection();\nlet query = jsC8_1.c8ql `${collection}`;\nchai_1.expect(query.query).to.equal(\"@@value0\");\nchai_1.expect(Object.keys(query.bindVars)).to.eql([\"@value0\"]);\nchai_1.expect(query.bindVars[\"@value0\"]).to.equal(\"tomato\");",
                  "err": {},
                  "uuid": "1a647b01-d72a-4ffc-a86a-b6e33db194cd",
                  "parentUUID": "76320e6c-6667-4af6-bdff-2c4629e7e587",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "63766c92-2428-4e5d-8e44-c79494c75e88",
                "2792277c-dae1-482c-aa54-8276b9dacde2",
                "1a647b01-d72a-4ffc-a86a-b6e33db194cd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "6681ae7d-5995-41c0-a9dc-ff91295ebf7a",
          "title": "Route API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
          "file": "/lib/async/test/07-routes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Route API \"before all\" hook",
              "timedOut": false,
              "duration": 1277,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);\ncollection = fabric.collection(`c${Date.now()}`);\nawait collection.create();",
              "err": {},
              "uuid": "b44b8a14-3c27-403c-930b-bab72395baa8",
              "parentUUID": "6681ae7d-5995-41c0-a9dc-ff91295ebf7a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Route API \"before each\" hook",
              "timedOut": false,
              "duration": 615,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await collection.truncate();",
              "err": {},
              "uuid": "2b96aec9-fa4f-48d5-af4d-5b224da58433",
              "parentUUID": "6681ae7d-5995-41c0-a9dc-ff91295ebf7a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Route API \"after all\" hook",
              "timedOut": false,
              "duration": 199,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "a5de3f23-5d9f-430b-abf8-e7372e1bbf94",
              "parentUUID": "6681ae7d-5995-41c0-a9dc-ff91295ebf7a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1ef1605d-d2dd-4d4b-88ec-570fb337b4a2",
              "title": "route.route",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should concat path",
                  "fullTitle": "Route API route.route should concat path",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const route = fabric.route(\"/api\").route(\"/version\");\nchai_1.expect(route).to.have.property(\"_path\", \"/api/version\");",
                  "err": {},
                  "uuid": "0dad5f4a-c1f1-4268-8c5b-d403b3780bc0",
                  "parentUUID": "1ef1605d-d2dd-4d4b-88ec-570fb337b4a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0dad5f4a-c1f1-4268-8c5b-d403b3780bc0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "cb72d4f2-37e5-4ad4-8980-1bcd3e68e8e8",
              "title": "route.post",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.post should passes body",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${collection.name}`)\n    .post({ foo: \"bar\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f469765b-f013-4125-b798-47d0803f0da3",
                  "parentUUID": "cb72d4f2-37e5-4ad4-8980-1bcd3e68e8e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f469765b-f013-4125-b798-47d0803f0da3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f2f7470e-7e4d-4583-93d3-b89f0ea23e5a",
              "title": "route.put",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.put \"before each\" hook",
                  "timedOut": false,
                  "duration": 205,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b663488e-f748-4edf-b52e-f5525b53f222",
                  "parentUUID": "f2f7470e-7e4d-4583-93d3-b89f0ea23e5a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.put should passes body",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .put({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "96c017cf-3eb0-4368-b79c-cedb4d4437c0",
                  "parentUUID": "f2f7470e-7e4d-4583-93d3-b89f0ea23e5a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96c017cf-3eb0-4368-b79c-cedb4d4437c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f5fe015f-c4c8-42d4-9b07-ae0a4598c04b",
              "title": "route.patch",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.patch \"before each\" hook",
                  "timedOut": false,
                  "duration": 206,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "fbc4bbf6-9679-4eb9-a098-dffc255f7edf",
                  "parentUUID": "f5fe015f-c4c8-42d4-9b07-ae0a4598c04b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should passes body",
                  "fullTitle": "Route API route.patch should passes body",
                  "timedOut": false,
                  "duration": 205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .patch({ hello: \"world\" })\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "36ed777d-83ca-42ab-85df-2f27bc5f0e19",
                  "parentUUID": "f5fe015f-c4c8-42d4-9b07-ae0a4598c04b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36ed777d-83ca-42ab-85df-2f27bc5f0e19"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 205,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "8515b788-68d1-4a9d-905e-1fa3f38d5ea8",
              "title": "route.delete",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.delete \"before each\" hook",
                  "timedOut": false,
                  "duration": 206,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b65d7ace-95ed-4dac-8c7d-a8820e48ed6a",
                  "parentUUID": "8515b788-68d1-4a9d-905e-1fa3f38d5ea8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.delete should be executed using the route path",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .delete()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"body\");\n    chai_1.expect(res.body).to.have.property(\"_id\");\n    chai_1.expect(res.body).to.have.property(\"_key\");\n    chai_1.expect(res.body).to.have.property(\"_rev\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "ecb1887c-7aed-4bac-b67b-92a0997c3090",
                  "parentUUID": "8515b788-68d1-4a9d-905e-1fa3f38d5ea8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ecb1887c-7aed-4bac-b67b-92a0997c3090"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "52a71bc7-1f52-4fb1-83de-178fa8cd97d0",
              "title": "route.head",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/07-routes.js",
              "file": "/lib/async/test/07-routes.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Route API route.head \"before each\" hook",
                  "timedOut": false,
                  "duration": 202,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ foo: \"bar\" })\n    .then(doc => {\n    documentHandle = doc._id;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8abe6e29-79f2-4640-87f9-fa0a7b031e21",
                  "parentUUID": "52a71bc7-1f52-4fb1-83de-178fa8cd97d0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should be executed using the route path",
                  "fullTitle": "Route API route.head should be executed using the route path",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(`/document/${documentHandle}`)\n    .head()\n    .then(res => {\n    chai_1.expect(res).to.have.property(\"statusCode\", 200);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "3ca5db62-6e3a-4c72-838d-3f36a7b0a882",
                  "parentUUID": "52a71bc7-1f52-4fb1-83de-178fa8cd97d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3ca5db62-6e3a-4c72-838d-3f36a7b0a882"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "d14aadb7-5cb2-4d74-b5ea-98708fb116a7",
          "title": "Cursor API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
          "file": "/lib/async/test/08-cursors.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Cursor API \"before all\" hook",
              "timedOut": false,
              "duration": 833,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: process.env.TEST_C8_URL || \"https://test.macrometa.io\",\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "7cc73690-e64d-4077-b71a-faa8cdb30b92",
              "parentUUID": "d14aadb7-5cb2-4d74-b5ea-98708fb116a7",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Cursor API \"before each\" hook",
              "timedOut": false,
              "duration": 121,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cursor = await fabric.query(c8qlQuery);",
              "err": {},
              "uuid": "5d33c01f-8f32-41de-96b6-30af8e605891",
              "parentUUID": "d14aadb7-5cb2-4d74-b5ea-98708fb116a7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Cursor API \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "487b3162-6013-47b4-9b22-b73a691ab0bf",
              "parentUUID": "d14aadb7-5cb2-4d74-b5ea-98708fb116a7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "9f249b3e-a1ca-4533-a627-fc662ee0fcab",
              "title": "cursor.all",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an Array of all results",
                  "fullTitle": "Cursor API cursor.all returns an Array of all results",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(vals => {\n    chai_1.expect(vals).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "f1eb8e8c-b340-4c5e-a701-3fd1e0ef173d",
                  "parentUUID": "9f249b3e-a1ca-4533-a627-fc662ee0fcab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1eb8e8c-b340-4c5e-a701-3fd1e0ef173d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "565b4b8d-5cdd-4613-81ab-813714c8c3d1",
              "title": "cursor.next",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns the next result of the Cursor",
                  "fullTitle": "Cursor API cursor.next returns the next result of the Cursor",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.equal(0);\n    return cursor.next();\n})\n    .then(val => {\n    chai_1.expect(val).to.equal(1);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a132af95-f01e-4d7f-8c35-e00c0fc73d7b",
                  "parentUUID": "565b4b8d-5cdd-4613-81ab-813714c8c3d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a132af95-f01e-4d7f-8c35-e00c0fc73d7b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "70720d02-768b-422c-86fb-0c6cff074fe5",
              "title": "cursor.hasNext",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the Cursor has more results",
                  "fullTitle": "Cursor API cursor.hasNext returns true if the Cursor has more results",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(cursor.hasNext()).to.equal(true);\ncursor\n    .next()\n    .then(val => {\n    chai_1.expect(val).to.be.a(\"number\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "99949851-06fc-49d2-acfe-2371067cb0ab",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the Cursor is empty",
                  "fullTitle": "Cursor API cursor.hasNext returns false if the Cursor is empty",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .all()\n    .then(() => {\n    chai_1.expect(cursor.hasNext()).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "bf843c07-fbf6-46e7-be04-2c1ed3911010",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true after first batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns true after first batch is consumed",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(c8qlQuery, {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor.next();\n    chai_1.expect(cursor._result.length).to.equal(0);\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "9d600292-042e-4c3d-a246-e0b11e7aaf80",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last batch is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last batch is consumed",
                  "timedOut": false,
                  "duration": 420,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(\"FOR i In 0..1 RETURN i\", {}, { batchSize: 1 })\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(1);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "2f6674b6-0f91-4778-8d28-026a6ad922c5",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed",
                  "timedOut": false,
                  "duration": 177,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.query(\"FOR i In 0..1 RETURN i\")\n    .then(cursor => {\n    chai_1.expect(cursor.hasNext()).to.equal(true);\n    chai_1.expect(cursor._result.length).to.equal(2);\n    cursor\n        .next()\n        .then(val => {\n        chai_1.expect(val).to.equal(0);\n        chai_1.expect(cursor.hasNext()).to.equal(true);\n        chai_1.expect(cursor._result.length).to.equal(1);\n        return cursor.next();\n    })\n        .then(val => {\n        chai_1.expect(val).to.equal(1);\n        chai_1.expect(cursor.hasNext()).to.equal(false);\n        chai_1.expect(cursor._result.length).to.equal(0);\n        done();\n    });\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "d13cf66d-f6e7-42b4-b286-2f612de89c49",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns 404 after timeout",
                  "fullTitle": "Cursor API cursor.hasNext returns 404 after timeout",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "30dc6717-edd6-43dd-9754-9e81449f09b1",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false after last result is consumed (with large amount of results)",
                  "fullTitle": "Cursor API cursor.hasNext returns false after last result is consumed (with large amount of results)",
                  "timedOut": true,
                  "duration": 20002,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const EXPECTED_LENGTH = 100000;\nconst loadMore = function (cursor, totalLength) {\n    cursor\n        .next()\n        .then(() => {\n        totalLength++;\n        chai_1.expect(cursor.hasNext()).to.equal(totalLength !== EXPECTED_LENGTH);\n        if (cursor.hasNext()) {\n            loadMore(cursor, totalLength);\n        }\n        else {\n            done();\n        }\n    })\n        .catch(done);\n};\nfabric.query(`FOR i In 1..${EXPECTED_LENGTH} RETURN i`)\n    .then(cursor => loadMore(cursor, 0))\n    .catch(done);",
                  "err": {
                    "message": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js)",
                    "estack": "Error: Timeout of 20000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js)",
                    "diff": null
                  },
                  "uuid": "428bc086-2b5d-46c0-bc66-362bc8384fca",
                  "parentUUID": "70720d02-768b-422c-86fb-0c6cff074fe5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "99949851-06fc-49d2-acfe-2371067cb0ab",
                "bf843c07-fbf6-46e7-be04-2c1ed3911010",
                "9d600292-042e-4c3d-a246-e0b11e7aaf80",
                "2f6674b6-0f91-4778-8d28-026a6ad922c5",
                "d13cf66d-f6e7-42b4-b286-2f612de89c49"
              ],
              "failures": [
                "428bc086-2b5d-46c0-bc66-362bc8384fca"
              ],
              "pending": [
                "30dc6717-edd6-43dd-9754-9e81449f09b1"
              ],
              "skipped": [],
              "duration": 20806,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "c698dce0-e8d5-4985-8765-883ae92f2ca5",
              "title": "cursor.each",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes the callback for each value",
                  "fullTitle": "Cursor API cursor.each invokes the callback for each value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each(value => {\n    results.push(value);\n})\n    .then(() => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "0ebcb04a-ee7e-4aae-901a-123621284e25",
                  "parentUUID": "c698dce0-e8d5-4985-8765-883ae92f2ca5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "aborts if the callback returns false",
                  "fullTitle": "Cursor API cursor.each aborts if the callback returns false",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .each((value) => {\n    results.push(value);\n    if (value === 5)\n        return false;\n    return;\n})\n    .then(() => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "913c9840-313a-453b-9103-3e7e07cadb44",
                  "parentUUID": "c698dce0-e8d5-4985-8765-883ae92f2ca5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ebcb04a-ee7e-4aae-901a-123621284e25",
                "913c9840-313a-453b-9103-3e7e07cadb44"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "9fdd8d7b-3e95-430f-bba8-2ee5ab5b0fbb",
              "title": "cursor.every",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the callback returns a truthy value for every item",
                  "fullTitle": "Cursor API cursor.every returns true if the callback returns a truthy value for every item",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    if (results.indexOf(value) !== -1)\n        return false;\n    results.push(value);\n    return true;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "7d158a5f-cbf5-4939-ae35-7101cba07bd5",
                  "parentUUID": "9fdd8d7b-3e95-430f-bba8-2ee5ab5b0fbb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the callback returns a non-truthy value for any item",
                  "fullTitle": "Cursor API cursor.every returns false if the callback returns a non-truthy value for any item",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .every(value => {\n    results.push(value);\n    return value < 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "6418f9c9-f6a6-417a-baaa-e112dffa2564",
                  "parentUUID": "9fdd8d7b-3e95-430f-bba8-2ee5ab5b0fbb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d158a5f-cbf5-4939-ae35-7101cba07bd5",
                "6418f9c9-f6a6-417a-baaa-e112dffa2564"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "b64d103a-218c-4f89-a91a-9c8bba07578d",
              "title": "cursor.some",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns false if the callback returns a non-truthy value for every item",
                  "fullTitle": "Cursor API cursor.some returns false if the callback returns a non-truthy value for every item",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    if (results.indexOf(value) !== -1)\n        return true;\n    results.push(value);\n    return false;\n})\n    .then(result => {\n    chai_1.expect(results).to.eql(c8qlResult);\n    chai_1.expect(result).to.equal(false);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "eecbd1a0-a71d-4b3e-917a-c1d781108400",
                  "parentUUID": "b64d103a-218c-4f89-a91a-9c8bba07578d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns true if the callback returns a truthy value for any item",
                  "fullTitle": "Cursor API cursor.some returns true if the callback returns a truthy value for any item",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let results = [];\ncursor\n    .some(value => {\n    results.push(value);\n    return value >= 5;\n})\n    .then((result) => {\n    chai_1.expect(results).to.eql([0, 1, 2, 3, 4, 5]);\n    chai_1.expect(result).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "dbd0f475-870c-4a43-8e1a-a48479532a4a",
                  "parentUUID": "b64d103a-218c-4f89-a91a-9c8bba07578d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eecbd1a0-a71d-4b3e-917a-c1d781108400",
                "dbd0f475-870c-4a43-8e1a-a48479532a4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "7fe26697-8eff-4ec2-b9ae-e17839dfc982",
              "title": "cursor.map",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "maps all result values over the callback",
                  "fullTitle": "Cursor API cursor.map maps all result values over the callback",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .map(value => value * 2)\n    .then(results => {\n    chai_1.expect(results).to.eql(c8qlResult.map(value => value * 2));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "9853922b-8899-4c6b-8e16-8218d62ea41a",
                  "parentUUID": "7fe26697-8eff-4ec2-b9ae-e17839dfc982",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9853922b-8899-4c6b-8e16-8218d62ea41a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "ba7c36fd-90ca-4c30-b58a-a756019bcc65",
              "title": "cursor.reduce",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "reduces the result values with the callback",
                  "fullTitle": "Cursor API cursor.reduce reduces the result values with the callback",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cursor\n    .reduce((a, b) => a + b)\n    .then(result => {\n    chai_1.expect(result).to.eql(c8qlResult.reduce((a, b) => a + b));\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "18f05ed8-f9c7-4221-9eb7-0a24794cb56e",
                  "parentUUID": "ba7c36fd-90ca-4c30-b58a-a756019bcc65",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18f05ed8-f9c7-4221-9eb7-0a24794cb56e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "dcb71a5b-aa6c-4a42-a361-af91c9643919",
              "title": "cursor.delete",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/08-cursors.js",
              "file": "/lib/async/test/08-cursors.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete the cursor",
                  "fullTitle": "Cursor API cursor.delete should delete the cursor",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "4f881d05-1d3b-4c97-bf40-98bd5a71500f",
                  "parentUUID": "dcb71a5b-aa6c-4a42-a361-af91c9643919",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "4f881d05-1d3b-4c97-bf40-98bd5a71500f"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "619cf5b9-e5f2-42fc-8185-2ec5c571a3ef",
          "title": "Collection metadata",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
          "file": "/lib/async/test/09-collection-metadata.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Collection metadata \"before all\" hook",
              "timedOut": false,
              "duration": 1383,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "f91db80b-a421-4527-a83b-4051f0bbb368",
              "parentUUID": "619cf5b9-e5f2-42fc-8185-2ec5c571a3ef",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Collection metadata \"after all\" hook",
              "timedOut": false,
              "duration": 202,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(dbName);",
              "err": {},
              "uuid": "fa9797fe-6b91-43c5-bf9b-4c5e3b5fe184",
              "parentUUID": "619cf5b9-e5f2-42fc-8185-2ec5c571a3ef",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "63b3b3de-4117-4ff8-a2a7-9913fa7be49d",
              "title": "collection.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.get should return information about a collection",
                  "timedOut": false,
                  "duration": 171,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const info = await collection.get();\nchai_1.expect(info).to.have.property(\"name\", collectionName);\nchai_1.expect(info).to.have.property(\"isSystem\", false);\nchai_1.expect(info).to.have.property(\"status\", 3); // loaded\nchai_1.expect(info).to.have.property(\"type\", 2); // document collection",
                  "err": {},
                  "uuid": "b7cf7697-2c84-4f63-84a7-7885ffcf75f6",
                  "parentUUID": "63b3b3de-4117-4ff8-a2a7-9913fa7be49d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should throw if collection does not exist",
                  "fullTitle": "Collection metadata collection.get should throw if collection does not exist",
                  "timedOut": false,
                  "duration": 209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await fabric.collection(\"no\").get();\n}\ncatch (e) {\n    chai_1.expect(e).to.have.property(\"errorNum\", collection_1.COLLECTION_NOT_FOUND);\n    return;\n}\nchai_1.expect.fail(\"should throw\");",
                  "err": {},
                  "uuid": "2932cbf5-53b6-4b75-ae58-62781a7c6554",
                  "parentUUID": "63b3b3de-4117-4ff8-a2a7-9913fa7be49d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7cf7697-2c84-4f63-84a7-7885ffcf75f6",
                "2932cbf5-53b6-4b75-ae58-62781a7c6554"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 380,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "504af839-4ffa-4d8a-ac1c-d90faad1a23d",
              "title": "collection.exists",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true if collection exists",
                  "fullTitle": "Collection metadata collection.exists should return true if collection exists",
                  "timedOut": false,
                  "duration": 188,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.exists();\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "7ceadb3a-b640-4508-a003-6ab19290ed9e",
                  "parentUUID": "504af839-4ffa-4d8a-ac1c-d90faad1a23d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false if collection does not exist",
                  "fullTitle": "Collection metadata collection.exists should return false if collection does not exist",
                  "timedOut": false,
                  "duration": 185,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric.collection(\"no\").exists();\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "4e54a42d-66bb-4b8d-b51c-348189205438",
                  "parentUUID": "504af839-4ffa-4d8a-ac1c-d90faad1a23d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7ceadb3a-b640-4508-a003-6ab19290ed9e",
                "4e54a42d-66bb-4b8d-b51c-348189205438"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 373,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "c476fbc8-45b3-4454-ae0c-fadad784ef02",
              "title": "collection.properties",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return properties of a collection",
                  "fullTitle": "Collection metadata collection.properties should return properties of a collection",
                  "timedOut": false,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .properties()\n    .then(properties => {\n    chai_1.expect(properties).to.have.property(\"name\", collectionName);\n    chai_1.expect(properties).to.have.property(\"waitForSync\", false);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "eeab6091-e4fb-44c7-a4e2-c6cb2453ba1c",
                  "parentUUID": "c476fbc8-45b3-4454-ae0c-fadad784ef02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eeab6091-e4fb-44c7-a4e2-c6cb2453ba1c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e2e7743d-7ff9-4952-aff5-c7f14e5c20d2",
              "title": "collection.count",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/09-collection-metadata.js",
              "file": "/lib/async/test/09-collection-metadata.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a collection",
                  "fullTitle": "Collection metadata collection.count should return information about a collection",
                  "timedOut": false,
                  "duration": 184,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .count()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", collectionName);\n    chai_1.expect(info).to.have.property(\"count\", 0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4e42be89-7f50-4c5c-82a1-80e66c53e9ba",
                  "parentUUID": "e2e7743d-7ff9-4952-aff5-c7f14e5c20d2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4e42be89-7f50-4c5c-82a1-80e66c53e9ba"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 184,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "e58e8aac-1e23-410b-a348-b7a9f6469629",
          "title": "Manipulating collections",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
          "file": "/lib/async/test/10-manipulating-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating collections \"before all\" hook",
              "timedOut": false,
              "duration": 835,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "b9adb7e2-e5cc-40b5-8944-e573726bb731",
              "parentUUID": "e58e8aac-1e23-410b-a348-b7a9f6469629",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating collections \"before each\" hook",
              "timedOut": false,
              "duration": 202,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`collection${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "f754e963-9879-43a3-90ae-689e5c561389",
              "parentUUID": "e58e8aac-1e23-410b-a348-b7a9f6469629",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating collections \"after all\" hook",
              "timedOut": false,
              "duration": 227,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "ccd454cc-23af-4326-88f5-543e5a5ba6e4",
              "parentUUID": "e58e8aac-1e23-410b-a348-b7a9f6469629",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating collections \"after each\" hook",
              "timedOut": false,
              "duration": 265,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .get()\n    .then(() => {\n    collection\n        .drop()\n        .then(() => void done())\n        .catch(done);\n})\n    .catch(() => void done());",
              "err": {},
              "uuid": "ee7badd6-9505-49bb-ad7b-fce1a5d6f185",
              "parentUUID": "e58e8aac-1e23-410b-a348-b7a9f6469629",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b619bd58-1f25-4ce0-836b-69c6876dd309",
              "title": "collection.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new document collection",
                  "timedOut": false,
                  "duration": 371,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b8a01a5d-d265-4b66-a3dd-1e7b174cadcc",
                  "parentUUID": "b619bd58-1f25-4ce0-836b-69c6876dd309",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local document collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local document collection",
                  "timedOut": false,
                  "duration": 406,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.collection(`documentcollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 2); // document collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "ee141b68-db54-4dec-9449-f6619db3763c",
                  "parentUUID": "b619bd58-1f25-4ce0-836b-69c6876dd309",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new edge collection",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create()\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "92176d06-05c8-4afe-8ba2-5d85d57a4812",
                  "parentUUID": "b619bd58-1f25-4ce0-836b-69c6876dd309",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "creates a new local edge collection",
                  "fullTitle": "Manipulating collections collection.create creates a new local edge collection",
                  "timedOut": false,
                  "duration": 334,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const collection = fabric.edgeCollection(`edgecollection${Date.now()}`);\ncollection\n    .create({ isLocal: true })\n    .then(() => {\n    return fabric\n        .collection(collection.name)\n        .get()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"isSystem\", false);\n        chai_1.expect(info).to.have.property(\"status\", 3); // loaded\n        chai_1.expect(info).to.have.property(\"type\", 3); // edge collection\n        chai_1.expect(info).to.have.property(\"isLocal\", true); // local geo-distribution\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "21d58782-4109-4c01-9ca1-f70f333180e4",
                  "parentUUID": "b619bd58-1f25-4ce0-836b-69c6876dd309",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b8a01a5d-d265-4b66-a3dd-1e7b174cadcc",
                "ee141b68-db54-4dec-9449-f6619db3763c",
                "92176d06-05c8-4afe-8ba2-5d85d57a4812",
                "21d58782-4109-4c01-9ca1-f70f333180e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1521,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "99e55d7f-594c-42b3-9439-77bb8d267f90",
              "title": "collection.rename",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should rename a collection",
                  "fullTitle": "Manipulating collections collection.rename should rename a collection",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .route(\"/_admin/server/role\")\n    .get()\n    .then(res => {\n    if (res.body.role !== \"SINGLE\")\n        return;\n    const name = `renamecollection${Date.now()}`;\n    return collection.rename(name).then(info => {\n        chai_1.expect(info).to.have.property(\"name\", name);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "3346363f-8739-49bd-98a2-6f972f0fcc6c",
                  "parentUUID": "99e55d7f-594c-42b3-9439-77bb8d267f90",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3346363f-8739-49bd-98a2-6f972f0fcc6c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 410,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "dc3cb537-a702-4e6e-830d-2fe33c60e1e1",
              "title": "collection.truncate",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should truncate a non-empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should truncate a non-empty collection",
                  "timedOut": false,
                  "duration": 720,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.save({}).then(() => {\n    return collection\n        .truncate()\n        .then(() => {\n        collection.count().then(info => {\n            chai_1.expect(info).to.have.property(\"name\", collection.name);\n            chai_1.expect(info).to.have.property(\"count\", 0);\n        });\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "cc8cfad2-3e60-4066-88bf-6296bcf90b45",
                  "parentUUID": "dc3cb537-a702-4e6e-830d-2fe33c60e1e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should allow truncating a empty collection",
                  "fullTitle": "Manipulating collections collection.truncate should allow truncating a empty collection",
                  "timedOut": false,
                  "duration": 255,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.truncate().then(() => {\n    return collection\n        .count()\n        .then(info => {\n        chai_1.expect(info).to.have.property(\"name\", collection.name);\n        chai_1.expect(info).to.have.property(\"count\", 0);\n    })\n        .then(() => void done())\n        .catch(done);\n});",
                  "err": {},
                  "uuid": "1c0c1bc4-b37e-44cf-b4cb-40b6b1aad0bd",
                  "parentUUID": "dc3cb537-a702-4e6e-830d-2fe33c60e1e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc8cfad2-3e60-4066-88bf-6296bcf90b45",
                "1c0c1bc4-b37e-44cf-b4cb-40b6b1aad0bd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 975,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "eadd430c-fb22-4211-bd59-c172fb389cca",
              "title": "collection.drop",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop a collection",
                  "fullTitle": "Manipulating collections collection.drop should drop a collection",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection.drop().then(() => {\n    return collection\n        .get()\n        .then(done)\n        .catch(err => {\n        chai_1.expect(err).to.have.property(\"errorNum\", 1203);\n        void done();\n    });\n});",
                  "err": {},
                  "uuid": "c66cf5ed-0269-4572-8167-48d8ebe19a9d",
                  "parentUUID": "eadd430c-fb22-4211-bd59-c172fb389cca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c66cf5ed-0269-4572-8167-48d8ebe19a9d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 407,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "31d0cbbe-8910-4992-8e97-a1a21bd24fdf",
              "title": "collection.onChange",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/10-manipulating-collections.js",
              "file": "/lib/async/test/10-manipulating-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should get the message on collection change",
                  "fullTitle": "Manipulating collections collection.onChange should get the message on collection change",
                  "timedOut": false,
                  "duration": 1043,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const callbackObj = {\n    onopen: () => {\n        collection.save({ name: \"Anthony\", lastname: \"Gonsalvis\" });\n    },\n    onmessage: (msg) => {\n        console.log(\"msg=>\", msg);\n        done();\n    },\n    onerror: (err) => {\n        console.log(\"Connection Error->\", err);\n        chai_1.expect.fail(\"Websocket connection error\");\n    },\n    onclose: () => console.log(\"Websoket connection closed\")\n};\ncollection.onChange(callbackObj, testUrl.substring(8));",
                  "err": {},
                  "uuid": "cb1ddd14-7c9c-49b5-8664-5f942b8bdd48",
                  "parentUUID": "31d0cbbe-8910-4992-8e97-a1a21bd24fdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb1ddd14-7c9c-49b5-8664-5f942b8bdd48"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1043,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "410a1808-1385-4940-8b68-ae6f71fe60e3",
          "title": "Managing indexes",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
          "file": "/lib/async/test/11-managing-indexes.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Managing indexes \"before all\" hook",
              "timedOut": false,
              "duration": 1329,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\ncollection = fabric.collection(collectionName);\nawait collection.create();",
              "err": {},
              "uuid": "684d57fb-7ce7-4fb2-9649-388e35922516",
              "parentUUID": "410a1808-1385-4940-8b68-ae6f71fe60e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Managing indexes \"after all\" hook",
              "timedOut": false,
              "duration": 174,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "2997c38f-ef8c-4f11-a948-9456ed20a415",
              "parentUUID": "410a1808-1385-4940-8b68-ae6f71fe60e3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7dc6751d-55c1-4007-a326-0f19d3a9f51c",
              "title": "collection.createIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a index of given type",
                  "fullTitle": "Managing indexes collection.createIndex should create a index of given type",
                  "timedOut": false,
                  "duration": 205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createIndex({\n    type: \"hash\",\n    fields: [\"value0\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value0\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "5052b50e-b8bf-4546-9f53-e874015ece2c",
                  "parentUUID": "7dc6751d-55c1-4007-a326-0f19d3a9f51c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5052b50e-b8bf-4546-9f53-e874015ece2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 205,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "1597694b-d17b-4abf-a493-79d78b7225d0",
              "title": "collection.createHashIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a hash index",
                  "fullTitle": "Managing indexes collection.createHashIndex should create a hash index",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"hash\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e72d5c28-98f8-4edc-b3ec-af2d6ab9d3d5",
                  "parentUUID": "1597694b-d17b-4abf-a493-79d78b7225d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e72d5c28-98f8-4edc-b3ec-af2d6ab9d3d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 207,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "fa06fe30-ba9f-446d-9105-52fa42647826",
              "title": "collection.createSkipList",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a skiplist index",
                  "fullTitle": "Managing indexes collection.createSkipList should create a skiplist index",
                  "timedOut": false,
                  "duration": 199,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createSkipList([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"skiplist\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "ec3e3195-1982-446b-8a02-ad44fa1760bf",
                  "parentUUID": "fa06fe30-ba9f-446d-9105-52fa42647826",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ec3e3195-1982-446b-8a02-ad44fa1760bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 199,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "052bfc62-ff7d-45dd-b885-f0dc93e77907",
              "title": "collection.createPersistentIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a persistent index",
                  "fullTitle": "Managing indexes collection.createPersistentIndex should create a persistent index",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createPersistentIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"persistent\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f58f076e-f9af-42a5-83e7-b977d84d526b",
                  "parentUUID": "052bfc62-ff7d-45dd-b885-f0dc93e77907",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f58f076e-f9af-42a5-83e7-b977d84d526b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "acbeccf4-65ac-420b-80e1-c6f8cd204dac",
              "title": "collection.createGeoIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a geo1 index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo1 index for one field",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "f88baa5f-1186-4264-981f-6a66936bc10e",
                  "parentUUID": "acbeccf4-65ac-420b-80e1-c6f8cd204dac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo2 index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo2 index for two fields",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "8448f39f-61fa-4795-ba97-91ff27531593",
                  "parentUUID": "acbeccf4-65ac-420b-80e1-c6f8cd204dac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for one field",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for one field",
                  "timedOut": false,
                  "duration": 136,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo1\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo1', but got 'geo'",
                    "estack": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo1', but got 'geo'\n    at collection.createGeoIndex.then.info (src/test/11-managing-indexes.ts:143:32)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- geo\n+ geo1\n"
                  },
                  "uuid": "bcf50914-6846-4d75-8748-f499d3f9234c",
                  "parentUUID": "acbeccf4-65ac-420b-80e1-c6f8cd204dac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a geo index for two fields",
                  "fullTitle": "Managing indexes collection.createGeoIndex should create a geo index for two fields",
                  "timedOut": false,
                  "duration": 137,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createGeoIndex([\"value1\", \"value2\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"geo2\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value1\", \"value2\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo2', but got 'geo'",
                    "estack": "AssertionError: expected { Object (bestIndexedLevel, fields, ...) } to have property 'type' of 'geo2', but got 'geo'\n    at collection.createGeoIndex.then.info (src/test/11-managing-indexes.ts:156:32)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- geo\n+ geo2\n"
                  },
                  "uuid": "3f73c854-25c5-45d0-a6ac-2cc21a43c011",
                  "parentUUID": "acbeccf4-65ac-420b-80e1-c6f8cd204dac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "bcf50914-6846-4d75-8748-f499d3f9234c",
                "3f73c854-25c5-45d0-a6ac-2cc21a43c011"
              ],
              "pending": [
                "f88baa5f-1186-4264-981f-6a66936bc10e",
                "8448f39f-61fa-4795-ba97-91ff27531593"
              ],
              "skipped": [],
              "duration": 273,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "24563c34-f4bf-4823-8dc0-e3bdff835eb0",
              "title": "collection.createFulltextIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a fulltext index",
                  "fullTitle": "Managing indexes collection.createFulltextIndex should create a fulltext index",
                  "timedOut": false,
                  "duration": 171,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createFulltextIndex([\"value\"])\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"id\");\n    chai_1.expect(info).to.have.property(\"type\", \"fulltext\");\n    chai_1.expect(info).to.have.property(\"fields\");\n    chai_1.expect(info.fields).to.eql([\"value\"]);\n    chai_1.expect(info).to.have.property(\"isNewlyCreated\", true);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "17ee9434-6157-4d25-a70e-e5f418cb90c3",
                  "parentUUID": "24563c34-f4bf-4823-8dc0-e3bdff835eb0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17ee9434-6157-4d25-a70e-e5f418cb90c3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 171,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3fe73083-e1f0-49c7-beb0-2f6bd5ac5edc",
              "title": "collection.index",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about a index",
                  "fullTitle": "Managing indexes collection.index should return information about a index",
                  "timedOut": false,
                  "duration": 350,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.index(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        chai_1.expect(index).to.have.property(\"type\", info.type);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7dc2d29a-9cf8-4d9e-bea2-634adf508c30",
                  "parentUUID": "3fe73083-e1f0-49c7-beb0-2f6bd5ac5edc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7dc2d29a-9cf8-4d9e-bea2-634adf508c30"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 350,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "afae9a11-cc58-40bd-8cfb-6e7c07f0443e",
              "title": "collection.indexes",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return a list of indexes",
                  "fullTitle": "Managing indexes collection.indexes should return a list of indexes",
                  "timedOut": false,
                  "duration": 315,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(index => {\n    return collection.indexes().then(indexes => {\n        chai_1.expect(indexes).to.be.instanceof(Array);\n        chai_1.expect(indexes).to.not.be.empty;\n        chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(1);\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c42fabc1-bb88-4af6-a295-3d8657961070",
                  "parentUUID": "afae9a11-cc58-40bd-8cfb-6e7c07f0443e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c42fabc1-bb88-4af6-a295-3d8657961070"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 315,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "6fe4568c-b868-4340-a2c0-fa1452ff2f2c",
              "title": "collection.dropIndex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/11-managing-indexes.js",
              "file": "/lib/async/test/11-managing-indexes.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should drop existing index",
                  "fullTitle": "Managing indexes collection.dropIndex should drop existing index",
                  "timedOut": false,
                  "duration": 4729,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .createHashIndex([\"test\"])\n    .then(info => {\n    return collection.dropIndex(info.id).then(index => {\n        chai_1.expect(index).to.have.property(\"id\", info.id);\n        return collection.indexes().then(indexes => {\n            chai_1.expect(indexes).to.be.instanceof(Array);\n            chai_1.expect(indexes).to.not.be.empty;\n            chai_1.expect(indexes.filter((i) => i.id === index.id).length).to.equal(1);\n        });\n    });\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected 0 to equal 1",
                    "estack": "AssertionError: expected 0 to equal 1\n    at collection.indexes.then.indexes (src/test/11-managing-indexes.ts:223:20)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": "- 0\n+ 1\n"
                  },
                  "uuid": "931a14c1-714d-44dc-ab25-689cfc590ae2",
                  "parentUUID": "6fe4568c-b868-4340-a2c0-fa1452ff2f2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "931a14c1-714d-44dc-ab25-689cfc590ae2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4729,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "d6a03757-37c9-42b7-aa5a-225ac52f736a",
          "title": "DocumentCollection API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
          "file": "/lib/async/test/14-document-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "DocumentCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 924,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: C8_VERSION\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "ab079215-5162-4eb5-8db5-61594ae020c3",
              "parentUUID": "d6a03757-37c9-42b7-aa5a-225ac52f736a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "DocumentCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 201,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.collection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "fad7d905-2fa6-4f47-bf69-cf0db3d94617",
              "parentUUID": "d6a03757-37c9-42b7-aa5a-225ac52f736a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "DocumentCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 208,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "50849684-0147-4408-b205-55179d1dd26a",
              "parentUUID": "d6a03757-37c9-42b7-aa5a-225ac52f736a",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "DocumentCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 196,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "8565e9d4-940f-4a8a-87d7-530e46617b7b",
              "parentUUID": "d6a03757-37c9-42b7-aa5a-225ac52f736a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "32f8d2b3-867e-456e-9cde-5a495638b7f5",
              "title": "documentCollection.document",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 171,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "6ed62072-ed4a-41c8-984d-b391b7ddf1a8",
                  "parentUUID": "32f8d2b3-867e-456e-9cde-5a495638b7f5",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.document returns a document in the collection",
                  "timedOut": false,
                  "duration": 1186,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "fd753839-d965-4a52-9aaf-eb08cc47c422",
                  "parentUUID": "32f8d2b3-867e-456e-9cde-5a495638b7f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "DocumentCollection API documentCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "a4911364-9bf0-4f0c-9115-4d149d6ef76e",
                  "parentUUID": "32f8d2b3-867e-456e-9cde-5a495638b7f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd753839-d965-4a52-9aaf-eb08cc47c422",
                "a4911364-9bf0-4f0c-9115-4d149d6ef76e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1390,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b224d1aa-285a-435b-91fc-baee88013d37",
              "title": "documentCollection.documentExists",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 124,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "7438975c-3742-47c4-be11-5b43c511aee2",
                  "parentUUID": "b224d1aa-285a-435b-91fc-baee88013d37",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the document exists",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns true if the document exists",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "0d5e1d68-e2e7-4405-ba2a-8d2154a51ec8",
                  "parentUUID": "b224d1aa-285a-435b-91fc-baee88013d37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the document does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the document does not exist",
                  "timedOut": false,
                  "duration": 119,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"does-not-exist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "a2d09b13-8c29-4e1d-b17f-512c1b550c1c",
                  "parentUUID": "b224d1aa-285a-435b-91fc-baee88013d37",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the collection does not exist",
                  "fullTitle": "DocumentCollection API documentCollection.documentExists returns false if the collection does not exist",
                  "timedOut": false,
                  "duration": 138,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await fabric\n    .collection(\"doesnotexist\")\n    .documentExists(\"lol\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "463b3249-61da-4733-a395-f3638123811f",
                  "parentUUID": "b224d1aa-285a-435b-91fc-baee88013d37",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0d5e1d68-e2e7-4405-ba2a-8d2154a51ec8",
                "a2d09b13-8c29-4e1d-b17f-512c1b550c1c",
                "463b3249-61da-4733-a395-f3638123811f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 464,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "bb71c427-650b-46a5-a652-3b57fd709bac",
              "title": "documentCollection.save",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a document in the collection",
                  "fullTitle": "DocumentCollection API documentCollection.save creates a document in the collection",
                  "timedOut": false,
                  "duration": 324,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "e58408c8-adc8-4bd1-839c-2231856daae1",
                  "parentUUID": "bb71c427-650b-46a5-a652-3b57fd709bac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "DocumentCollection API documentCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 241,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.document(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "a1e7d62b-1d5b-4447-8e57-1689226aac47",
                  "parentUUID": "bb71c427-650b-46a5-a652-3b57fd709bac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns the document if opts.returnNew is set",
                  "fullTitle": "DocumentCollection API documentCollection.save returns the document if opts.returnNew is set",
                  "timedOut": false,
                  "duration": 205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = { returnNew: true };\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "5ce71073-26b5-4435-bb80-731cd1bb9f13",
                  "parentUUID": "bb71c427-650b-46a5-a652-3b57fd709bac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "interprets opts as returnNew if it is a boolean",
                  "fullTitle": "DocumentCollection API documentCollection.save interprets opts as returnNew if it is a boolean",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\" };\nlet opts = true;\ncollection\n    .save(data, opts)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new).to.be.an(\"object\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta.new.potato).to.equal(data.potato);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "8bb9b123-c440-4652-8f67-7676fb11d83f",
                  "parentUUID": "bb71c427-650b-46a5-a652-3b57fd709bac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e58408c8-adc8-4bd1-839c-2231856daae1",
                "a1e7d62b-1d5b-4447-8e57-1689226aac47",
                "5ce71073-26b5-4435-bb80-731cd1bb9f13",
                "8bb9b123-c440-4652-8f67-7676fb11d83f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 974,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "eb57fc4d-85e7-4d86-958c-6e2443724650",
              "title": "documentCollection.replace",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given document",
                  "fullTitle": "DocumentCollection API documentCollection.replace replaces the given document",
                  "timedOut": false,
                  "duration": 553,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "777dcec2-e150-4e33-a91d-5ec934cd9239",
                  "parentUUID": "eb57fc4d-85e7-4d86-958c-6e2443724650",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "777dcec2-e150-4e33-a91d-5ec934cd9239"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 553,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "2ed33f11-2d26-44dc-a6b5-d083133ba424",
              "title": "documentCollection.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "DocumentCollection API documentCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 615,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "000dcce5-88ac-4b85-b31f-28f7ad514781",
                  "parentUUID": "2ed33f11-2d26-44dc-a6b5-d083133ba424",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "DocumentCollection API documentCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 717,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.document(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "09e15d8f-f15d-43da-bc7e-96716a663d2c",
                  "parentUUID": "2ed33f11-2d26-44dc-a6b5-d083133ba424",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "000dcce5-88ac-4b85-b31f-28f7ad514781",
                "09e15d8f-f15d-43da-bc7e-96716a663d2c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1332,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "4e8de063-1798-462e-846e-81bdeaa555fe",
              "title": "documentCollection.remove",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/14-document-collections.js",
              "file": "/lib/async/test/14-document-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "DocumentCollection API documentCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 204,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "05a40458-fd8f-43fa-aaab-9337ce9987cd",
                  "parentUUID": "4e8de063-1798-462e-846e-81bdeaa555fe",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given document",
                  "fullTitle": "DocumentCollection API documentCollection.remove deletes the given document",
                  "timedOut": false,
                  "duration": 416,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.document(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "96825754-4370-4b5d-9ad1-6fdaef96a7e2",
                  "parentUUID": "4e8de063-1798-462e-846e-81bdeaa555fe",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96825754-4370-4b5d-9ad1-6fdaef96a7e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 416,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "bf57936a-1a9c-4d8a-b9bd-ad77d2a7afd6",
          "title": "EdgeCollection API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
          "file": "/lib/async/test/15-edge-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "EdgeCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 1330,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "c81a418d-199c-413a-86b4-7d09843570a4",
              "parentUUID": "bf57936a-1a9c-4d8a-b9bd-ad77d2a7afd6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "EdgeCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 205,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection = fabric.edgeCollection(`c${Date.now()}`);\ncollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "c31b0767-1935-46d3-aa3b-28a47ed2b092",
              "parentUUID": "bf57936a-1a9c-4d8a-b9bd-ad77d2a7afd6",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "EdgeCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 207,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "dcc933c5-d852-4414-a547-3531de3d32cc",
              "parentUUID": "bf57936a-1a9c-4d8a-b9bd-ad77d2a7afd6",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "EdgeCollection API \"after each\" hook",
              "timedOut": false,
              "duration": 201,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "66c64c13-11a9-44f7-815a-b331c1ad2091",
              "parentUUID": "bf57936a-1a9c-4d8a-b9bd-ad77d2a7afd6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d7605c96-8487-47f5-a4f5-f18907d7c1ce",
              "title": "edgeCollection.edge",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.edge \"before each\" hook",
                  "timedOut": false,
                  "duration": 203,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "6493e5ed-e473-4633-8343-a4ca802b4de4",
                  "parentUUID": "d7605c96-8487-47f5-a4f5-f18907d7c1ce",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.edge returns an edge in the collection",
                  "timedOut": false,
                  "duration": 182,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "96db401e-6820-4592-b5d1-a963f0015cd9",
                  "parentUUID": "d7605c96-8487-47f5-a4f5-f18907d7c1ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.edge does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.edge(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "b780db88-cf34-4385-af0f-08a8b928dff9",
                  "parentUUID": "d7605c96-8487-47f5-a4f5-f18907d7c1ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "96db401e-6820-4592-b5d1-a963f0015cd9",
                "b780db88-cf34-4385-af0f-08a8b928dff9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 388,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "adc855d5-5cce-433d-849b-dd473add3d6e",
              "title": "edgeCollection.document",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.document \"before each\" hook",
                  "timedOut": false,
                  "duration": 204,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "5892e3ca-0f72-47d3-afcf-9e5ce9b60d04",
                  "parentUUID": "adc855d5-5cce-433d-849b-dd473add3d6e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.document returns an edge in the collection",
                  "timedOut": false,
                  "duration": 205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "55ad99ac-2f2b-4ad5-a67d-ea1f84708d22",
                  "parentUUID": "adc855d5-5cce-433d-849b-dd473add3d6e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "EdgeCollection API edgeCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "78caa1f7-b13f-4a08-be2e-f7f17d482581",
                  "parentUUID": "adc855d5-5cce-433d-849b-dd473add3d6e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55ad99ac-2f2b-4ad5-a67d-ea1f84708d22",
                "78caa1f7-b13f-4a08-be2e-f7f17d482581"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 411,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "b9fa374e-aefa-4b8c-a08c-0dc275273785",
              "title": "edgeCollection.documentExists",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists \"before each\" hook",
                  "timedOut": false,
                  "duration": 210,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {},
                  "uuid": "233b31d7-076c-4bbd-93b0-b6c659dc6b5b",
                  "parentUUID": "b9fa374e-aefa-4b8c-a08c-0dc275273785",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns true if the edge exists",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns true if the edge exists",
                  "timedOut": false,
                  "duration": 176,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(meta._id);\nchai_1.expect(exists).to.equal(true);",
                  "err": {},
                  "uuid": "18039dc3-040d-45db-8242-7d25439d4e00",
                  "parentUUID": "b9fa374e-aefa-4b8c-a08c-0dc275273785",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "returns false if the edge does not exist",
                  "fullTitle": "EdgeCollection API edgeCollection.documentExists returns false if the edge does not exist",
                  "timedOut": false,
                  "duration": 202,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const exists = await collection.documentExists(\"doesnotexist\");\nchai_1.expect(exists).to.equal(false);",
                  "err": {},
                  "uuid": "5a88c093-9618-4ad2-b25a-8f148ccaa26a",
                  "parentUUID": "b9fa374e-aefa-4b8c-a08c-0dc275273785",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18039dc3-040d-45db-8242-7d25439d4e00",
                "5a88c093-9618-4ad2-b25a-8f148ccaa26a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 378,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a5c44ff7-163d-4be8-bffc-0c8cf93a59ce",
              "title": "edgeCollection.save",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates an edge in the collection",
                  "fullTitle": "EdgeCollection API edgeCollection.save creates an edge in the collection",
                  "timedOut": false,
                  "duration": 410,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "c502519e-46f3-4d25-94af-84540128249d",
                  "parentUUID": "a5c44ff7-163d-4be8-bffc-0c8cf93a59ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "EdgeCollection API edgeCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 426,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = {\n    chicken: \"chicken\",\n    _key: \"banana\",\n    _from: \"d/1\",\n    _to: \"d/2\"\n};\nconst meta = await collection.save(data);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.equals(data._key);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._key).to.equal(data._key);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);\nchai_1.expect(doc.chicken).to.equal(data.chicken);",
                  "err": {},
                  "uuid": "d4b09521-0e92-4a78-b0f3-ca93cc5803f0",
                  "parentUUID": "a5c44ff7-163d-4be8-bffc-0c8cf93a59ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes _from and _to as positional arguments",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes _from and _to as positional arguments",
                  "timedOut": false,
                  "duration": 247,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to);\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "a5a604e4-2a4f-4a9d-9962-e70499261ef0",
                  "parentUUID": "a5c44ff7-163d-4be8-bffc-0c8cf93a59ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object",
                  "timedOut": false,
                  "duration": 412,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\", _from: \"d/1\", _to: \"d/2\" };\nconst meta = await collection.save(data, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(data._from);\nchai_1.expect(doc._to).to.equal(data._to);",
                  "err": {},
                  "uuid": "e3f93bef-4e90-4e55-b932-83fceec8a930",
                  "parentUUID": "a5c44ff7-163d-4be8-bffc-0c8cf93a59ce",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "takes an options object with positional _from and _to",
                  "fullTitle": "EdgeCollection API edgeCollection.save takes an options object with positional _from and _to",
                  "timedOut": false,
                  "duration": 463,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const data = { chicken: \"chicken\" };\nconst from = \"d/1\";\nconst to = \"d/2\";\nconst meta = await collection.save(data, from, to, { returnNew: true });\nchai_1.expect(meta).to.be.an(\"object\");\nchai_1.expect(meta)\n    .to.have.property(\"_id\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_rev\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"_key\")\n    .that.is.a(\"string\");\nchai_1.expect(meta)\n    .to.have.property(\"new\")\n    .that.is.an(\"object\");\nchai_1.expect(meta.new).to.have.property(\"chicken\", data.chicken);\nconst doc = await collection.edge(meta._id);\nchai_1.expect(doc).to.have.keys(\"chicken\", \"_key\", \"_id\", \"_rev\", \"_from\", \"_to\");\nchai_1.expect(doc.chicken).to.equal(data.chicken);\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc._from).to.equal(from);\nchai_1.expect(doc._to).to.equal(to);",
                  "err": {},
                  "uuid": "d7ae6a4f-c30a-4161-a096-c42db4d466bb",
                  "parentUUID": "a5c44ff7-163d-4be8-bffc-0c8cf93a59ce",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c502519e-46f3-4d25-94af-84540128249d",
                "d4b09521-0e92-4a78-b0f3-ca93cc5803f0",
                "a5a604e4-2a4f-4a9d-9962-e70499261ef0",
                "e3f93bef-4e90-4e55-b932-83fceec8a930",
                "d7ae6a4f-c30a-4161-a096-c42db4d466bb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1958,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "3f9e0bc5-df96-47c4-9a5a-e19224e7190a",
              "title": "edgeCollection.traversal",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal \"before each\" hook",
                  "timedOut": false,
                  "duration": 633,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows = fabric.edgeCollection(\"knows\");\nconst person = fabric.collection(\"person\");\nPromise.all([person.create(), knows.create()])\n    .then(() => Promise.all([\n    person.import([\n        { _key: \"Alice\" },\n        { _key: \"Bob\" },\n        { _key: \"Charlie\" },\n        { _key: \"Dave\" },\n        { _key: \"Eve\" }\n    ]),\n    knows.import([\n        { _from: \"person/Alice\", _to: \"person/Bob\" },\n        { _from: \"person/Bob\", _to: \"person/Charlie\" },\n        { _from: \"person/Bob\", _to: \"person/Dave\" },\n        { _from: \"person/Eve\", _to: \"person/Alice\" },\n        { _from: \"person/Eve\", _to: \"person/Bob\" }\n    ])\n]))\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "c0b455d6-faa8-4468-9348-1a1eede323ea",
                  "parentUUID": "3f9e0bc5-df96-47c4-9a5a-e19224e7190a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "executes traversal",
                  "fullTitle": "EdgeCollection API edgeCollection.traversal executes traversal",
                  "timedOut": false,
                  "duration": 131,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "knows\n    .traversal(\"person/Alice\", { direction: \"outbound\" })\n    .then((result) => {\n    chai_1.expect(result).to.have.property(\"visited\");\n    const visited = result.visited;\n    chai_1.expect(visited).to.have.property(\"vertices\");\n    const vertices = visited.vertices;\n    chai_1.expect(vertices).to.be.instanceOf(Array);\n    chai_1.expect(vertices.length).to.equal(4);\n    const names = vertices.map((d) => d._key);\n    for (const name of [\"Alice\", \"Bob\", \"Charlie\", \"Dave\"]) {\n        chai_1.expect(names).to.contain(name);\n    }\n    chai_1.expect(visited).to.have.property(\"paths\");\n    const paths = visited.paths;\n    chai_1.expect(paths).to.be.instanceOf(Array);\n    chai_1.expect(paths.length).to.equal(4);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "9db372a3-dd15-4735-b141-05edcc7f5a8f",
                  "parentUUID": "3f9e0bc5-df96-47c4-9a5a-e19224e7190a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9db372a3-dd15-4735-b141-05edcc7f5a8f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 131,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f708a05e-599c-4170-a1a3-36f13d855200",
              "title": "edgeCollection.replace",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.replace replaces the given edge",
                  "timedOut": false,
                  "duration": 508,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = { potato: \"tomato\", _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, {\n        sup: \"dawg\",\n        _from: \"d/1\",\n        _to: \"d/2\"\n    });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "4aa80a3b-2034-437b-b8b4-7a558e2fae7a",
                  "parentUUID": "f708a05e-599c-4170-a1a3-36f13d855200",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4aa80a3b-2034-437b-b8b4-7a558e2fae7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 508,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a7df2bcc-5965-4ded-910e-a7b09c611100",
              "title": "edgeCollection.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given document",
                  "fullTitle": "EdgeCollection API edgeCollection.update updates the given document",
                  "timedOut": false,
                  "duration": 721,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).to.have.property(\"empty\", null);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "8871a19e-34ee-4357-b947-267ff4c92418",
                  "parentUUID": "a7df2bcc-5965-4ded-910e-a7b09c611100",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "EdgeCollection API edgeCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 616,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false, _from: \"d/1\", _to: \"d/2\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.edge(doc._key))\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"potato\", doc.potato);\n    chai_1.expect(data).to.have.property(\"sup\", \"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "d5cd7866-1373-4eac-bad2-e5f515bedfbd",
                  "parentUUID": "a7df2bcc-5965-4ded-910e-a7b09c611100",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8871a19e-34ee-4357-b947-267ff4c92418",
                "d5cd7866-1373-4eac-bad2-e5f515bedfbd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1337,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e227696c-26f0-4f2b-a735-fa1a279a7030",
              "title": "edgeCollection.remove",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/15-edge-collections.js",
              "file": "/lib/async/test/15-edge-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "EdgeCollection API edgeCollection.remove \"before each\" hook",
                  "timedOut": false,
                  "duration": 202,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key, _from: \"d/1\", _to: \"d/2\" })\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7dc44678-48ea-434a-b775-3fc3e1fe756b",
                  "parentUUID": "e227696c-26f0-4f2b-a735-fa1a279a7030",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given edge",
                  "fullTitle": "EdgeCollection API edgeCollection.remove deletes the given edge",
                  "timedOut": false,
                  "duration": 414,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.edge(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "faadcb08-6512-47f5-8133-821707401335",
                  "parentUUID": "e227696c-26f0-4f2b-a735-fa1a279a7030",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "faadcb08-6512-47f5-8133-821707401335"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 414,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "4ca6157e-20fa-4ef3-8060-1ac79fff1514",
          "title": "Graph API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
          "file": "/lib/async/test/16-graphs.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Graph API \"before all\" hook",
              "timedOut": false,
              "duration": 916,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "ce4378dd-9526-48ef-9222-b99de602bba4",
              "parentUUID": "4ca6157e-20fa-4ef3-8060-1ac79fff1514",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Graph API \"after all\" hook",
              "timedOut": false,
              "duration": 181,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "49a9db9e-ee38-4c1d-bfaa-0eb1d1d76806",
              "parentUUID": "4ca6157e-20fa-4ef3-8060-1ac79fff1514",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "0630dd63-4bdf-45c2-875e-1ebe81c07f79",
              "title": "graph.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.get \"before all\" hook",
                  "timedOut": false,
                  "duration": 722,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "4446bcab-0199-4898-80a9-18e2b51248f1",
                  "parentUUID": "0630dd63-4bdf-45c2-875e-1ebe81c07f79",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.get \"after all\" hook",
                  "timedOut": false,
                  "duration": 613,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "92759052-0b1d-43e4-a764-8c28b4643c03",
                  "parentUUID": "0630dd63-4bdf-45c2-875e-1ebe81c07f79",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "fetches information about the graph",
                  "fullTitle": "Graph API graph.get fetches information about the graph",
                  "timedOut": false,
                  "duration": 201,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "c43890a2-05bd-4cb8-919f-399b6f87c1c5",
                  "parentUUID": "0630dd63-4bdf-45c2-875e-1ebe81c07f79",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c43890a2-05bd-4cb8-919f-399b6f87c1c5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 201,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "80e240ba-db5e-4566-8fc5-9e66b569bd9d",
              "title": "graph.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Graph API graph.create \"before all\" hook",
                  "timedOut": false,
                  "duration": 413,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "bbbaa9f4-4d61-4000-8041-2bd75913f1d4",
                  "parentUUID": "80e240ba-db5e-4566-8fc5-9e66b569bd9d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Graph API graph.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 408,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric.collection(name).drop()))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "45eb47b7-9d79-46b4-9a9e-ab298e89af46",
                  "parentUUID": "80e240ba-db5e-4566-8fc5-9e66b569bd9d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates the graph",
                  "fullTitle": "Graph API graph.create creates the graph",
                  "timedOut": false,
                  "duration": 407,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let graph = fabric.graph(`g${Date.now()}`);\ngraph\n    .create({\n    edgeDefinitions: edgeCollectionNames.map(name => ({\n        collection: name,\n        from: vertexCollectionNames,\n        to: vertexCollectionNames\n    }))\n})\n    .then(() => graph.get())\n    .then(data => {\n    chai_1.expect(data).to.have.property(\"name\", graph.name);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "83943649-b9cc-4151-8fc1-0e3d108b1f16",
                  "parentUUID": "80e240ba-db5e-4566-8fc5-9e66b569bd9d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83943649-b9cc-4151-8fc1-0e3d108b1f16"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 407,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "486f2bf6-8af4-4ea1-b3e7-3202e84fe7da",
              "title": "graph.drop",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/16-graphs.js",
              "file": "/lib/async/test/16-graphs.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Graph API graph.drop \"before each\" hook",
                  "timedOut": false,
                  "duration": 540,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    [vertexCollectionNames, edgeCollectionNames] = names;\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "fa0f79b1-9904-46e1-a7a4-7d218b87a518",
                  "parentUUID": "486f2bf6-8af4-4ea1-b3e7-3202e84fe7da",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Graph API graph.drop \"after each\" hook",
                  "timedOut": false,
                  "duration": 536,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Promise.all([...edgeCollectionNames, ...vertexCollectionNames].map(name => fabric\n    .collection(name)\n    .drop()\n    .catch(() => null)))\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "feb1a18c-5b1c-43a0-bb32-cff05d22b675",
                  "parentUUID": "486f2bf6-8af4-4ea1-b3e7-3202e84fe7da",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "destroys the graph if not passed true",
                  "fullTitle": "Graph API graph.drop destroys the graph if not passed true",
                  "timedOut": false,
                  "duration": 562,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop()\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "a6654917-8694-4b79-b51c-c86622a8dbf9",
                  "parentUUID": "486f2bf6-8af4-4ea1-b3e7-3202e84fe7da",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "additionally drops all of its collections if passed true",
                  "fullTitle": "Graph API graph.drop additionally drops all of its collections if passed true",
                  "timedOut": false,
                  "duration": 689,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .drop(true)\n    .then(() => graph\n    .get()\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => undefined))\n    .then(() => fabric.listCollections())\n    .then(collections => {\n    chai_1.expect(collections.map((c) => c.name)).not.to.include.members([\n        ...edgeCollectionNames,\n        ...vertexCollectionNames\n    ]);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b1e4995b-cc39-442f-9a66-4d5fa967989f",
                  "parentUUID": "486f2bf6-8af4-4ea1-b3e7-3202e84fe7da",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a6654917-8694-4b79-b51c-c86622a8dbf9",
                "b1e4995b-cc39-442f-9a66-4d5fa967989f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1251,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "d86d7281-4b2c-4c8e-bb17-ecc2a81af0da",
          "title": "Manipulating graph vertices",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
          "file": "/lib/async/test/17-graph-vertices.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph vertices \"before all\" hook",
              "timedOut": false,
              "duration": 946,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "5010ab59-f6e4-4dad-af90-7cb18c467f80",
              "parentUUID": "d86d7281-4b2c-4c8e-bb17-ecc2a81af0da",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph vertices \"before each\" hook",
              "timedOut": false,
              "duration": 427,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(`g${Date.now()}`);\ncreateCollections(fabric)\n    .then(names => {\n    collectionNames = names.reduce((a, b) => a.concat(b));\n    return createGraph(graph, names[0], names[1]);\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "ba10ac7f-31d5-40cd-9f82-1a860bcf512f",
              "parentUUID": "d86d7281-4b2c-4c8e-bb17-ecc2a81af0da",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph vertices \"after all\" hook",
              "timedOut": false,
              "duration": 152,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "6749fa37-dcb6-4d36-bf7d-3b594eb0ec7c",
              "parentUUID": "d86d7281-4b2c-4c8e-bb17-ecc2a81af0da",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph vertices \"after each\" hook",
              "timedOut": false,
              "duration": 813,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => Promise.all(collectionNames.map(name => fabric.collection(name).drop())))\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "fa56ac3d-0d4e-4a24-826f-1b8e5bf978cb",
              "parentUUID": "d86d7281-4b2c-4c8e-bb17-ecc2a81af0da",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "636bbf1a-58c3-44ec-888c-1b510a67415f",
              "title": "graph.vertexCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a GraphVertexCollection instance for the collection",
                  "fullTitle": "Manipulating graph vertices graph.vertexCollection returns a GraphVertexCollection instance for the collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "let name = \"potato\";\nlet collection = graph.vertexCollection(name);\nchai_1.expect(collection).to.be.an.instanceof(graph_1.GraphVertexCollection);\nchai_1.expect(collection)\n    .to.have.property(\"name\")\n    .that.equals(name);",
                  "err": {},
                  "uuid": "ca967987-a0a1-4c6b-b382-5606e0653e9c",
                  "parentUUID": "636bbf1a-58c3-44ec-888c-1b510a67415f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ca967987-a0a1-4c6b-b382-5606e0653e9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "76685c62-c9e9-4336-8a61-854c303752b8",
              "title": "graph.addVertexCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"before each\" hook",
                  "timedOut": false,
                  "duration": 182,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`xc${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "25dcb458-2ad7-463c-a46b-10e2f887d8be",
                  "parentUUID": "76685c62-c9e9-4336-8a61-854c303752b8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection \"after each\" hook",
                  "timedOut": false,
                  "duration": 186,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection\n    .drop()\n    .then(() => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "bb5ecae5-41e2-4393-b6f6-b26b49905eb3",
                  "parentUUID": "76685c62-c9e9-4336-8a61-854c303752b8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "adds the given vertex collection to the graph",
                  "fullTitle": "Manipulating graph vertices graph.addVertexCollection adds the given vertex collection to the graph",
                  "timedOut": false,
                  "duration": 115,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).to.contain(vertexCollection.name);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com",
                    "estack": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "5388c692-81bf-4e11-8686-d7b20810c4ce",
                  "parentUUID": "76685c62-c9e9-4336-8a61-854c303752b8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "5388c692-81bf-4e11-8686-d7b20810c4ce"
              ],
              "pending": [],
              "skipped": [],
              "duration": 115,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "c91ca6f5-2840-4741-8df6-aee151ebd873",
              "title": "graph.removeVertexCollection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/17-graph-vertices.js",
              "file": "/lib/async/test/17-graph-vertices.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"removes the given vertex collection from the graph\"",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection \"before each\" hook for \"removes the given vertex collection from the graph\"",
                  "timedOut": false,
                  "duration": 349,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "vertexCollection = fabric.collection(`xc${Date.now()}`);\nvertexCollection\n    .create()\n    .then(() => graph.addVertexCollection(vertexCollection.name))\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com",
                    "estack": "C8Error: VPack error: Expecting Object (exception location: /c8db/arangod/GeneralServer/RestHandler.cpp:458). Please report this error to arangodb.com\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "5d3ab4c3-2273-4be3-a3b4-c2622c73fd78",
                  "parentUUID": "c91ca6f5-2840-4741-8df6-aee151ebd873",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "removes the given vertex collection from the graph",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection removes the given vertex collection from the graph",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "f83583e4-06ed-4890-a6ce-b5879606f052",
                  "parentUUID": "c91ca6f5-2840-4741-8df6-aee151ebd873",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "destroys the collection if explicitly passed true",
                  "fullTitle": "Manipulating graph vertices graph.removeVertexCollection destroys the collection if explicitly passed true",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeVertexCollection(vertexCollection.name, true)\n    .then(data => {\n    chai_1.expect(data.orphanCollections).not.to.contain(vertexCollection.name);\n    return vertexCollection.get();\n})\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), err => {\n    chai_1.expect(err).to.be.an.instanceof(error_1.C8Error);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "e4c97e84-8c23-4b03-95c2-2dee0f02970f",
                  "parentUUID": "c91ca6f5-2840-4741-8df6-aee151ebd873",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "f83583e4-06ed-4890-a6ce-b5879606f052",
                "e4c97e84-8c23-4b03-95c2-2dee0f02970f"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "4c00a2be-d115-4791-ad61-1497393c1508",
          "title": "Manipulating graph edges",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
          "file": "/lib/async/test/18-graph-edges.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating graph edges \"before all\" hook",
              "timedOut": false,
              "duration": 1076,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);",
              "err": {},
              "uuid": "42a04759-200f-407d-bc29-77cb46516f3e",
              "parentUUID": "4c00a2be-d115-4791-ad61-1497393c1508",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "Manipulating graph edges \"before each\" hook",
              "timedOut": false,
              "duration": 201,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph = fabric.graph(graphName);\ngraph\n    .create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n})\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "b92527f3-4152-4001-bb40-f01cbdef4fb6",
              "parentUUID": "4c00a2be-d115-4791-ad61-1497393c1508",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating graph edges \"after all\" hook",
              "timedOut": false,
              "duration": 549,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "f0cacf16-f0ca-48ad-8d53-2445f9115aa2",
              "parentUUID": "4c00a2be-d115-4791-ad61-1497393c1508",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook",
              "fullTitle": "Manipulating graph edges \"after each\" hook",
              "timedOut": false,
              "duration": 206,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "graph\n    .drop()\n    .then(() => void done())\n    .catch(done);",
              "err": {},
              "uuid": "700cfe60-a5c0-41e1-8ff1-5b27b652bbea",
              "parentUUID": "4c00a2be-d115-4791-ad61-1497393c1508",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "f340b03c-7e10-48d2-8589-a61469b77970",
              "title": "graph.get",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return information about the graph",
                  "fullTitle": "Manipulating graph edges graph.get should return information about the graph",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .get()\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "1ad721f7-59a0-40b3-b4dc-744e2d2a432a",
                  "parentUUID": "f340b03c-7e10-48d2-8589-a61469b77970",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1ad721f7-59a0-40b3-b4dc-744e2d2a432a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "f357db95-4eed-484e-bb72-02d53054ae5f",
              "title": "graph.edgeCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should contain edge collection",
                  "fullTitle": "Manipulating graph edges graph.edgeCollections should contain edge collection",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .edgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info.map((c) => c.name)).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "313a1ea4-7e0b-40e9-998d-6ec300bbdf7a",
                  "parentUUID": "f357db95-4eed-484e-bb72-02d53054ae5f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "313a1ea4-7e0b-40e9-998d-6ec300bbdf7a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "136b94d4-9491-48f9-be41-56ee3c02a4e8",
              "title": "graph.listEdgeCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all edge collection names",
                  "fullTitle": "Manipulating graph edges graph.listEdgeCollections should return all edge collection names",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listEdgeCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"knows\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "d07a337e-7b25-404b-a054-8ecd3b3334bf",
                  "parentUUID": "136b94d4-9491-48f9-be41-56ee3c02a4e8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d07a337e-7b25-404b-a054-8ecd3b3334bf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e3c3c735-f11a-4f04-ad07-921a21a8cbff",
              "title": "graph.listVertexCollections",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return all vertex collection names",
                  "fullTitle": "Manipulating graph edges graph.listVertexCollections should return all vertex collection names",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .listVertexCollections()\n    .then(info => {\n    chai_1.expect(info).to.be.instanceOf(Array);\n    chai_1.expect(info.length).to.equal(1);\n    chai_1.expect(info).to.contain(\"person\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "b7ade0e0-6e4a-45fe-979b-6fb515f3a33a",
                  "parentUUID": "e3c3c735-f11a-4f04-ad07-921a21a8cbff",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b7ade0e0-6e4a-45fe-979b-6fb515f3a33a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "019a88cd-459b-460e-be2e-4033a666bd72",
              "title": "graph.addEdgeDefinition",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should add an edgeDefinition to the graph",
                  "fullTitle": "Manipulating graph edges graph.addEdgeDefinition should add an edgeDefinition to the graph",
                  "timedOut": false,
                  "duration": 209,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .addEdgeDefinition({\n    collection: \"works_in\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(2);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"works_in\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"works_in\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "62a1b438-d056-4620-bc9d-83ce07b9a210",
                  "parentUUID": "019a88cd-459b-460e-be2e-4033a666bd72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62a1b438-d056-4620-bc9d-83ce07b9a210"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 209,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "07c34a09-9c1c-4906-b66a-837b41cdd732",
              "title": "graph.replaceEdgeDefinition",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should replace an existing edgeDefinition in the graph",
                  "fullTitle": "Manipulating graph edges graph.replaceEdgeDefinition should replace an existing edgeDefinition in the graph",
                  "timedOut": false,
                  "duration": 206,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .replaceEdgeDefinition(\"knows\", {\n    collection: \"knows\",\n    from: [\"person\"],\n    to: [\"city\"]\n})\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(1);\n    chai_1.expect(info.edgeDefinitions.map((e) => e.collection)).to.contain(\"knows\");\n    const edgeDefinition = info.edgeDefinitions.filter((e) => e.collection === \"knows\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.from))).to.contain(\"person\");\n    chai_1.expect([].concat.apply([], edgeDefinition.map((e) => e.to))).to.contain(\"city\");\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "48a12eb9-2f24-46e2-9c0c-86247f4c2205",
                  "parentUUID": "07c34a09-9c1c-4906-b66a-837b41cdd732",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "48a12eb9-2f24-46e2-9c0c-86247f4c2205"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 206,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "fad050d8-8c9e-4e16-a3b2-840354216481",
              "title": "graph.removeEdgeDefinition",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/18-graph-edges.js",
              "file": "/lib/async/test/18-graph-edges.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should remove an edgeDefinition from the graph",
                  "fullTitle": "Manipulating graph edges graph.removeEdgeDefinition should remove an edgeDefinition from the graph",
                  "timedOut": false,
                  "duration": 205,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "graph\n    .removeEdgeDefinition(\"knows\")\n    .then(info => {\n    chai_1.expect(info).to.have.property(\"name\", graphName);\n    chai_1.expect(info).to.have.property(\"edgeDefinitions\");\n    chai_1.expect(info.edgeDefinitions).to.be.instanceOf(Array);\n    chai_1.expect(info.edgeDefinitions.length).to.equal(0);\n})\n    .then(() => done())\n    .catch(done);",
                  "err": {},
                  "uuid": "7a593ebb-f875-4e00-9594-0d92f16e444b",
                  "parentUUID": "fad050d8-8c9e-4e16-a3b2-840354216481",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7a593ebb-f875-4e00-9594-0d92f16e444b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 205,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "2b0c13e3-074c-41b5-8500-7b50c072d360",
          "title": "GraphVertexCollection API",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
          "file": "/lib/async/test/19-graph-vertex-collections.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "GraphVertexCollection API \"before all\" hook",
              "timedOut": false,
              "duration": 1086,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(dbName, [{ username: \"root\" }], {\n    dcList: dcList\n});\nfabric.useFabric(dbName);\nconst graph = fabric.graph(`testgraph${Date.now()}`);\nawait graph.create({\n    edgeDefinitions: [\n        {\n            collection: \"knows\",\n            from: [\"person\"],\n            to: [\"person\"]\n        }\n    ]\n});\ncollection = graph.vertexCollection(\"person\");",
              "err": {},
              "uuid": "3fdb753e-5456-4bc9-b11a-f3ef5da35fd2",
              "parentUUID": "2b0c13e3-074c-41b5-8500-7b50c072d360",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook",
              "fullTitle": "GraphVertexCollection API \"before each\" hook",
              "timedOut": false,
              "duration": 208,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "collection\n    .truncate()\n    .then(() => done())\n    .catch(done);",
              "err": {},
              "uuid": "54508abf-07c6-43fe-9da1-d6d2253c5d63",
              "parentUUID": "2b0c13e3-074c-41b5-8500-7b50c072d360",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "GraphVertexCollection API \"after all\" hook",
              "timedOut": false,
              "duration": 199,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(dbName);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "99f80cdc-bcf0-4245-9cad-bb89c5d518bb",
              "parentUUID": "2b0c13e3-074c-41b5-8500-7b50c072d360",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "cb74f3ec-4f61-4c21-8ed0-a5ba5d0a2691",
              "title": "graphVertexCollection.vertex",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"returns a vertex in the collection\"",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex \"before each\" hook for \"returns a vertex in the collection\"",
                  "timedOut": false,
                  "duration": 133,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "a41100b5-b2fa-4013-9636-9f0c01b04dc4",
                  "parentUUID": "cb74f3ec-4f61-4c21-8ed0-a5ba5d0a2691",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "3262f614-5be3-429f-ab16-f4a1432ebd3f",
                  "parentUUID": "cb74f3ec-4f61-4c21-8ed0-a5ba5d0a2691",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.vertex does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.vertex(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "fb9b35f6-0782-4d7b-8f90-c5505727f080",
                  "parentUUID": "cb74f3ec-4f61-4c21-8ed0-a5ba5d0a2691",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "3262f614-5be3-429f-ab16-f4a1432ebd3f",
                "fb9b35f6-0782-4d7b-8f90-c5505727f080"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "1438db12-3186-42bb-9a23-5a10c4e24539",
              "title": "graphVertexCollection.document",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"returns a vertex in the collection\"",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document \"before each\" hook for \"returns a vertex in the collection\"",
                  "timedOut": false,
                  "duration": 153,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "meta = await collection.save(data);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "1cf0a470-e2c0-45e2-a270-cea82f41b763",
                  "parentUUID": "1438db12-3186-42bb-9a23-5a10c4e24539",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document returns a vertex in the collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(meta._id);\nchai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\nchai_1.expect(doc._id).to.equal(meta._id);\nchai_1.expect(doc._key).to.equal(meta._key);\nchai_1.expect(doc._rev).to.equal(meta._rev);\nchai_1.expect(doc.foo).to.equal(data.foo);",
                  "err": {},
                  "uuid": "ba3a005f-53f9-473a-825e-b5487bc2afad",
                  "parentUUID": "1438db12-3186-42bb-9a23-5a10c4e24539",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "does not throw on not found when graceful",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.document does not throw on not found when graceful",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await collection.document(\"doesnotexist\", true);\nchai_1.expect(doc).to.equal(null);",
                  "err": {},
                  "uuid": "6f9a13de-e43b-4ea6-8264-b36b5459039f",
                  "parentUUID": "1438db12-3186-42bb-9a23-5a10c4e24539",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "ba3a005f-53f9-473a-825e-b5487bc2afad",
                "6f9a13de-e43b-4ea6-8264-b36b5459039f"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "e0b11d4b-7aae-488e-bd52-3efa8a23c096",
              "title": "graphVertexCollection.save",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a vertex in the collection",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save creates a vertex in the collection",
                  "timedOut": false,
                  "duration": 206,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let data = { foo: \"bar\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.is.a(\"string\");\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"foo\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._key).to.equal(meta._key);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc.foo).to.equal(data.foo);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "6f77b5f8-1ce7-420a-a6ee-c30424a07a83",
                  "parentUUID": "e0b11d4b-7aae-488e-bd52-3efa8a23c096",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "uses the given _key if provided",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.save uses the given _key if provided",
                  "timedOut": false,
                  "duration": 205,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let data = { potato: \"tomato\", _key: \"banana\" };\ncollection\n    .save(data)\n    .then(meta => {\n    chai_1.expect(meta).to.be.an(\"object\");\n    chai_1.expect(meta)\n        .to.have.property(\"_id\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_rev\")\n        .that.is.a(\"string\");\n    chai_1.expect(meta)\n        .to.have.property(\"_key\")\n        .that.equals(data._key);\n    return collection.vertex(meta._id).then(doc => {\n        chai_1.expect(doc).to.have.keys(\"_key\", \"_id\", \"_rev\", \"potato\");\n        chai_1.expect(doc._id).to.equal(meta._id);\n        chai_1.expect(doc._rev).to.equal(meta._rev);\n        chai_1.expect(doc._key).to.equal(data._key);\n        chai_1.expect(doc.potato).to.equal(data.potato);\n    });\n})\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "7313efeb-6556-481d-bfb9-d888b92d50b3",
                  "parentUUID": "e0b11d4b-7aae-488e-bd52-3efa8a23c096",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "6f77b5f8-1ce7-420a-a6ee-c30424a07a83",
                "7313efeb-6556-481d-bfb9-d888b92d50b3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 411,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a36f1aa2-cb9c-4b5a-ba7e-2e925093d364",
              "title": "graphVertexCollection.replace",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "replaces the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.replace replaces the given vertex",
                  "timedOut": false,
                  "duration": 208,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\" };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.replace(doc, { sup: \"dawg\" });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data).not.to.have.property(\"potato\");\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "20fb560a-5d25-4ab5-8f8b-4aea28d79b41",
                  "parentUUID": "a36f1aa2-cb9c-4b5a-ba7e-2e925093d364",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "20fb560a-5d25-4ab5-8f8b-4aea28d79b41"
              ],
              "pending": [],
              "skipped": [],
              "duration": 208,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "39899d27-b5af-4902-a081-fdf419a23f93",
              "title": "graphVertexCollection.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update updates the given vertex",
                  "timedOut": false,
                  "duration": 211,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data)\n        .to.have.property(\"empty\")\n        .that.equals(null);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "3a300311-8332-4e93-8d39-cf2cb85f674c",
                  "parentUUID": "39899d27-b5af-4902-a081-fdf419a23f93",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "removes null values if keepNull is explicitly set to false",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.update removes null values if keepNull is explicitly set to false",
                  "timedOut": false,
                  "duration": 195,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let doc = { potato: \"tomato\", empty: false };\ncollection\n    .save(doc)\n    .then(meta => {\n    delete meta.error;\n    Object.assign(doc, meta);\n    return collection.update(doc, { sup: \"dawg\", empty: null }, { keepNull: false });\n})\n    .then(() => collection.vertex(doc._key))\n    .then(data => {\n    chai_1.expect(data)\n        .to.have.property(\"potato\")\n        .that.equals(doc.potato);\n    chai_1.expect(data)\n        .to.have.property(\"sup\")\n        .that.equals(\"dawg\");\n    chai_1.expect(data).not.to.have.property(\"empty\");\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "fcf52ea6-1121-4fa8-b430-946355c48baf",
                  "parentUUID": "39899d27-b5af-4902-a081-fdf419a23f93",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "3a300311-8332-4e93-8d39-cf2cb85f674c",
                "fcf52ea6-1121-4fa8-b430-946355c48baf"
              ],
              "pending": [],
              "skipped": [],
              "duration": 406,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            },
            {
              "uuid": "a7f5ac4c-a6b8-4291-b17c-27e51bd23e2b",
              "title": "graphVertexCollection.remove",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/19-graph-vertex-collections.js",
              "file": "/lib/async/test/19-graph-vertex-collections.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook for \"deletes the given vertex\"",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove \"before each\" hook for \"deletes the given vertex\"",
                  "timedOut": false,
                  "duration": 209,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .save({ _key: key })\n    .then(() => void done())\n    .catch(done);",
                  "err": {
                    "message": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'",
                    "estack": "C8Error: unknown path '/_fabric/testdb1582178587521/graph/testgraph1582178754059/vertex/person'\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "61be910a-71d3-4cef-b4ba-7b92d6a85deb",
                  "parentUUID": "a7f5ac4c-a6b8-4291-b17c-27e51bd23e2b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes the given vertex",
                  "fullTitle": "GraphVertexCollection API graphVertexCollection.remove deletes the given vertex",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "collection\n    .remove(key)\n    .then(() => collection.vertex(key))\n    .then(() => Promise.reject(new Error(\"Should not succeed\")), () => void done())\n    .catch(done);",
                  "err": {},
                  "uuid": "0ed6a809-89ce-49a7-941c-d8854e3feff3",
                  "parentUUID": "a7f5ac4c-a6b8-4291-b17c-27e51bd23e2b",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "0ed6a809-89ce-49a7-941c-d8854e3feff3"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 60000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        },
        {
          "uuid": "9fd2c706-d7fc-46c0-a75d-168b97da189e",
          "title": "Join Path",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/21-util-joinpath.js",
          "file": "/lib/async/test/21-util-joinpath.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "joinPath 1",
              "fullTitle": "Join Path joinPath 1",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"../../u1/u2\";\nvar path = \"/security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"../../u1/u2/security/authenticate\");",
              "err": {},
              "uuid": "8df435e3-8b88-471b-92f5-82e45db9df4c",
              "parentUUID": "9fd2c706-d7fc-46c0-a75d-168b97da189e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 2",
              "fullTitle": "Join Path joinPath 2",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/u1/security/authenticate\");",
              "err": {},
              "uuid": "97ccf409-6398-4b74-9e89-233e658e1f66",
              "parentUUID": "9fd2c706-d7fc-46c0-a75d-168b97da189e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "joinPath 3",
              "fullTitle": "Join Path joinPath 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var baseUrl = \"/u1/u2\";\nvar path = \"../../security/authenticate\";\nchai_1.expect(joinPath_1.joinPath(baseUrl, path)).to.equal(\"/security/authenticate\");",
              "err": {},
              "uuid": "3d39709e-83b1-4f83-bd18-93eb5ec1f3cf",
              "parentUUID": "9fd2c706-d7fc-46c0-a75d-168b97da189e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8df435e3-8b88-471b-92f5-82e45db9df4c",
            "97ccf409-6398-4b74-9e89-233e658e1f66",
            "3d39709e-83b1-4f83-bd18-93eb5ec1f3cf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "678829c8-58e7-4866-9cf9-b8b7959e89b9",
          "title": "Helper.getFullStreamPath",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output when there is no extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is no extra url",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog\");",
              "err": {},
              "uuid": "707c11fe-483f-4b12-8cf3-7bc3a9b638dc",
              "parentUUID": "678829c8-58e7-4866-9cf9-b8b7959e89b9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "returns correct output when there is extra url",
              "fullTitle": "Helper.getFullStreamPath returns correct output when there is extra url",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = helper_1.getFullStreamPath(\"_polog\", \"/compaction\");\nchai_1.expect(path).to.equal(\"/streams/persistent/stream/_polog/compaction\");",
              "err": {},
              "uuid": "d4ccd7eb-5290-4456-aac9-e54eeef82c46",
              "parentUUID": "678829c8-58e7-4866-9cf9-b8b7959e89b9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "707c11fe-483f-4b12-8cf3-7bc3a9b638dc",
            "d4ccd7eb-5290-4456-aac9-e54eeef82c46"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "fa3338b1-ac68-404b-9765-b101ae338aad",
          "title": "Helper.getDCListString",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/22-util-helper.js",
          "file": "/lib/async/test/22-util-helper.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns correct output",
              "fullTitle": "Helper.getDCListString returns correct output",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai_1.expect(helper_1.getDCListString(response)).to.equal('dev-ap-southeast-1,dev-ap-southeast-2');",
              "err": {},
              "uuid": "61d2acfe-224d-4ff3-8c2f-f968bb0740e2",
              "parentUUID": "fa3338b1-ac68-404b-9765-b101ae338aad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "61d2acfe-224d-4ff3-8c2f-f968bb0740e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "681140ec-f698-4c8d-9929-0bba79daade1",
          "title": "C8QL Stream queries",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/23-c8ql-queries-stream.js",
          "file": "/lib/async/test/23-c8ql-queries-stream.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "C8QL Stream queries \"before all\" hook",
              "timedOut": false,
              "duration": 1122,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);\nawait fabric.createFabric(name, [{ username: \"root\" }], { dcList: dcList });\nfabric.useFabric(name);",
              "err": {},
              "uuid": "45627a98-04ff-48a9-87da-e8acb989514e",
              "parentUUID": "681140ec-f698-4c8d-9929-0bba79daade1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "C8QL Stream queries \"after all\" hook",
              "timedOut": false,
              "duration": 170,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n    fabric.useFabric(\"_system\");\n    await fabric.dropFabric(name);\n}\nfinally {\n    fabric.close();\n}",
              "err": {},
              "uuid": "dc2e307c-0147-4626-9ec4-ff9147c1a242",
              "parentUUID": "681140ec-f698-4c8d-9929-0bba79daade1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "d82815bb-752b-4c91-b723-fcc7fe7c70f0",
              "title": "fabric.query",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a cursor for the query result",
                  "fullTitle": "C8QL Stream queries fabric.query returns a cursor for the query result",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN 23\", {}, { options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor).to.be.an.instanceof(cursor_1.ArrayCursor);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "353d4e69-2752-4380-91f1-39a7ea892d68",
                  "parentUUID": "d82815bb-752b-4c91-b723-fcc7fe7c70f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports bindVars",
                  "fullTitle": "C8QL Stream queries fabric.query supports bindVars",
                  "timedOut": false,
                  "duration": 207,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"RETURN @x\", { x: 5 }, { options: { stream: true } })\n    .then(cursor => cursor.next())\n    .then(value => {\n    chai_1.expect(value).to.equal(5);\n    done();\n})\n    .catch(done);",
                  "err": {},
                  "uuid": "b51d825e-106a-4074-913f-e4043f1183c5",
                  "parentUUID": "d82815bb-752b-4c91-b723-fcc7fe7c70f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports options",
                  "fullTitle": "C8QL Stream queries fabric.query supports options",
                  "timedOut": false,
                  "duration": 199,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "fabric\n    .query(\"FOR x IN 1..10 RETURN x\", undefined, {\n    batchSize: 2,\n    count: true,\n    options: { stream: true }\n})\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 10",
                    "estack": "AssertionError: expected undefined to equal 10\n    at fabric.query.then.cursor (src/test/23-c8ql-queries-stream.ts:69:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "b22e6abc-1f1f-49bf-8f06-af879f066ab0",
                  "parentUUID": "d82815bb-752b-4c91-b723-fcc7fe7c70f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "supports compact queries with options",
                  "fullTitle": "C8QL Stream queries fabric.query supports compact queries with options",
                  "timedOut": false,
                  "duration": 196,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let query = {\n    query: \"FOR x IN RANGE(1, @max) RETURN x\",\n    bindVars: { max: 10 }\n};\nfabric\n    .query(query, { batchSize: 2, count: true, options: { stream: true } })\n    .then(cursor => {\n    chai_1.expect(cursor.count).to.equal(10);\n    chai_1.expect(cursor._hasMore).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "AssertionError: expected undefined to equal 10",
                    "estack": "AssertionError: expected undefined to equal 10\n    at fabric.query.then.cursor (src/test/23-c8ql-queries-stream.ts:83:35)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "2d194654-23fd-4d6a-8119-8b36139c91a1",
                  "parentUUID": "d82815bb-752b-4c91-b723-fcc7fe7c70f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "353d4e69-2752-4380-91f1-39a7ea892d68",
                "b51d825e-106a-4074-913f-e4043f1183c5"
              ],
              "failures": [
                "b22e6abc-1f1f-49bf-8f06-af879f066ab0",
                "2d194654-23fd-4d6a-8119-8b36139c91a1"
              ],
              "pending": [],
              "skipped": [],
              "duration": 806,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            },
            {
              "uuid": "81c4fa98-139e-4908-9c62-28ef27c7ce3d",
              "title": "with some data",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/23-c8ql-queries-stream.js",
              "file": "/lib/async/test/23-c8ql-queries-stream.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "can do writes and reads",
                  "fullTitle": "C8QL Stream queries with some data can do writes and reads",
                  "timedOut": false,
                  "duration": 205,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "let collection = fabric.collection(cname);\nlet readQ = jsC8_1.c8ql `FOR doc in ${collection} RETURN doc`;\nlet writeQ = jsC8_1.c8ql `FOR i in 1..1000 LET y = SLEEP(1) INSERT {forbidden: i} INTO ${collection}`;\nconst opts = { batchSize: 500, ttl: 5, options: { stream: true } };\n// 900s lock timeout + 5s ttl\nlet readCursor = fabric.query(readQ, opts);\nlet writeCursor = fabric.query(writeQ, opts);\n// the read cursor should always win\nPromise.race([readCursor, writeCursor])\n    .then(c => {\n    // therefore no document should have been written here\n    return c.every((d) => !d.hasOwnProperty(\"forbidden\"));\n})\n    .then(isOk => {\n    chai_1.expect(isOk).to.equal(true);\n    done();\n})\n    .catch(done);",
                  "err": {
                    "message": "C8Error: collection or view not found: name: MyTestCollection",
                    "estack": "C8Error: collection or view not found: name: MyTestCollection\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "830291b0-8f6b-4572-b529-2fe5e7dd71ca",
                  "parentUUID": "81c4fa98-139e-4908-9c62-28ef27c7ce3d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "830291b0-8f6b-4572-b529-2fe5e7dd71ca"
              ],
              "pending": [],
              "skipped": [],
              "duration": 205,
              "root": false,
              "rootEmpty": false,
              "_timeout": 1000000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000
        },
        {
          "uuid": "d11dbbc8-eb5a-4789-b6ed-96a4567fcf45",
          "title": "Manipulating streams",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
          "file": "/lib/async/test/28-manipulating-streams.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating streams \"before all\" hook",
              "timedOut": false,
              "duration": 646,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "8c03d998-1d4a-4642-905d-dd1a531b9a97",
              "parentUUID": "d11dbbc8-eb5a-4789-b6ed-96a4567fcf45",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating streams \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "5bce558e-5745-4c2a-a8c3-a24e18714ba7",
              "parentUUID": "d11dbbc8-eb5a-4789-b6ed-96a4567fcf45",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "213f6fe9-8ebd-4dda-b5a3-db3cf1a5c6e7",
              "title": "fabric.stream",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns a new Stream instance",
                  "fullTitle": "Manipulating streams fabric.stream returns a new Stream instance",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.stream(\"testStream\", true)).to.be.instanceof(stream_1.Stream);",
                  "err": {},
                  "uuid": "2b86d8e2-0ca9-44fc-9990-6788b119b7f3",
                  "parentUUID": "213f6fe9-8ebd-4dda-b5a3-db3cf1a5c6e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "gets all streams",
                  "fullTitle": "Manipulating streams fabric.stream gets all streams",
                  "timedOut": false,
                  "duration": 201,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getStreams();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "59e6540b-503b-4929-9ec1-19778dc0cd06",
                  "parentUUID": "213f6fe9-8ebd-4dda-b5a3-db3cf1a5c6e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears backlog",
                  "timedOut": false,
                  "duration": 203,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.clearBacklog();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "b2c5621a-958d-42aa-a55b-148b2daf66d2",
                  "parentUUID": "213f6fe9-8ebd-4dda-b5a3-db3cf1a5c6e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "clears subscription backlog",
                  "fullTitle": "Manipulating streams fabric.stream clears subscription backlog",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "d7adec9d-b015-4066-8f16-f8d7ff11f0c9",
                  "parentUUID": "213f6fe9-8ebd-4dda-b5a3-db3cf1a5c6e7",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "unsubscribes to a subscription",
                  "fullTitle": "Manipulating streams fabric.stream unsubscribes to a subscription",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "af11b6e7-cfd1-48f3-9d73-27518e0514fb",
                  "parentUUID": "213f6fe9-8ebd-4dda-b5a3-db3cf1a5c6e7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2b86d8e2-0ca9-44fc-9990-6788b119b7f3",
                "59e6540b-503b-4929-9ec1-19778dc0cd06",
                "b2c5621a-958d-42aa-a55b-148b2daf66d2"
              ],
              "failures": [],
              "pending": [
                "d7adec9d-b015-4066-8f16-f8d7ff11f0c9",
                "af11b6e7-cfd1-48f3-9d73-27518e0514fb"
              ],
              "skipped": [],
              "duration": 404,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "061b83e6-c0e2-44de-8df9-72d145b05de7",
              "title": "stream.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "58dc8049-6e75-4333-8afa-2eb3fc8ba5b7",
                  "title": "persistent",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "creates a persistent local stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent local stream",
                      "timedOut": false,
                      "duration": 132,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, true);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "8d0210bb-c474-4f4a-bd08-9e6ea6e3b1b6",
                      "parentUUID": "58dc8049-6e75-4333-8afa-2eb3fc8ba5b7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "creates a persistent global stream",
                      "fullTitle": "Manipulating streams stream.create persistent creates a persistent global stream",
                      "timedOut": false,
                      "duration": 174,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const name = `stream${Date.now()}`;\nstream = fabric.stream(name, false);\nconst response = await stream.createStream();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "b703ca5c-2d2d-483e-8329-1d333cb7ee8f",
                      "parentUUID": "58dc8049-6e75-4333-8afa-2eb3fc8ba5b7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "8d0210bb-c474-4f4a-bd08-9e6ea6e3b1b6",
                    "b703ca5c-2d2d-483e-8329-1d333cb7ee8f"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 306,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "740a2626-5e1a-4213-b220-522e9405e0ad",
              "title": "stream.manipulate",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
              "file": "/lib/async/test/28-manipulating-streams.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 203,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream = fabric.stream(`testStream${Date.now()}`, false);\nawait stream.createStream();",
                  "err": {},
                  "uuid": "345963d5-15ce-4eba-bc9a-c43b3d7fb6c1",
                  "parentUUID": "740a2626-5e1a-4213-b220-522e9405e0ad",
                  "isHook": true,
                  "skipped": false
                },
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"before all\" hook",
                  "timedOut": false,
                  "duration": 206,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                  "err": {},
                  "uuid": "82a6dced-67f1-4c23-a12b-059831b6879c",
                  "parentUUID": "740a2626-5e1a-4213-b220-522e9405e0ad",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "Manipulating streams stream.manipulate \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "stream.closeConnections();",
                  "err": {},
                  "uuid": "60bb75a4-eab8-42be-80c7-7065deeaf8a1",
                  "parentUUID": "740a2626-5e1a-4213-b220-522e9405e0ad",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "stream.expireMessagesOnAllSubscriptions",
                  "fullTitle": "Manipulating streams stream.manipulate stream.expireMessagesOnAllSubscriptions",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "bc05da0a-8c31-4f8c-8fa7-8ebd380340be",
                  "parentUUID": "740a2626-5e1a-4213-b220-522e9405e0ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "3f4b4d95-ecd8-4ec9-b3a3-38a449b7297d",
                  "title": "stream.getBacklog",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets estimated backlog for offline stream",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getBacklog gets estimated backlog for offline stream",
                      "timedOut": false,
                      "duration": 307,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.backlog();\nconsole.log(response.error);\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "eec170fb-7585-4bfd-9b95-889e0ce07c47",
                      "parentUUID": "3f4b4d95-ecd8-4ec9-b3a3-38a449b7297d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "eec170fb-7585-4bfd-9b95-889e0ce07c47"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 307,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "dd292220-ba0c-43d0-a0b6-4eeec011c34a",
                  "title": "stream.getStreamStatistics",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "gets the stream statistics",
                      "fullTitle": "Manipulating streams stream.manipulate stream.getStreamStatistics gets the stream statistics",
                      "timedOut": false,
                      "duration": 205,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await stream.getStreamStatistics();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "0cc8f532-3ebe-4d58-a403-52c5bae272e4",
                      "parentUUID": "dd292220-ba0c-43d0-a0b6-4eeec011c34a",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "0cc8f532-3ebe-4d58-a403-52c5bae272e4"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 205,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                  "title": "stream.subscriptions",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "stream.resetSubscriptionToPosition",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetSubscriptionToPosition",
                      "timedOut": false,
                      "duration": 1640,
                      "state": "failed",
                      "speed": "slow",
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "let numberOfMessages = 0;\nfunction callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    const array = [\"bmFuZGhh\", \"YWJoaXNoZWs=\", \"dmlwdWw=\", \"c3Vsb20=\", \"cHJhdGlr\"];\n    if (array.includes(payload)) {\n        numberOfMessages++;\n    }\n    ;\n    if (numberOfMessages === 5) {\n        done();\n    }\n}\nstream.consumer(`streamSubscriptionTest`, {\n    onmessage: callback,\n    onopen: () => {\n        stream.producer([\"nandha\", \"abhishek\", \"vipul\", \"sulom\", \"pratik\"], dcName);\n    }\n}, dcName);",
                      "err": {
                        "message": "Error: done() called multiple times",
                        "estack": "Error: done() called multiple times\n    at callback (src/test/28-manipulating-streams.ts:103:13)\n    at WebSocket.consumer.on (src/stream.ts:247:21)\n    at Receiver.receiverOnMessage (node_modules/ws/lib/websocket.js:719:20)\n    at Receiver.dataMessage (node_modules/ws/lib/receiver.js:414:14)\n    at perMessageDeflate.decompress (node_modules/ws/lib/receiver.js:371:23)\n    at _decompress (node_modules/ws/lib/permessage-deflate.js:307:9)\n    at _inflate.flush (node_modules/ws/lib/permessage-deflate.js:389:7)\n    at afterWrite (_stream_writable.js:485:3)\n    at onwrite (_stream_writable.js:476:7)\n    at InflateRaw.afterTransform (_stream_transform.js:94:3)\n    at Zlib.processCallback (zlib.js:557:8)",
                        "diff": null
                      },
                      "uuid": "3f588a52-8b64-48b9-9c5f-ab99a26d0f70",
                      "parentUUID": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.expireMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.expireMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "11ac0817-2368-4c68-9fe8-b24adfdb3ef3",
                      "parentUUID": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.resetCursor",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.resetCursor",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "5b30ca72-cb85-41c4-8279-a2aa4cb11a3c",
                      "parentUUID": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipNumberOfMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipNumberOfMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "b4334e01-a41a-4b08-8163-c152587e4d0e",
                      "parentUUID": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.skipAllMessages",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.skipAllMessages",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "dd519dc7-986c-4f52-ae12-4c3f1ae925a3",
                      "parentUUID": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "stream.getSubscriptionList",
                      "fullTitle": "Manipulating streams stream.manipulate stream.subscriptions stream.getSubscriptionList",
                      "timedOut": false,
                      "duration": 0,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "it(\"gets subscription list\", async () => {\n    const response = await stream.getSubscriptionList();\n    chai_1.expect(response.error).to.be.false;\n});",
                      "err": {},
                      "uuid": "ccecb943-8299-4afc-9608-a0b33fa8b457",
                      "parentUUID": "aefa244e-fe88-4e10-9d09-1dd65441bec6",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "11ac0817-2368-4c68-9fe8-b24adfdb3ef3",
                    "5b30ca72-cb85-41c4-8279-a2aa4cb11a3c",
                    "b4334e01-a41a-4b08-8163-c152587e4d0e",
                    "dd519dc7-986c-4f52-ae12-4c3f1ae925a3",
                    "ccecb943-8299-4afc-9608-a0b33fa8b457"
                  ],
                  "failures": [
                    "3f588a52-8b64-48b9-9c5f-ab99a26d0f70"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 1640,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "607d04c9-0ec8-4d2d-8f47-df50374aa66c",
                  "title": "stream.terminate",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [],
                  "suites": [
                    {
                      "uuid": "2eec7f21-d333-488e-81db-c9fd8a97b997",
                      "title": "persistent",
                      "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                      "file": "/lib/async/test/28-manipulating-streams.js",
                      "beforeHooks": [],
                      "afterHooks": [],
                      "tests": [],
                      "suites": [
                        {
                          "uuid": "ec55b0e7-ba55-4aa2-aef5-dbc07a3657bf",
                          "title": "local",
                          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local \"before each\" hook",
                              "timedOut": false,
                              "duration": 127,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, true);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "98dc8e4a-2057-4b40-9a4b-836c60307048",
                              "parentUUID": "ec55b0e7-ba55-4aa2-aef5-dbc07a3657bf",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent local stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent local terminates persistent local stream",
                              "timedOut": false,
                              "duration": 173,
                              "state": "failed",
                              "speed": null,
                              "pass": false,
                              "fail": true,
                              "pending": false,
                              "context": null,
                              "code": "const response = await stream.terminateStream();\nchai_1.expect(response.error).to.be.false;",
                              "err": {
                                "message": "C8Error: C8Streams error 404",
                                "estack": "C8Error: C8Streams error 404\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                                "diff": null
                              },
                              "uuid": "ed05c69e-9e0e-4a69-9da8-00690c8d914e",
                              "parentUUID": "ec55b0e7-ba55-4aa2-aef5-dbc07a3657bf",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [],
                          "failures": [
                            "ed05c69e-9e0e-4a69-9da8-00690c8d914e"
                          ],
                          "pending": [],
                          "skipped": [],
                          "duration": 173,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        },
                        {
                          "uuid": "c2882d17-9806-47ee-b28c-de96a7e6e260",
                          "title": "global",
                          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                          "file": "/lib/async/test/28-manipulating-streams.js",
                          "beforeHooks": [
                            {
                              "title": "\"before each\" hook",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global \"before each\" hook",
                              "timedOut": false,
                              "duration": 205,
                              "state": null,
                              "speed": null,
                              "pass": false,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const streamName = `stream${Date.now()}`;\nstream = fabric.stream(streamName, false);\nawait stream.createStream();",
                              "err": {},
                              "uuid": "06bfcf1c-607d-4b8b-a311-f6de82b48b8c",
                              "parentUUID": "c2882d17-9806-47ee-b28c-de96a7e6e260",
                              "isHook": true,
                              "skipped": false
                            }
                          ],
                          "afterHooks": [],
                          "tests": [
                            {
                              "title": "terminates persistent global stream",
                              "fullTitle": "Manipulating streams stream.manipulate stream.terminate persistent global terminates persistent global stream",
                              "timedOut": false,
                              "duration": 141,
                              "state": "passed",
                              "speed": "slow",
                              "pass": true,
                              "fail": false,
                              "pending": false,
                              "context": null,
                              "code": "const response = await stream.terminateStream();\nchai_1.expect(response.error).to.be.false;",
                              "err": {},
                              "uuid": "6fac7d40-2bbd-4943-81c4-43c4a72edff8",
                              "parentUUID": "c2882d17-9806-47ee-b28c-de96a7e6e260",
                              "isHook": false,
                              "skipped": false
                            }
                          ],
                          "suites": [],
                          "passes": [
                            "6fac7d40-2bbd-4943-81c4-43c4a72edff8"
                          ],
                          "failures": [],
                          "pending": [],
                          "skipped": [],
                          "duration": 141,
                          "root": false,
                          "rootEmpty": false,
                          "_timeout": 50000
                        }
                      ],
                      "passes": [],
                      "failures": [],
                      "pending": [],
                      "skipped": [],
                      "duration": 0,
                      "root": false,
                      "rootEmpty": false,
                      "_timeout": 50000
                    }
                  ],
                  "passes": [],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "586d24c7-3ac8-414a-a34c-bebb56690c07",
                  "title": "stream.websocket",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/28-manipulating-streams.js",
                  "file": "/lib/async/test/28-manipulating-streams.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"before all\" hook",
                      "timedOut": false,
                      "duration": 115,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await fabric.getLocalEdgeLocation();\ndcName = response.tags.url;",
                      "err": {},
                      "uuid": "e650de5b-ea82-4a60-9c89-43218b45283d",
                      "parentUUID": "586d24c7-3ac8-414a-a34c-bebb56690c07",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after all\" hook",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket \"after all\" hook",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "stream.closeConnections();",
                      "err": {},
                      "uuid": "2204cf3f-2e40-475b-bac6-0b8aa393fdea",
                      "parentUUID": "586d24c7-3ac8-414a-a34c-bebb56690c07",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "gets data in consumer when sent by producer",
                      "fullTitle": "Manipulating streams stream.manipulate stream.websocket gets data in consumer when sent by producer",
                      "timedOut": false,
                      "duration": 879,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "function callback(msg) {\n    const parsedMsg = JSON.parse(msg);\n    const { payload } = parsedMsg;\n    chai_1.expect(payload).to.equal(\"dGVzdA==\");\n    done();\n}\nstream.consumer(`streamSubscription${Date.now()}`, {\n    onmessage: callback,\n    onopen: () => stream.producer(\"test\", dcName)\n}, dcName);",
                      "err": {},
                      "uuid": "89286b66-ba8d-47d7-a281-6dcc6c6f5896",
                      "parentUUID": "586d24c7-3ac8-414a-a34c-bebb56690c07",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "89286b66-ba8d-47d7-a281-6dcc6c6f5896"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 879,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "bc05da0a-8c31-4f8c-8fa7-8ebd380340be"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "22dadd4f-b11f-4109-8780-3fa72324fdb7",
          "title": "manipulating spot",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
          "file": "/lib/async/test/29-manipulating-spot.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating spot \"before all\" hook",
              "timedOut": false,
              "duration": 909,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nlocalLocation = await fabric.getLocalEdgeLocation();\nname = localLocation.name;",
              "err": {},
              "uuid": "19624f1b-4378-4c08-8e04-35ae33eb7dab",
              "parentUUID": "22dadd4f-b11f-4109-8780-3fa72324fdb7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating spot \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "aa5ac09a-879a-4039-aaf0-25e8f02c7a8f",
              "parentUUID": "22dadd4f-b11f-4109-8780-3fa72324fdb7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "c1fd65a6-3b87-485d-b035-07c748f78c44",
              "title": "spot_region status of a region",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should change the spot_region of a region",
                  "fullTitle": "manipulating spot spot_region status of a region should change the spot_region of a region",
                  "timedOut": false,
                  "duration": 407,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const currentSpotStatus = localLocation.spot_region;\nawait fabric.changeEdgeLocationSpotStatus(name, !currentSpotStatus);\nconst changedLocation = await fabric.getLocalEdgeLocation();\nconst changedSpotStatus = changedLocation.spot_region;\nchai_1.expect(changedLocation).to.equal(!changedSpotStatus);",
                  "err": {
                    "message": "AssertionError: expected { Object (_id, _key, ...) } to equal true",
                    "estack": "AssertionError: expected { Object (_id, _key, ...) } to equal true\n    at Context.it (src/test/29-manipulating-spot.ts:35:34)\n    at process._tickCallback (internal/process/next_tick.js:68:7)",
                    "diff": null
                  },
                  "uuid": "d380f86a-90c0-4276-9b7b-07d4b1f28558",
                  "parentUUID": "c1fd65a6-3b87-485d-b035-07c748f78c44",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not change the spot_region to false if a fabric's spot primary is that region",
                  "fullTitle": "manipulating spot spot_region status of a region should not change the spot_region to false if a fabric's spot primary is that region",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9472d828-3ea8-4c83-88b8-54b07c1fc1d6",
                  "parentUUID": "c1fd65a6-3b87-485d-b035-07c748f78c44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "d380f86a-90c0-4276-9b7b-07d4b1f28558"
              ],
              "pending": [
                "9472d828-3ea8-4c83-88b8-54b07c1fc1d6"
              ],
              "skipped": [],
              "duration": 407,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "e3ca6022-efec-4651-b9a7-2bf681acb5bd",
              "title": "spot fabric",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "manipulating spot spot fabric \"after all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "fabric.dropFabric(fabricName);",
                  "err": {},
                  "uuid": "c2a060d0-4221-4239-912d-ba4c785fcc5a",
                  "parentUUID": "e3ca6022-efec-4651-b9a7-2bf681acb5bd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "should create a fabric with a spot primary region",
                  "fullTitle": "manipulating spot spot fabric should create a fabric with a spot primary region",
                  "timedOut": false,
                  "duration": 398,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await fabric.changeEdgeLocationSpotStatus(name, true);\nconst options = {\n    dcList: name,\n    spotDc: name\n};\nconst response = await fabric.createFabric(fabricName, undefined, options);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "9cdaff74-3888-426c-97b8-38e229a94e8c",
                  "parentUUID": "e3ca6022-efec-4651-b9a7-2bf681acb5bd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should change the spot primary region of a fabric",
                  "fullTitle": "manipulating spot spot fabric should change the spot primary region of a fabric",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "c5c9ef18-6be2-4445-83d5-743707e2ebc9",
                  "parentUUID": "e3ca6022-efec-4651-b9a7-2bf681acb5bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9cdaff74-3888-426c-97b8-38e229a94e8c"
              ],
              "failures": [],
              "pending": [
                "c5c9ef18-6be2-4445-83d5-743707e2ebc9"
              ],
              "skipped": [],
              "duration": 398,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "1dfce40a-98c5-4f55-b521-ab3dc864ae3c",
              "title": "spot collection",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
              "file": "/lib/async/test/29-manipulating-spot.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create a spot document collection",
                  "fullTitle": "manipulating spot spot collection should create a spot document collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "e178747e-64ec-4ff9-9e6c-e34a99b32ca6",
                  "parentUUID": "1dfce40a-98c5-4f55-b521-ab3dc864ae3c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should create a spot edge collection",
                  "fullTitle": "manipulating spot spot collection should create a spot edge collection",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "826e5c7c-45d0-4042-806e-46bec2e95711",
                  "parentUUID": "1dfce40a-98c5-4f55-b521-ab3dc864ae3c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "f63d079a-71d0-44d4-8ddb-eeb9dd8db027",
                  "title": "mapulating spot collection's region",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/29-manipulating-spot.js",
                  "file": "/lib/async/test/29-manipulating-spot.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "should change the spot region of a spot collection to none",
                      "fullTitle": "manipulating spot spot collection mapulating spot collection's region should change the spot region of a spot collection to none",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "2e131250-d02b-4555-b40f-3f1f050aafc6",
                      "parentUUID": "f63d079a-71d0-44d4-8ddb-eeb9dd8db027",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "should change the spot region of a spot collection to some other region",
                      "fullTitle": "manipulating spot spot collection mapulating spot collection's region should change the spot region of a spot collection to some other region",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": true,
                      "context": null,
                      "code": "",
                      "err": {},
                      "uuid": "408b7800-07f3-4e0e-9ee3-c122d9d0af06",
                      "parentUUID": "f63d079a-71d0-44d4-8ddb-eeb9dd8db027",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [],
                  "failures": [],
                  "pending": [
                    "2e131250-d02b-4555-b40f-3f1f050aafc6",
                    "408b7800-07f3-4e0e-9ee3-c122d9d0af06"
                  ],
                  "skipped": [],
                  "duration": 0,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [
                "e178747e-64ec-4ff9-9e6c-e34a99b32ca6",
                "826e5c7c-45d0-4042-806e-46bec2e95711"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "2a91103f-ec86-41ad-a153-2a196d1ca307",
          "title": "User Management",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
          "file": "/lib/async/test/30-user-management.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "User Management \"before all\" hook",
              "timedOut": false,
              "duration": 820,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nconst response = await fabric.getAllEdgeLocations();\ndcList = helper_1.getDCListString(response);",
              "err": {},
              "uuid": "f882d971-14b3-4694-8f83-ba1b91c17f92",
              "parentUUID": "2a91103f-ec86-41ad-a153-2a196d1ca307",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "User Management \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "15c0be09-b444-4bfa-95d2-9b2d7c03cc95",
              "parentUUID": "2a91103f-ec86-41ad-a153-2a196d1ca307",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3c3dfc27-e159-4167-9cf9-061edfe7415c",
              "title": "fabric.user",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new user instance",
                  "fullTitle": "User Management fabric.user creates a new user instance",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(fabric.user(\"testUser\", \"testUser@test.com\")).to.be.instanceof(user_1.default);",
                  "err": {},
                  "uuid": "1d4d0cdd-ecc3-430f-a1e9-e3d057b00d6b",
                  "parentUUID": "3c3dfc27-e159-4167-9cf9-061edfe7415c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d4d0cdd-ecc3-430f-a1e9-e3d057b00d6b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "4ead8b8d-d1a8-4f03-a750-7e12268e119c",
              "title": "user.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [
                {
                  "title": "\"after all\" hook",
                  "fullTitle": "User Management user.create \"after all\" hook",
                  "timedOut": false,
                  "duration": 307,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await user.deleteUser();",
                  "err": {},
                  "uuid": "7161781c-0a10-4deb-9f02-3d281bc79269",
                  "parentUUID": "4ead8b8d-d1a8-4f03-a750-7e12268e119c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [
                {
                  "title": "creates a user",
                  "fullTitle": "User Management user.create creates a user",
                  "timedOut": false,
                  "duration": 194,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nconst response = await user.createUser(\"testPass\");\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "85f35920-2546-408a-8c15-696e3ced9ab3",
                  "parentUUID": "4ead8b8d-d1a8-4f03-a750-7e12268e119c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "85f35920-2546-408a-8c15-696e3ced9ab3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 194,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "08475781-2c38-4bcc-9932-606b1cf122bf",
              "title": "fabric.getAllUsers",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Lists all users",
                  "fullTitle": "User Management fabric.getAllUsers Lists all users",
                  "timedOut": false,
                  "duration": 204,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.getAllUsers();\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "b6064ebf-d29a-4c97-ae71-77cc2ce2a4ac",
                  "parentUUID": "08475781-2c38-4bcc-9932-606b1cf122bf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b6064ebf-d29a-4c97-ae71-77cc2ce2a4ac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 204,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            },
            {
              "uuid": "5eb6f7bc-09be-422c-9055-8c32661786ce",
              "title": "user.crud_operations",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
              "file": "/lib/async/test/30-user-management.js",
              "beforeHooks": [
                {
                  "title": "\"before each\" hook",
                  "fullTitle": "User Management user.crud_operations \"before each\" hook",
                  "timedOut": false,
                  "duration": 204,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const userName = `user${Date.now()}`;\nconst userEmail = `${userName}@test.com`;\nuser = fabric.user(userName, userEmail);\nawait user.createUser(\"testPass\");",
                  "err": {},
                  "uuid": "7f8c94f4-6b08-41e4-9f84-0931016169d5",
                  "parentUUID": "5eb6f7bc-09be-422c-9055-8c32661786ce",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [
                {
                  "title": "\"after each\" hook",
                  "fullTitle": "User Management user.crud_operations \"after each\" hook",
                  "timedOut": false,
                  "duration": 152,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "try {\n    await user.deleteUser();\n}\ncatch (error) { }",
                  "err": {},
                  "uuid": "395ee28e-c604-43ac-a3c3-a95305ceb8a6",
                  "parentUUID": "5eb6f7bc-09be-422c-9055-8c32661786ce",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "tests": [],
              "suites": [
                {
                  "uuid": "f64bb89f-1069-49de-a0d1-f95a0c72af33",
                  "title": "user.deleteUser",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Deletes a user",
                      "fullTitle": "User Management user.crud_operations user.deleteUser Deletes a user",
                      "timedOut": false,
                      "duration": 309,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.deleteUser();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "7fadb7ce-2b20-4297-af3c-2ac0f2fa048a",
                      "parentUUID": "f64bb89f-1069-49de-a0d1-f95a0c72af33",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "7fadb7ce-2b20-4297-af3c-2ac0f2fa048a"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 309,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "9c3aed1b-26f2-4700-85f0-925817230674",
                  "title": "user.getUserDetails",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Fetches a user",
                      "fullTitle": "User Management user.crud_operations user.getUserDetails Fetches a user",
                      "timedOut": false,
                      "duration": 271,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getUserDeatils();\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "305a6cd5-393a-414a-a20e-29566d67bc38",
                      "parentUUID": "9c3aed1b-26f2-4700-85f0-925817230674",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "305a6cd5-393a-414a-a20e-29566d67bc38"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 271,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "82950f3a-42c0-4a4f-9227-5858352ec2ee",
                  "title": "user.modifyUser",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.modifyUser Modifies a user",
                      "timedOut": false,
                      "duration": 207,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.modifyUser({\n    active: false\n});\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.active).to.be.false;",
                      "err": {},
                      "uuid": "752c15c7-2d3c-49f0-84ed-0ca5e4a27bd2",
                      "parentUUID": "82950f3a-42c0-4a4f-9227-5858352ec2ee",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "752c15c7-2d3c-49f0-84ed-0ca5e4a27bd2"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 207,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "6deeacdd-1b98-40b8-bb6a-60873daf9e12",
                  "title": "user.replaceUser",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "Modifies a user",
                      "fullTitle": "User Management user.crud_operations user.replaceUser Modifies a user",
                      "timedOut": false,
                      "duration": 205,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.replaceUser({\n    passwd: \"test_passwordddd\"\n});\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "ff66cb4d-6f77-436e-991b-13df45bb202c",
                      "parentUUID": "6deeacdd-1b98-40b8-bb6a-60873daf9e12",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "ff66cb4d-6f77-436e-991b-13df45bb202c"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 205,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                },
                {
                  "uuid": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                  "title": "User.FabricAccessOperations",
                  "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/30-user-management.js",
                  "file": "/lib/async/test/30-user-management.js",
                  "beforeHooks": [
                    {
                      "title": "\"before each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"before each\" hook",
                      "timedOut": false,
                      "duration": 204,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await fabric.createFabric(testFabricName, [{ username: user.user }], {\n    dcList: dcList\n});\nfabric.useFabric(testFabricName);",
                      "err": {},
                      "uuid": "d8984cbf-dfa9-4d8e-b584-d5dc1c7caefd",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [
                    {
                      "title": "\"after each\" hook",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations \"after each\" hook",
                      "timedOut": false,
                      "duration": 201,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "fabric.useFabric(\"_system\");\nawait fabric.dropFabric(testFabricName);",
                      "err": {},
                      "uuid": "c1649435-c944-47e2-aa1d-81fbdc630843",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "Lists the accessible databases and their permissions ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions ",
                      "timedOut": false,
                      "duration": 181,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).not.exist;",
                      "err": {},
                      "uuid": "9072f8a0-24d4-43e2-884e-6be567f5799b",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Lists the accessible databases and their permissions with all the collections",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Lists the accessible databases and their permissions with all the collections",
                      "timedOut": false,
                      "duration": 116,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getAllDatabases(true);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result[testFabricName]).to.exist;\nchai_1.expect(response.result[testFabricName].collections).to.exist;",
                      "err": {},
                      "uuid": "44eb3395-7350-42d4-9d92-fd2c40c227ef",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a database ",
                      "timedOut": false,
                      "duration": 201,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.getDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result).to.be.oneOf([\"rw\", \"ro\", \"none\"]);",
                      "err": {},
                      "uuid": "bbcf609c-59f3-46fb-bc22-3c9c4dc32366",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Gets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Gets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 309,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.getCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;",
                      "err": {},
                      "uuid": "8439064b-bbe7-4b2c-9029-b723606b1624",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a database ",
                      "timedOut": false,
                      "duration": 186,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.clearDatabaseAccessLevel(testFabricName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {},
                      "uuid": "cac7fa26-e844-46d1-a4dd-e10f9aa8ffcd",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Clears the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Clears the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 408,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.clearCollectionAccessLevel(testFabricName, collectionName);\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(202);",
                      "err": {
                        "message": "C8Error: database not found",
                        "estack": "C8Error: database not found\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "d818b65a-e54d-4b19-a618-5ff359cda689",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a collection in a database ",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a collection in a database ",
                      "timedOut": false,
                      "duration": 409,
                      "state": "failed",
                      "speed": null,
                      "pass": false,
                      "fail": true,
                      "pending": false,
                      "context": null,
                      "code": "const collectionName = \"TestCollection\";\nawait fabric.collection(collectionName).create();\nconst response = await user.setCollectionAccessLevel(testFabricName, collectionName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}/${collectionName}`]).eq(\"ro\");",
                      "err": {
                        "message": "C8Error: database not found",
                        "estack": "C8Error: database not found\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                        "diff": null
                      },
                      "uuid": "c1739230-5296-4b67-9818-eb8b6de5153e",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "Sets the access level of a database",
                      "fullTitle": "User Management user.crud_operations User.FabricAccessOperations Sets the access level of a database",
                      "timedOut": false,
                      "duration": 209,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const response = await user.setDatabaseAccessLevel(testFabricName, \"ro\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.code).eq(200);\nchai_1.expect(response[`${testFabricName}`]).eq(\"ro\");",
                      "err": {},
                      "uuid": "46a98d35-f4ca-43ce-a254-60ede85b24c7",
                      "parentUUID": "5920b44c-dced-4aa3-ae34-a0d158acc6d8",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "9072f8a0-24d4-43e2-884e-6be567f5799b",
                    "44eb3395-7350-42d4-9d92-fd2c40c227ef",
                    "bbcf609c-59f3-46fb-bc22-3c9c4dc32366",
                    "8439064b-bbe7-4b2c-9029-b723606b1624",
                    "cac7fa26-e844-46d1-a4dd-e10f9aa8ffcd",
                    "46a98d35-f4ca-43ce-a254-60ede85b24c7"
                  ],
                  "failures": [
                    "d818b65a-e54d-4b19-a618-5ff359cda689",
                    "c1739230-5296-4b67-9818-eb8b6de5153e"
                  ],
                  "pending": [],
                  "skipped": [],
                  "duration": 2019,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 20000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 20000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        },
        {
          "uuid": "de8b3be9-aca1-49a9-8988-4c7d74e8e931",
          "title": "manipulating restql",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
          "file": "/lib/async/test/31-restql.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "manipulating restql \"before all\" hook",
              "timedOut": false,
              "duration": 497,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");",
              "err": {},
              "uuid": "64f36205-b820-4c10-a8f2-df4b16cbfd1c",
              "parentUUID": "de8b3be9-aca1-49a9-8988-4c7d74e8e931",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "manipulating restql \"after all\" hook",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "7c6c277a-bafd-4785-aada-4d2fccf0d6c3",
              "parentUUID": "de8b3be9-aca1-49a9-8988-4c7d74e8e931",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "1cd78984-f9dc-4d5a-87c0-e1d4032cde33",
              "title": "fabric.saveQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should save a query",
                  "fullTitle": "manipulating restql fabric.saveQuery should save a query",
                  "timedOut": false,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const queryName = \"testQuery\";\nconst response = await fabric.saveQuery(queryName, {}, \"for coll in _collections return coll\");\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.name).to.equal(queryName);",
                  "err": {},
                  "uuid": "201f1583-63b6-4102-9ac4-4296629437db",
                  "parentUUID": "1cd78984-f9dc-4d5a-87c0-e1d4032cde33",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "201f1583-63b6-4102-9ac4-4296629437db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 125,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "88fb4403-847e-4c00-abda-35f6edda58d6",
              "title": "fabric.listSavedQueries",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should make a successful API call",
                  "fullTitle": "manipulating restql fabric.listSavedQueries should make a successful API call",
                  "timedOut": false,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const response = await fabric.listSavedQueries();\nchai_1.expect(response.error).to.be.false;\nchai_1.expect(response.result.length).to.be.at.least(1);",
                  "err": {},
                  "uuid": "e7fdb866-c4d8-411d-9820-6622b76a6a8c",
                  "parentUUID": "88fb4403-847e-4c00-abda-35f6edda58d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e7fdb866-c4d8-411d-9820-6622b76a6a8c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 125,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "522125fc-b9cc-4d9b-9890-e2a44d7d2025",
              "title": "fabric.executeSavedQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery \"before all\" hook",
                  "timedOut": false,
                  "duration": 123,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.executeSavedQuery(queryName, {});",
                  "err": {},
                  "uuid": "447721b0-e21c-4190-9727-545f91c2a056",
                  "parentUUID": "522125fc-b9cc-4d9b-9890-e2a44d7d2025",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should execute a saved query",
                  "fullTitle": "manipulating restql fabric.executeSavedQuery should execute a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "c2dd548d-9106-4e32-b26f-c1b65f80d769",
                  "parentUUID": "522125fc-b9cc-4d9b-9890-e2a44d7d2025",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2dd548d-9106-4e32-b26f-c1b65f80d769"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "3be76dc3-3550-435e-bf51-b932ef1de986",
              "title": "fabric.deleteSavedQuery",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.deleteSavedQuery should delete a saved query",
                  "timedOut": false,
                  "duration": 203,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "response = await fabric.deleteSavedQuery(queryName);\nchai_1.expect(response.error).to.be.false;",
                  "err": {},
                  "uuid": "f67c94cb-bd35-45aa-b298-27a50386254d",
                  "parentUUID": "3be76dc3-3550-435e-bf51-b932ef1de986",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f67c94cb-bd35-45aa-b298-27a50386254d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 203,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "224c49c2-e61d-4915-af86-630afb72f0ad",
              "title": "fabric.createRestqlCursor",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/31-restql.js",
              "file": "/lib/async/test/31-restql.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete a saved query",
                  "fullTitle": "manipulating restql fabric.createRestqlCursor should delete a saved query",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": true,
                  "context": null,
                  "code": "",
                  "err": {},
                  "uuid": "9059595f-e551-4402-be0d-8e178e9c1254",
                  "parentUUID": "224c49c2-e61d-4915-af86-630afb72f0ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [
                "9059595f-e551-4402-be0d-8e178e9c1254"
              ],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "63fadd91-d7aa-416f-a437-f7fccfdeb51a",
          "title": "Manipulating pipelines",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
          "file": "/lib/async/test/32-pipelines.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Manipulating pipelines \"before all\" hook",
              "timedOut": false,
              "duration": 564,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric = new jsC8_1.Fabric({\n    url: testUrl,\n    c8Version: Number(process.env.C8_VERSION || 30400)\n});\nawait fabric.login(\"guest@macrometa.io\", \"guest\");\nfabric.useTenant(\"guest\");\nfabric.useFabric(\"_system\");",
              "err": {},
              "uuid": "c15da822-3f6f-4a47-8122-e5f19e1ccf06",
              "parentUUID": "63fadd91-d7aa-416f-a437-f7fccfdeb51a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "Manipulating pipelines \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fabric.close();",
              "err": {},
              "uuid": "d9a50bc2-8ea4-43c7-906b-213f241da125",
              "parentUUID": "63fadd91-d7aa-416f-a437-f7fccfdeb51a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "7db74710-7ea5-4328-8abf-c282c253a739",
              "title": "fabric.getAllPipelines",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "returns an empty array or an array of all pipelines",
                  "fullTitle": "Manipulating pipelines fabric.getAllPipelines returns an empty array or an array of all pipelines",
                  "timedOut": false,
                  "duration": 270,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dcList = await fabric.getAllEdgeLocations();\nconst regions = helper_1.getDCListString(dcList).split(',');\nconst isEnabled = false;\nconst config = {\n    \"input\": {\n        \"type\": \"c8db\",\n        \"c8db\": {\n            \"name\": \"collection_namepl1\"\n        }\n    },\n    \"output\": {\n        \"type\": \"c8streams\",\n        \"c8streams\": {\n            \"name\": \"stream_namepl1\",\n            \"local\": true\n        }\n    }\n};\nconst result = await fabric.getPipelines();\nconst allPipelines = result.result;\nconst pipelinesCount = allPipelines.length;\nchai_1.expect(allPipelines).to.be.an('array');\nconst pipeline = fabric.pipeline('testPipeline');\nawait pipeline.create(regions, isEnabled, config);\nconst updatedResult = await fabric.getPipelines();\nconst updatedAllPipelines = updatedResult.result;\nconst expectedPipelinesCount = pipelinesCount + 1;\nchai_1.expect(updatedAllPipelines.length).to.equal(expectedPipelinesCount);",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "c46bc5d6-f1d2-4cad-be53-326738efbad3",
                  "parentUUID": "7db74710-7ea5-4328-8abf-c282c253a739",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "c46bc5d6-f1d2-4cad-be53-326738efbad3"
              ],
              "pending": [],
              "skipped": [],
              "duration": 270,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "630feea4-c4a7-4927-8fae-5f35227e111c",
              "title": "pipeline.create",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "creates a new pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.create creates a new pipeline",
                  "timedOut": false,
                  "duration": 392,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const dcList = await fabric.getAllEdgeLocations();\nconst regions = helper_1.getDCListString(dcList).split(',');\nconst isEnabled = false;\nconst config = {\n    \"input\": {\n        \"type\": \"c8db\",\n        \"c8db\": {\n            \"name\": \"collection_namepl2\"\n        }\n    },\n    \"output\": {\n        \"type\": \"c8streams\",\n        \"c8streams\": {\n            \"name\": \"stream_namepl2\",\n            \"local\": true\n        }\n    }\n};\nconst pipeline = fabric.pipeline('testPipeline2');\nconst response = await pipeline.create(regions, isEnabled, config);\nchai_1.expect(response.error).to.be.false;",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "f8dfa987-c775-46e8-95cb-01c64dc75bfd",
                  "parentUUID": "630feea4-c4a7-4927-8fae-5f35227e111c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "f8dfa987-c775-46e8-95cb-01c64dc75bfd"
              ],
              "pending": [],
              "skipped": [],
              "duration": 392,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "c7fd95eb-a472-4e43-8f55-aeb794f02485",
              "title": "pipeline.drop",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "deletes an existing pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.drop deletes an existing pipeline",
                  "timedOut": false,
                  "duration": 201,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const resultObject = await fabric.getPipelines();\nconst allPipelines = resultObject.result;\nconst pipelineName = allPipelines[0].name;\nconst pipelinesCount = allPipelines.length;\nconst pipeline = fabric.pipeline(pipelineName);\nawait pipeline.drop();\nconst updatedResultObject = await fabric.getPipelines();\nconst updatedPipelines = updatedResultObject.result;\nconst updatedPipelinesCount = updatedPipelines.length;\nchai_1.expect(updatedPipelinesCount).to.equal(pipelinesCount - 1);",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "2aae98f4-8ab0-47e8-b0b7-5f70cf899951",
                  "parentUUID": "c7fd95eb-a472-4e43-8f55-aeb794f02485",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "2aae98f4-8ab0-47e8-b0b7-5f70cf899951"
              ],
              "pending": [],
              "skipped": [],
              "duration": 201,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "f24333a4-ca7b-49e8-b0ef-188a130add8f",
              "title": "pipeline.details",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetches the details of an existing pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.details fetches the details of an existing pipeline",
                  "timedOut": false,
                  "duration": 213,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const resultObject = await fabric.getPipelines();\nconst allPipelines = resultObject.result;\nconst pipelineName = allPipelines[0].name;\nconst pipeline = fabric.pipeline(pipelineName);\nconst response = await pipeline.details();\nconst result = response.result;\nchai_1.expect(result).to.be.an('object');\nchai_1.expect(result).to.have.property('name');\nchai_1.expect(result).to.have.property('regions');\nchai_1.expect(result).to.have.property('enabled');\nchai_1.expect(result).to.have.property('config');",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "77372968-b448-4685-b732-55b89f179dc8",
                  "parentUUID": "f24333a4-ca7b-49e8-b0ef-188a130add8f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "77372968-b448-4685-b732-55b89f179dc8"
              ],
              "pending": [],
              "skipped": [],
              "duration": 213,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "3e819a5e-fe00-4f2d-b840-234ab175f2a3",
              "title": "pipeline.update",
              "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
              "file": "/lib/async/test/32-pipelines.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "updates an existing pipeline",
                  "fullTitle": "Manipulating pipelines pipeline.update updates an existing pipeline",
                  "timedOut": false,
                  "duration": 298,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const resultObject = await fabric.getPipelines();\nconst allPipelines = resultObject.result;\nconst pipelineName = allPipelines[0].name;\nconst pipeline = fabric.pipeline(pipelineName);\nconst response = await pipeline.details();\nconst { regions, enabled: isEnabled, config } = response.result;\nconst toggleEnabled = !isEnabled;\nconst updatedResultObject = await pipeline.update(regions, toggleEnabled, config);\nchai_1.expect(updatedResultObject.error).to.be.false;\nconst updatedPipeline = fabric.pipeline(pipelineName);\nconst detailsObject = await updatedPipeline.details();\nconst { enabled: updatedEnabledValue } = detailsObject.result;\nchai_1.expect(updatedEnabledValue).to.not.equal(isEnabled);\nchai_1.expect(updatedEnabledValue).to.equal(toggleEnabled);",
                  "err": {
                    "message": "C8Error: 500",
                    "estack": "C8Error: 500\n    at new C8Error (src/error.ts:76:17)\n    at Object.resolve (src/connection.ts:358:20)\n    at _hosts.(anonymous function) (src/connection.ts:201:16)\n    at IncomingMessage.res.on (src/util/request.node.ts:82:15)\n    at endReadableNT (_stream_readable.js:1145:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                    "diff": null
                  },
                  "uuid": "54df7d8b-31b0-4a04-b5dd-f0e070db5f9e",
                  "parentUUID": "3e819a5e-fe00-4f2d-b840-234ab175f2a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "54df7d8b-31b0-4a04-b5dd-f0e070db5f9e"
              ],
              "pending": [],
              "skipped": [],
              "duration": 298,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "4d587b3b-151a-4477-8dfa-d273a8c471c0",
          "title": "fabric.route",
          "fullFile": "/home/abhishek/Documents/Macrometa/jsC8/lib/async/test/32-pipelines.js",
          "file": "/lib/async/test/32-pipelines.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "returns a Route instance",
              "fullTitle": "fabric.route returns a Route instance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route();\nchai_1.expect(route).to.be.an.instanceof(route_1.Route);",
              "err": {},
              "uuid": "b5c92287-64b1-4357-99c8-cef64168c35c",
              "parentUUID": "4d587b3b-151a-4477-8dfa-d273a8c471c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creates a route for the given path",
              "fullTitle": "fabric.route creates a route for the given path",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const path = \"/hi\";\nconst route = fabric.route(path);\nchai_1.expect(route._path).to.equal(path);",
              "err": {},
              "uuid": "f2e645cd-a43f-43f9-88a8-40a3d1ba81be",
              "parentUUID": "4d587b3b-151a-4477-8dfa-d273a8c471c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "passes the given headers to the new route",
              "fullTitle": "fabric.route passes the given headers to the new route",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const route = fabric.route(\"/hello\", { \"x-magic\": \"awesome\" });\nchai_1.expect(route._headers).to.have.property(\"x-magic\", \"awesome\");",
              "err": {},
              "uuid": "32ae1e8b-8c40-4b76-9466-1652e9e1f355",
              "parentUUID": "4d587b3b-151a-4477-8dfa-d273a8c471c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b5c92287-64b1-4357-99c8-cef64168c35c",
            "f2e645cd-a43f-43f9-88a8-40a3d1ba81be",
            "32ae1e8b-8c40-4b76-9466-1652e9e1f355"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 20000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "6e637b85-8feb-4930-b2f5-3cb69e3ecf6f"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 20000
    }
  ],
  "meta": {
    "mocha": {
      "version": "5.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {},
      "version": "4.1.0"
    }
  }
}